

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Dec 12 21:56:40 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  0041CC                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _decimal
   101  0041CC  0A3D               	dw	2621
   102  0041CE  408F               	dw	16527
   103                           
   104                           ;initializer for _entero
   105  0041D0  0014               	dw	20
   106  0000                     _TRISC	set	3988
   107  0000                     _RC1	set	31761
   108  0000                     _RC0	set	31760
   109  0000                     _RC6	set	31766
   110  0000                     _RC5	set	31765
   111  0000                     _RC4	set	31764
   112  0000                     _RC2	set	31762
   113                           
   114                           	psect	smallconst
   115  000800                     __psmallconst:
   116                           	callstack 0
   117  000800  00                 	db	0
   118  000801                     STR_6:
   119  000801  2A                 	db	42
   120  000802  2A                 	db	42
   121  000803  2A                 	db	42
   122  000804  53                 	db	83	;'S'
   123  000805  55                 	db	85	;'U'
   124  000806  53                 	db	83	;'S'
   125  000807  43                 	db	67	;'C'
   126  000808  52                 	db	82	;'R'
   127  000809  49                 	db	73	;'I'
   128  00080A  42                 	db	66	;'B'
   129  00080B  45                 	db	69	;'E'
   130  00080C  54                 	db	84	;'T'
   131  00080D  45                 	db	69	;'E'
   132  00080E  2A                 	db	42
   133  00080F  2A                 	db	42
   134  000810  2A                 	db	42
   135  000811  00                 	db	0
   136  000812                     STR_5:
   137  000812  2A                 	db	42
   138  000813  2A                 	db	42
   139  000814  2A                 	db	42
   140  000815  45                 	db	69	;'E'
   141  000816  4C                 	db	76	;'L'
   142  000817  45                 	db	69	;'E'
   143  000818  43                 	db	67	;'C'
   144  000819  54                 	db	84	;'T'
   145  00081A  52                 	db	82	;'R'
   146  00081B  4F                 	db	79	;'O'
   147  00081C  4E                 	db	78	;'N'
   148  00081D  49                 	db	73	;'I'
   149  00081E  43                 	db	67	;'C'
   150  00081F  41                 	db	65	;'A'
   151  000820  2A                 	db	42
   152  000821  2A                 	db	42
   153  000822  00                 	db	0
   154  000823                     STR_7:
   155  000823  2A                 	db	42
   156  000824  50                 	db	80	;'P'
   157  000825  49                 	db	73	;'I'
   158  000826  43                 	db	67	;'C'
   159  000827  20                 	db	32
   160  000828  2D                 	db	45
   161  000829  20                 	db	32
   162  00082A  41                 	db	65	;'A'
   163  00082B  52                 	db	82	;'R'
   164  00082C  44                 	db	68	;'D'
   165  00082D  55                 	db	85	;'U'
   166  00082E  49                 	db	73	;'I'
   167  00082F  4E                 	db	78	;'N'
   168  000830  4F                 	db	79	;'O'
   169  000831  2A                 	db	42
   170  000832  2A                 	db	42
   171  000833  00                 	db	0
   172  000834                     STR_2:
   173  000834  2A                 	db	42
   174  000835  2A                 	db	42
   175  000836  2A                 	db	42
   176  000837  2A                 	db	42
   177  000838  2A                 	db	42
   178  000839  2A                 	db	42
   179  00083A  58                 	db	88	;'X'
   180  00083B  43                 	db	67	;'C'
   181  00083C  38                 	db	56	;'8'
   182  00083D  2A                 	db	42
   183  00083E  2A                 	db	42
   184  00083F  2A                 	db	42
   185  000840  2A                 	db	42
   186  000841  2A                 	db	42
   187  000842  2A                 	db	42
   188  000843  00                 	db	0
   189  000844                     STR_1:
   190  000844  2A                 	db	42
   191  000845  2A                 	db	42
   192  000846  49                 	db	73	;'I'
   193  000847  44                 	db	68	;'D'
   194  000848  45                 	db	69	;'E'
   195  000849  20                 	db	32
   196  00084A  4D                 	db	77	;'M'
   197  00084B  50                 	db	80	;'P'
   198  00084C  4C                 	db	76	;'L'
   199  00084D  41                 	db	65	;'A'
   200  00084E  42                 	db	66	;'B'
   201  00084F  20                 	db	32
   202  000850  58                 	db	88	;'X'
   203  000851  2A                 	db	42
   204  000852  2A                 	db	42
   205  000853  00                 	db	0
   206  000854                     STR_4:
   207  000854  20                 	db	32
   208  000855  20                 	db	32
   209  000856  20                 	db	32
   210  000857  50                 	db	80	;'P'
   211  000858  49                 	db	73	;'I'
   212  000859  43                 	db	67	;'C'
   213  00085A  20                 	db	32
   214  00085B  31                 	db	49	;'1'
   215  00085C  38                 	db	56	;'8'
   216  00085D  46                 	db	70	;'F'
   217  00085E  34                 	db	52	;'4'
   218  00085F  35                 	db	53	;'5'
   219  000860  35                 	db	53	;'5'
   220  000861  30                 	db	48	;'0'
   221  000862  00                 	db	0
   222  000863                     STR_8:
   223  000863  46                 	db	70	;'F'
   224  000864  6C                 	db	108	;'l'
   225  000865  6F                 	db	111	;'o'
   226  000866  61                 	db	97	;'a'
   227  000867  74                 	db	116	;'t'
   228  000868  3A                 	db	58	;':'
   229  000869  20                 	db	32
   230  00086A  25                 	db	37
   231  00086B  30                 	db	48	;'0'
   232  00086C  33                 	db	51	;'3'
   233  00086D  2E                 	db	46
   234  00086E  32                 	db	50	;'2'
   235  00086F  66                 	db	102	;'f'
   236  000870  00                 	db	0
   237  000871                     STR_3:
   238  000871  20                 	db	32
   239  000872  20                 	db	32
   240  000873  20                 	db	32
   241  000874  4A                 	db	74	;'J'
   242  000875  6F                 	db	111	;'o'
   243  000876  72                 	db	114	;'r'
   244  000877  67                 	db	103	;'g'
   245  000878  65                 	db	101	;'e'
   246  000879  20                 	db	32
   247  00087A  41                 	db	65	;'A'
   248  00087B  50                 	db	80	;'P'
   249  00087C  43                 	db	67	;'C'
   250  00087D  00                 	db	0
   251  00087E                     STR_9:
   252  00087E  49                 	db	73	;'I'
   253  00087F  6E                 	db	110	;'n'
   254  000880  74                 	db	116	;'t'
   255  000881  3A                 	db	58	;':'
   256  000882  20                 	db	32
   257  000883  25                 	db	37
   258  000884  64                 	db	100	;'d'
   259  000885  00                 	db	0
   260  000886                     STR_10:
   261  000886  49                 	db	73	;'I'
   262  000887  4E                 	db	78	;'N'
   263  000888  46                 	db	70	;'F'
   264  000889  00                 	db	0
   265  00088A                     STR_14:
   266  00088A  4E                 	db	78	;'N'
   267  00088B  41                 	db	65	;'A'
   268  00088C  4E                 	db	78	;'N'
   269  00088D  00                 	db	0
   270  00088E                     STR_11:
   271  00088E  69                 	db	105	;'i'
   272  00088F  6E                 	db	110	;'n'
   273  000890  66                 	db	102	;'f'
   274  000891  00                 	db	0
   275  000892                     STR_15:
   276  000892  6E                 	db	110	;'n'
   277  000893  61                 	db	97	;'a'
   278  000894  6E                 	db	110	;'n'
   279  000895  00                 	db	0
   280  000896                     STR_18:
   281  000896  6C                 	db	108	;'l'
   282  000897  66                 	db	102	;'f'
   283  000898  00                 	db	0
   284  000899  00                 	db	0	; dummy byte at the end
   285  0000                     
   286                           ; #config settings
   287                           
   288                           	psect	cinit
   289  003FC4                     __pcinit:
   290                           	callstack 0
   291  003FC4                     start_initialization:
   292                           	callstack 0
   293  003FC4                     __initialization:
   294                           	callstack 0
   295                           
   296                           ; Initialize objects allocated to BANK0 (6 bytes)
   297                           ; load TBLPTR registers with __pidataBANK0
   298  003FC4  0ECC               	movlw	low __pidataBANK0
   299  003FC6  6EF6               	movwf	tblptrl,c
   300  003FC8  0E41               	movlw	high __pidataBANK0
   301  003FCA  6EF7               	movwf	tblptrh,c
   302  003FCC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   303  003FCE  6EF8               	movwf	tblptru,c
   304  003FD0  EE00  F0DC         	lfsr	0,__pdataBANK0
   305  003FD4  EE10 F006          	lfsr	1,6
   306  003FD8                     copy_data0:
   307  003FD8  0009               	tblrd		*+
   308  003FDA  CFF5 FFEE          	movff	tablat,postinc0
   309  003FDE  50E5               	movf	postdec1,w,c
   310  003FE0  50E1               	movf	fsr1l,w,c
   311  003FE2  E1FA               	bnz	copy_data0
   312                           
   313                           ; Clear objects allocated to BANK1 (80 bytes)
   314  003FE4  EE01  F000         	lfsr	0,__pbssBANK1
   315  003FE8  0E50               	movlw	80
   316  003FEA                     clear_0:
   317  003FEA  6AEE               	clrf	postinc0,c
   318  003FEC  06E8               	decf	wreg,f,c
   319  003FEE  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to BANK0 (36 bytes)
   322  003FF0  EE00  F0B8         	lfsr	0,__pbssBANK0
   323  003FF4  0E24               	movlw	36
   324  003FF6                     clear_1:
   325  003FF6  6AEE               	clrf	postinc0,c
   326  003FF8  06E8               	decf	wreg,f,c
   327  003FFA  E1FD               	bnz	clear_1
   328  003FFC                     end_of_initialization:
   329                           	callstack 0
   330  003FFC                     __end_of__initialization:
   331                           	callstack 0
   332  003FFC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   333  003FFE  6EF8               	movwf	tblptru,c
   334  004000  0100               	movlb	0
   335  004002  EFA2  F015         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssBANK0
   338  0000B8                     __pbssBANK0:
   339                           	callstack 0
   340  0000B8                     floorf@F527:
   341                           	callstack 0
   342  0000B8                     	ds	4
   343  0000BC                     ___fpclassifyf@F465:
   344                           	callstack 0
   345  0000BC                     	ds	4
   346  0000C0                     _nout:
   347                           	callstack 0
   348  0000C0                     	ds	2
   349  0000C2                     _width:
   350                           	callstack 0
   351  0000C2                     	ds	2
   352  0000C4                     _prec:
   353                           	callstack 0
   354  0000C4                     	ds	2
   355  0000C6                     _flags:
   356                           	callstack 0
   357  0000C6                     	ds	2
   358  0000C8                     _buffer_lcd:
   359                           	callstack 0
   360  0000C8                     	ds	20
   361                           
   362                           	psect	dataBANK0
   363  0000DC                     __pdataBANK0:
   364                           	callstack 0
   365  0000DC                     _decimal:
   366                           	callstack 0
   367  0000DC                     	ds	4
   368  0000E0                     _entero:
   369                           	callstack 0
   370  0000E0                     	ds	2
   371                           
   372                           	psect	bssBANK1
   373  000100                     __pbssBANK1:
   374                           	callstack 0
   375  000100                     _dbuf:
   376                           	callstack 0
   377  000100                     	ds	80
   378                           
   379                           	psect	cstackBANK0
   380  000060                     __pcstackBANK0:
   381                           	callstack 0
   382  000060                     _efgtoa$668:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x0
   386  000060                     	ds	2
   387  000062                     _efgtoa$669:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2
   391  000062                     	ds	2
   392  000064                     _efgtoa$673:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x4
   396  000064                     	ds	2
   397  000066                     _efgtoa$677:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x6
   401  000066                     	ds	2
   402  000068                     _efgtoa$678:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x8
   406  000068                     	ds	2
   407  00006A                     _efgtoa$679:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0xA
   411  00006A                     	ds	2
   412  00006C                     efgtoa@t:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xC
   416  00006C                     	ds	2
   417  00006E                     efgtoa@pp:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0xE
   421  00006E                     	ds	2
   422  000070                     efgtoa@ne:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x10
   426  000070                     	ds	2
   427  000072                     efgtoa@m:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x12
   431  000072                     	ds	2
   432  000074                     efgtoa@ou:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x14
   436  000074                     	ds	4
   437  000078                     efgtoa@d:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x18
   441  000078                     	ds	2
   442  00007A                     efgtoa@sign:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x1A
   446  00007A                     	ds	2
   447  00007C                     efgtoa@p:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x1C
   451  00007C                     	ds	2
   452  00007E                     efgtoa@w:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x1E
   456  00007E                     	ds	2
   457  000080                     efgtoa@nmode:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x20
   461  000080                     	ds	1
   462  000081                     efgtoa@mode:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x21
   466  000081                     	ds	1
   467  000082                     efgtoa@h:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x22
   471  000082                     	ds	4
   472  000086                     efgtoa@l:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x26
   476  000086                     	ds	4
   477  00008A                     efgtoa@i:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x2A
   481  00008A                     	ds	2
   482  00008C                     efgtoa@g:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x2C
   486  00008C                     	ds	4
   487  000090                     efgtoa@e:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x30
   491  000090                     	ds	2
   492  000092                     efgtoa@n:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x32
   496  000092                     	ds	2
   497  000094                     efgtoa@u:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x34
   501  000094                     	ds	4
   502  000098                     vfpfcnvrt@ll:
   503                           	callstack 0
   504                           
   505                           ; 8 bytes @ 0x38
   506  000098                     	ds	8
   507  0000A0                     vfpfcnvrt@done:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x40
   511  0000A0                     	ds	2
   512  0000A2                     _vfpfcnvrt$693:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x42
   516  0000A2                     	ds	2
   517  0000A4                     _vfpfcnvrt$694:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x44
   521  0000A4                     	ds	2
   522  0000A6                     _vfpfcnvrt$699:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x46
   526  0000A6                     	ds	2
   527  0000A8                     vfpfcnvrt@f:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x48
   531  0000A8                     	ds	4
   532  0000AC                     vfpfcnvrt@ct:
   533                           	callstack 0
   534                           
   535                           ; 3 bytes @ 0x4C
   536  0000AC                     	ds	3
   537  0000AF                     vfpfcnvrt@c:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x4F
   541  0000AF                     	ds	1
   542  0000B0                     ?_sprintf:
   543                           	callstack 0
   544  0000B0                     sprintf@s:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x50
   548  0000B0                     	ds	2
   549  0000B2                     sprintf@fmt:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x52
   553  0000B2                     	ds	6
   554                           
   555                           	psect	cstackCOMRAM
   556  000001                     __pcstackCOMRAM:
   557                           	callstack 0
   558  000001                     ?_strlen:
   559                           	callstack 0
   560  000001                     ?___fpclassifyf:
   561                           	callstack 0
   562  000001                     ?_isupper:
   563                           	callstack 0
   564  000001                     ?_isdigit:
   565                           	callstack 0
   566  000001                     ?_strncmp:
   567                           	callstack 0
   568  000001                     ?_isspace:
   569                           	callstack 0
   570  000001                     ?___wmul:
   571                           	callstack 0
   572  000001                     ?___awdiv:
   573                           	callstack 0
   574  000001                     ?___awmod:
   575                           	callstack 0
   576  000001                     ?___fladd:
   577                           	callstack 0
   578  000001                     ?___fldiv:
   579                           	callstack 0
   580  000001                     ?___flmul:
   581                           	callstack 0
   582  000001                     ?___flneg:
   583                           	callstack 0
   584  000001                     ?___fltol:
   585                           	callstack 0
   586  000001                     ?___aodiv:
   587                           	callstack 0
   588  000001                     ?___aomod:
   589                           	callstack 0
   590  000001                     Lcd_Port@a:
   591                           	callstack 0
   592  000001                     ___wmul@multiplier:
   593                           	callstack 0
   594  000001                     ___awdiv@dividend:
   595                           	callstack 0
   596  000001                     ___awmod@dividend:
   597                           	callstack 0
   598  000001                     isdigit@c:
   599                           	callstack 0
   600  000001                     isspace@c:
   601                           	callstack 0
   602  000001                     isupper@c:
   603                           	callstack 0
   604  000001                     fputc@c:
   605                           	callstack 0
   606  000001                     strcpy@dest:
   607                           	callstack 0
   608  000001                     strlen@s:
   609                           	callstack 0
   610  000001                     strncmp@_l:
   611                           	callstack 0
   612  000001                     ___fleq@ff1:
   613                           	callstack 0
   614  000001                     ___flneg@f1:
   615                           	callstack 0
   616  000001                     ___fltol@f1:
   617                           	callstack 0
   618  000001                     ___fladd@b:
   619                           	callstack 0
   620  000001                     ___fldiv@b:
   621                           	callstack 0
   622  000001                     ___flmul@b:
   623                           	callstack 0
   624  000001                     ___fpclassifyf@x:
   625                           	callstack 0
   626  000001                     ___aodiv@dividend:
   627                           	callstack 0
   628  000001                     ___aomod@dividend:
   629                           	callstack 0
   630                           
   631                           ; 8 bytes @ 0x0
   632  000001                     	ds	1
   633  000002                     ??_Lcd_Cmd:
   634  000002                     lcd_write_char@temp:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x1
   638  000002                     	ds	1
   639  000003                     ??_isupper:
   640  000003                     ??_isdigit:
   641  000003                     ??_isspace:
   642  000003                     Lcd_Cmd@a:
   643                           	callstack 0
   644  000003                     lcd_write_char@y:
   645                           	callstack 0
   646  000003                     ___wmul@multiplicand:
   647                           	callstack 0
   648  000003                     ___awdiv@divisor:
   649                           	callstack 0
   650  000003                     ___awmod@divisor:
   651                           	callstack 0
   652  000003                     fputc@fp:
   653                           	callstack 0
   654  000003                     strcpy@src:
   655                           	callstack 0
   656  000003                     strlen@a:
   657                           	callstack 0
   658  000003                     strncmp@_r:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x2
   662  000003                     	ds	1
   663  000004                     ??_lcd_init:
   664  000004                     lcd_gotoxy@b:
   665                           	callstack 0
   666  000004                     lcd_write_char@a:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x3
   670  000004                     	ds	1
   671  000005                     ??_fputc:
   672  000005                     ??___fpclassifyf:
   673  000005                     ??_strcpy:
   674  000005                     ??___fltol:
   675  000005                     lcd_gotoxy@a:
   676                           	callstack 0
   677  000005                     ___awdiv@counter:
   678                           	callstack 0
   679  000005                     ___awmod@counter:
   680                           	callstack 0
   681  000005                     lcd_putc@a:
   682                           	callstack 0
   683  000005                     ___wmul@product:
   684                           	callstack 0
   685  000005                     strncmp@n:
   686                           	callstack 0
   687  000005                     ___fleq@ff2:
   688                           	callstack 0
   689  000005                     ___fladd@a:
   690                           	callstack 0
   691  000005                     ___fldiv@a:
   692                           	callstack 0
   693  000005                     ___flmul@a:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x4
   697  000005                     	ds	1
   698  000006                     lcd_gotoxy@z:
   699                           	callstack 0
   700  000006                     ___awdiv@sign:
   701                           	callstack 0
   702  000006                     ___awmod@sign:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x5
   706  000006                     	ds	1
   707  000007                     ??_strncmp:
   708  000007                     ??_lcd_putc:
   709  000007                     ?_tolower:
   710                           	callstack 0
   711  000007                     lcd_gotoxy@y:
   712                           	callstack 0
   713  000007                     _isspace$766:
   714                           	callstack 0
   715  000007                     ___awdiv@quotient:
   716                           	callstack 0
   717  000007                     strcpy@s:
   718                           	callstack 0
   719  000007                     tolower@c:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x6
   723  000007                     	ds	1
   724  000008                     ?_atoi:
   725                           	callstack 0
   726  000008                     lcd_gotoxy@temp:
   727                           	callstack 0
   728  000008                     atoi@s:
   729                           	callstack 0
   730  000008                     strncmp@l:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x7
   734  000008                     	ds	1
   735  000009                     ??___fladd:
   736  000009                     ??___fldiv:
   737  000009                     ??___flmul:
   738  000009                     ??_tolower:
   739  000009                     ??___fleq:
   740  000009                     ___fltol@sign1:
   741                           	callstack 0
   742  000009                     lcd_putc@i:
   743                           	callstack 0
   744  000009                     ___fpclassifyf@e:
   745                           	callstack 0
   746  000009                     strcpy@d:
   747                           	callstack 0
   748  000009                     ___aodiv@divisor:
   749                           	callstack 0
   750  000009                     ___aomod@divisor:
   751                           	callstack 0
   752                           
   753                           ; 8 bytes @ 0x8
   754  000009                     	ds	1
   755  00000A                     ??_atoi:
   756  00000A                     ___fltol@exp1:
   757                           	callstack 0
   758  00000A                     fputs@s:
   759                           	callstack 0
   760  00000A                     strncmp@r:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x9
   764  00000A                     	ds	1
   765  00000B                     ___fpclassifyf@u:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0xA
   769  00000B                     	ds	1
   770  00000C                     fputs@fp:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0xB
   774  00000C                     	ds	1
   775  00000D                     ___fladd@signs:
   776                           	callstack 0
   777  00000D                     ___flmul@sign:
   778                           	callstack 0
   779  00000D                     _tolower$830:
   780                           	callstack 0
   781  00000D                     ___fldiv@rem:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0xC
   785  00000D                     	ds	1
   786  00000E                     ___fladd@aexp:
   787                           	callstack 0
   788  00000E                     fputs@c:
   789                           	callstack 0
   790  00000E                     atoi@neg:
   791                           	callstack 0
   792  00000E                     ___flmul@grs:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0xD
   796  00000E                     	ds	1
   797  00000F                     ___fladd@bexp:
   798                           	callstack 0
   799  00000F                     fputs@i:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0xE
   803  00000F                     	ds	1
   804  000010                     ___fladd@grs:
   805                           	callstack 0
   806  000010                     _atoi$735:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0xF
   810  000010                     	ds	1
   811  000011                     ?_pad:
   812                           	callstack 0
   813  000011                     ___aodiv@counter:
   814                           	callstack 0
   815  000011                     ___aomod@counter:
   816                           	callstack 0
   817  000011                     ___fldiv@sign:
   818                           	callstack 0
   819  000011                     pad@fp:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x10
   823  000011                     	ds	1
   824  000012                     ___aodiv@sign:
   825                           	callstack 0
   826  000012                     ___aomod@sign:
   827                           	callstack 0
   828  000012                     ___flmul@aexp:
   829                           	callstack 0
   830  000012                     ___fldiv@new_exp:
   831                           	callstack 0
   832  000012                     _atoi$737:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x11
   836  000012                     	ds	1
   837  000013                     ?_abs:
   838                           	callstack 0
   839  000013                     ___flmul@bexp:
   840                           	callstack 0
   841  000013                     pad@buf:
   842                           	callstack 0
   843  000013                     abs@a:
   844                           	callstack 0
   845  000013                     ___aodiv@quotient:
   846                           	callstack 0
   847                           
   848                           ; 8 bytes @ 0x12
   849  000013                     	ds	1
   850  000014                     _atoi$736:
   851                           	callstack 0
   852  000014                     ___fldiv@grs:
   853                           	callstack 0
   854  000014                     ___flmul@prod:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x13
   858  000014                     	ds	1
   859  000015                     ??_abs:
   860  000015                     pad@p:
   861                           	callstack 0
   862  000015                     atoi@n:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x14
   866  000015                     	ds	2
   867  000017                     ??_pad:
   868                           
   869                           ; 1 bytes @ 0x16
   870  000017                     	ds	1
   871  000018                     ___fldiv@bexp:
   872                           	callstack 0
   873  000018                     ___flmul@temp:
   874                           	callstack 0
   875  000018                     pad@i:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x17
   879  000018                     	ds	1
   880  000019                     ___fldiv@aexp:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x18
   884  000019                     	ds	1
   885  00001A                     ?___flsub:
   886                           	callstack 0
   887  00001A                     ?_floorf:
   888                           	callstack 0
   889  00001A                     pad@w:
   890                           	callstack 0
   891  00001A                     ___flge@ff1:
   892                           	callstack 0
   893  00001A                     ___flsub@b:
   894                           	callstack 0
   895  00001A                     floorf@x:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x19
   899  00001A                     	ds	2
   900  00001C                     ?_dtoa:
   901                           	callstack 0
   902  00001C                     dtoa@fp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x1B
   906  00001C                     	ds	2
   907  00001E                     ??_floorf:
   908  00001E                     ___flge@ff2:
   909                           	callstack 0
   910  00001E                     ___flsub@a:
   911                           	callstack 0
   912  00001E                     dtoa@d:
   913                           	callstack 0
   914                           
   915                           ; 8 bytes @ 0x1D
   916  00001E                     	ds	4
   917  000022                     ??___flge:
   918                           
   919                           ; 1 bytes @ 0x21
   920  000022                     	ds	2
   921  000024                     floorf@m:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x23
   925  000024                     	ds	2
   926  000026                     ??_dtoa:
   927                           
   928                           ; 1 bytes @ 0x25
   929  000026                     	ds	2
   930  000028                     floorf@e:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x27
   934  000028                     	ds	2
   935  00002A                     floorf@u:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0x29
   939  00002A                     	ds	4
   940  00002E                     ?_efgtoa:
   941                           	callstack 0
   942  00002E                     _dtoa$644:
   943                           	callstack 0
   944  00002E                     efgtoa@fp:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x2D
   948  00002E                     	ds	2
   949  000030                     dtoa@p:
   950                           	callstack 0
   951  000030                     efgtoa@f:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x2F
   955  000030                     	ds	2
   956  000032                     dtoa@w:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x31
   960  000032                     	ds	2
   961  000034                     efgtoa@c:
   962                           	callstack 0
   963  000034                     dtoa@s:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x33
   967  000034                     	ds	1
   968  000035                     ??_efgtoa:
   969                           
   970                           ; 1 bytes @ 0x34
   971  000035                     	ds	1
   972  000036                     dtoa@n:
   973                           	callstack 0
   974                           
   975                           ; 8 bytes @ 0x35
   976  000036                     	ds	8
   977  00003E                     dtoa@i:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3D
   981  00003E                     	ds	2
   982  000040                     ?_vfpfcnvrt:
   983                           	callstack 0
   984  000040                     vfpfcnvrt@fp:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x3F
   988  000040                     	ds	2
   989  000042                     vfpfcnvrt@fmt:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x41
   993  000042                     	ds	2
   994  000044                     vfpfcnvrt@ap:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x43
   998  000044                     	ds	2
   999  000046                     ??_vfpfcnvrt:
  1000                           
  1001                           ; 1 bytes @ 0x45
  1002  000046                     	ds	4
  1003  00004A                     ?_vfprintf:
  1004                           	callstack 0
  1005  00004A                     vfprintf@fp:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x49
  1009  00004A                     	ds	2
  1010  00004C                     vfprintf@fmt:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x4B
  1014  00004C                     	ds	2
  1015  00004E                     vfprintf@ap:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x4D
  1019  00004E                     	ds	2
  1020  000050                     vfprintf@cfmt:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x4F
  1024  000050                     	ds	2
  1025  000052                     
  1026                           ; 1 bytes @ 0x51
  1027  000052                     	ds	2
  1028  000054                     sprintf@ap:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x53
  1032  000054                     	ds	2
  1033  000056                     sprintf@f:
  1034                           	callstack 0
  1035                           
  1036                           ; 6 bytes @ 0x55
  1037  000056                     	ds	6
  1038  00005C                     ??_main:
  1039                           
  1040                           ; 1 bytes @ 0x5B
  1041  00005C                     	ds	2
  1042  00005E                     main@contador:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x5D
  1046  00005E                     	ds	1
  1047                           
  1048 ;;
  1049 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1050 ;;
  1051 ;; *************** function _main *****************
  1052 ;; Defined at:
  1053 ;;		line 80 in file "VendingMachine.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  contador        1   93[COMRAM] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1067 ;;      Params:         0       0       0       0       0       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1069 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1070 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1071 ;;Total ram usage:        3 bytes
  1072 ;; Hardware stack levels required when called:    8
  1073 ;; This function calls:
  1074 ;;		_lcd_clear
  1075 ;;		_lcd_gotoxy
  1076 ;;		_lcd_init
  1077 ;;		_lcd_putc
  1078 ;;		_lcd_shift_left
  1079 ;;		_lcd_shift_right
  1080 ;;		_lcd_write_char
  1081 ;;		_sprintf
  1082 ;; This function is called by:
  1083 ;;		Startup code after reset
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text0
  1088  002B44                     __ptext0:
  1089                           	callstack 0
  1090  002B44                     _main:
  1091                           	callstack 23
  1092  002B44                     
  1093                           ;VendingMachine.c: 82:     unsigned char contador;;VendingMachine.c: 83:     TRISC=0x00;
  1094  002B44  0E00               	movlw	0
  1095  002B46  6E94               	movwf	148,c	;volatile
  1096  002B48                     
  1097                           ;VendingMachine.c: 84:     lcd_init();
  1098  002B48  EC24  F01E         	call	_lcd_init	;wreg free
  1099  002B4C                     l4444:
  1100                           
  1101                           ;VendingMachine.c: 86:     {;VendingMachine.c: 87:         lcd_clear();
  1102  002B4C  ECDF  F020         	call	_lcd_clear	;wreg free
  1103  002B50                     
  1104                           ;VendingMachine.c: 88:         lcd_gotoxy(1,1);
  1105  002B50  0E01               	movlw	1
  1106  002B52  6E04               	movwf	lcd_gotoxy@b^0,c
  1107  002B54  0E01               	movlw	1
  1108  002B56  EC5C  F01E         	call	_lcd_gotoxy
  1109  002B5A                     
  1110                           ;VendingMachine.c: 89:         lcd_putc("**IDE MPLAB X**");
  1111  002B5A  0E44               	movlw	low STR_1
  1112  002B5C  6E05               	movwf	lcd_putc@a^0,c
  1113  002B5E  0E08               	movlw	high STR_1
  1114  002B60  6E06               	movwf	(lcd_putc@a+1)^0,c
  1115  002B62  ECE5  F01D         	call	_lcd_putc	;wreg free
  1116  002B66                     
  1117                           ;VendingMachine.c: 90:         lcd_gotoxy(2,1);
  1118  002B66  0E01               	movlw	1
  1119  002B68  6E04               	movwf	lcd_gotoxy@b^0,c
  1120  002B6A  0E02               	movlw	2
  1121  002B6C  EC5C  F01E         	call	_lcd_gotoxy
  1122  002B70                     
  1123                           ;VendingMachine.c: 91:         lcd_putc("******XC8******");
  1124  002B70  0E34               	movlw	low STR_2
  1125  002B72  6E05               	movwf	lcd_putc@a^0,c
  1126  002B74  0E08               	movlw	high STR_2
  1127  002B76  6E06               	movwf	(lcd_putc@a+1)^0,c
  1128  002B78  ECE5  F01D         	call	_lcd_putc	;wreg free
  1129  002B7C                     
  1130                           ;VendingMachine.c: 92:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1131  002B7C  0E0B               	movlw	11
  1132  002B7E  6E5D               	movwf	(??_main+1)^0,c
  1133  002B80  0E26               	movlw	38
  1134  002B82  6E5C               	movwf	??_main^0,c
  1135  002B84  0E5E               	movlw	94
  1136  002B86                     u5557:
  1137  002B86  2EE8               	decfsz	wreg,f,c
  1138  002B88  D7FE               	bra	u5557
  1139  002B8A  2E5C               	decfsz	??_main^0,f,c
  1140  002B8C  D7FC               	bra	u5557
  1141  002B8E  2E5D               	decfsz	(??_main+1)^0,f,c
  1142  002B90  D7FA               	bra	u5557
  1143  002B92                     
  1144                           ;VendingMachine.c: 93:         lcd_clear();
  1145  002B92  ECDF  F020         	call	_lcd_clear	;wreg free
  1146  002B96                     
  1147                           ;VendingMachine.c: 94:         lcd_gotoxy(1,1);
  1148  002B96  0E01               	movlw	1
  1149  002B98  6E04               	movwf	lcd_gotoxy@b^0,c
  1150  002B9A  0E01               	movlw	1
  1151  002B9C  EC5C  F01E         	call	_lcd_gotoxy
  1152  002BA0                     
  1153                           ;VendingMachine.c: 95:         lcd_putc("   Jorge APC");
  1154  002BA0  0E71               	movlw	low STR_3
  1155  002BA2  6E05               	movwf	lcd_putc@a^0,c
  1156  002BA4  0E08               	movlw	high STR_3
  1157  002BA6  6E06               	movwf	(lcd_putc@a+1)^0,c
  1158  002BA8  ECE5  F01D         	call	_lcd_putc	;wreg free
  1159  002BAC                     
  1160                           ;VendingMachine.c: 96:         lcd_gotoxy(2,1);
  1161  002BAC  0E01               	movlw	1
  1162  002BAE  6E04               	movwf	lcd_gotoxy@b^0,c
  1163  002BB0  0E02               	movlw	2
  1164  002BB2  EC5C  F01E         	call	_lcd_gotoxy
  1165  002BB6                     
  1166                           ;VendingMachine.c: 97:         lcd_putc("   PIC 18F4550");
  1167  002BB6  0E54               	movlw	low STR_4
  1168  002BB8  6E05               	movwf	lcd_putc@a^0,c
  1169  002BBA  0E08               	movlw	high STR_4
  1170  002BBC  6E06               	movwf	(lcd_putc@a+1)^0,c
  1171  002BBE  ECE5  F01D         	call	_lcd_putc	;wreg free
  1172  002BC2                     
  1173                           ;VendingMachine.c: 98:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1174  002BC2  0E15               	movlw	21
  1175  002BC4  6E5D               	movwf	(??_main+1)^0,c
  1176  002BC6  0E4B               	movlw	75
  1177  002BC8  6E5C               	movwf	??_main^0,c
  1178  002BCA  0EBE               	movlw	190
  1179  002BCC                     u5567:
  1180  002BCC  2EE8               	decfsz	wreg,f,c
  1181  002BCE  D7FE               	bra	u5567
  1182  002BD0  2E5C               	decfsz	??_main^0,f,c
  1183  002BD2  D7FC               	bra	u5567
  1184  002BD4  2E5D               	decfsz	(??_main+1)^0,f,c
  1185  002BD6  D7FA               	bra	u5567
  1186  002BD8  D000               	nop2	
  1187  002BDA                     
  1188                           ;VendingMachine.c: 99:         lcd_clear();
  1189  002BDA  ECDF  F020         	call	_lcd_clear	;wreg free
  1190  002BDE                     
  1191                           ;VendingMachine.c: 100:         lcd_gotoxy(1,1);
  1192  002BDE  0E01               	movlw	1
  1193  002BE0  6E04               	movwf	lcd_gotoxy@b^0,c
  1194  002BE2  0E01               	movlw	1
  1195  002BE4  EC5C  F01E         	call	_lcd_gotoxy
  1196  002BE8                     
  1197                           ;VendingMachine.c: 101:         lcd_putc("***ELECTRONICA**");
  1198  002BE8  0E12               	movlw	low STR_5
  1199  002BEA  6E05               	movwf	lcd_putc@a^0,c
  1200  002BEC  0E08               	movlw	high STR_5
  1201  002BEE  6E06               	movwf	(lcd_putc@a+1)^0,c
  1202  002BF0  ECE5  F01D         	call	_lcd_putc	;wreg free
  1203  002BF4                     
  1204                           ;VendingMachine.c: 102:         lcd_gotoxy(2,1);
  1205  002BF4  0E01               	movlw	1
  1206  002BF6  6E04               	movwf	lcd_gotoxy@b^0,c
  1207  002BF8  0E02               	movlw	2
  1208  002BFA  EC5C  F01E         	call	_lcd_gotoxy
  1209  002BFE                     
  1210                           ;VendingMachine.c: 103:         lcd_putc("***SUSCRIBETE***");
  1211  002BFE  0E01               	movlw	low STR_6
  1212  002C00  6E05               	movwf	lcd_putc@a^0,c
  1213  002C02  0E08               	movlw	high STR_6
  1214  002C04  6E06               	movwf	(lcd_putc@a+1)^0,c
  1215  002C06  ECE5  F01D         	call	_lcd_putc	;wreg free
  1216                           
  1217                           ;VendingMachine.c: 105:         for(contador=0;contador<15;contador++)
  1218  002C0A  0E00               	movlw	0
  1219  002C0C  6E5E               	movwf	main@contador^0,c
  1220  002C0E                     l4482:
  1221                           
  1222                           ;VendingMachine.c: 106:         {;VendingMachine.c: 107:             _delay((unsigned lo
      +                          ng)((500)*(8000000/4000.0)));
  1223  002C0E  0E06               	movlw	6
  1224  002C10  6E5D               	movwf	(??_main+1)^0,c
  1225  002C12  0E13               	movlw	19
  1226  002C14  6E5C               	movwf	??_main^0,c
  1227  002C16  0EAE               	movlw	174
  1228  002C18                     u5577:
  1229  002C18  2EE8               	decfsz	wreg,f,c
  1230  002C1A  D7FE               	bra	u5577
  1231  002C1C  2E5C               	decfsz	??_main^0,f,c
  1232  002C1E  D7FC               	bra	u5577
  1233  002C20  2E5D               	decfsz	(??_main+1)^0,f,c
  1234  002C22  D7FA               	bra	u5577
  1235  002C24                     
  1236                           ;VendingMachine.c: 108:             lcd_shift_left();
  1237  002C24  ECD8  F020         	call	_lcd_shift_left	;wreg free
  1238  002C28                     
  1239                           ;VendingMachine.c: 109:         }
  1240  002C28  2A5E               	incf	main@contador^0,f,c
  1241  002C2A  0E0E               	movlw	14
  1242  002C2C  645E               	cpfsgt	main@contador^0,c
  1243  002C2E  EF1B  F016         	goto	u5531
  1244  002C32  EF1D  F016         	goto	u5530
  1245  002C36                     u5531:
  1246  002C36  EF07  F016         	goto	l4482
  1247  002C3A                     u5530:
  1248  002C3A                     
  1249                           ;VendingMachine.c: 111:         for(contador=0;contador<30;contador++)
  1250  002C3A  0E00               	movlw	0
  1251  002C3C  6E5E               	movwf	main@contador^0,c
  1252  002C3E                     l4496:
  1253                           
  1254                           ;VendingMachine.c: 112:         {;VendingMachine.c: 113:             _delay((unsigned lo
      +                          ng)((500)*(8000000/4000.0)));
  1255  002C3E  0E06               	movlw	6
  1256  002C40  6E5D               	movwf	(??_main+1)^0,c
  1257  002C42  0E13               	movlw	19
  1258  002C44  6E5C               	movwf	??_main^0,c
  1259  002C46  0EAE               	movlw	174
  1260  002C48                     u5587:
  1261  002C48  2EE8               	decfsz	wreg,f,c
  1262  002C4A  D7FE               	bra	u5587
  1263  002C4C  2E5C               	decfsz	??_main^0,f,c
  1264  002C4E  D7FC               	bra	u5587
  1265  002C50  2E5D               	decfsz	(??_main+1)^0,f,c
  1266  002C52  D7FA               	bra	u5587
  1267  002C54                     
  1268                           ;VendingMachine.c: 114:             lcd_shift_right();
  1269  002C54  ECD1  F020         	call	_lcd_shift_right	;wreg free
  1270  002C58                     
  1271                           ;VendingMachine.c: 115:         }
  1272  002C58  2A5E               	incf	main@contador^0,f,c
  1273  002C5A  0E1D               	movlw	29
  1274  002C5C  645E               	cpfsgt	main@contador^0,c
  1275  002C5E  EF33  F016         	goto	u5541
  1276  002C62  EF35  F016         	goto	u5540
  1277  002C66                     u5541:
  1278  002C66  EF1F  F016         	goto	l4496
  1279  002C6A                     u5540:
  1280  002C6A                     
  1281                           ;VendingMachine.c: 117:         lcd_clear();
  1282  002C6A  ECDF  F020         	call	_lcd_clear	;wreg free
  1283  002C6E                     
  1284                           ;VendingMachine.c: 118:         lcd_gotoxy(1,1);
  1285  002C6E  0E01               	movlw	1
  1286  002C70  6E04               	movwf	lcd_gotoxy@b^0,c
  1287  002C72  0E01               	movlw	1
  1288  002C74  EC5C  F01E         	call	_lcd_gotoxy
  1289  002C78                     
  1290                           ;VendingMachine.c: 119:         lcd_putc("*PIC - ARDUINO**");
  1291  002C78  0E23               	movlw	low STR_7
  1292  002C7A  6E05               	movwf	lcd_putc@a^0,c
  1293  002C7C  0E08               	movlw	high STR_7
  1294  002C7E  6E06               	movwf	(lcd_putc@a+1)^0,c
  1295  002C80  ECE5  F01D         	call	_lcd_putc	;wreg free
  1296  002C84                     
  1297                           ;VendingMachine.c: 120:         lcd_gotoxy(2,1);
  1298  002C84  0E01               	movlw	1
  1299  002C86  6E04               	movwf	lcd_gotoxy@b^0,c
  1300  002C88  0E02               	movlw	2
  1301  002C8A  EC5C  F01E         	call	_lcd_gotoxy
  1302  002C8E                     
  1303                           ;VendingMachine.c: 121:         lcd_write_char('J');
  1304  002C8E  0E4A               	movlw	74
  1305  002C90  EC77  F020         	call	_lcd_write_char
  1306  002C94                     
  1307                           ;VendingMachine.c: 122:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1308  002C94  0E06               	movlw	6
  1309  002C96  6E5D               	movwf	(??_main+1)^0,c
  1310  002C98  0E13               	movlw	19
  1311  002C9A  6E5C               	movwf	??_main^0,c
  1312  002C9C  0EAE               	movlw	174
  1313  002C9E                     u5597:
  1314  002C9E  2EE8               	decfsz	wreg,f,c
  1315  002CA0  D7FE               	bra	u5597
  1316  002CA2  2E5C               	decfsz	??_main^0,f,c
  1317  002CA4  D7FC               	bra	u5597
  1318  002CA6  2E5D               	decfsz	(??_main+1)^0,f,c
  1319  002CA8  D7FA               	bra	u5597
  1320  002CAA                     
  1321                           ;VendingMachine.c: 123:         lcd_write_char('O');
  1322  002CAA  0E4F               	movlw	79
  1323  002CAC  EC77  F020         	call	_lcd_write_char
  1324  002CB0                     
  1325                           ;VendingMachine.c: 124:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1326  002CB0  0E06               	movlw	6
  1327  002CB2  6E5D               	movwf	(??_main+1)^0,c
  1328  002CB4  0E13               	movlw	19
  1329  002CB6  6E5C               	movwf	??_main^0,c
  1330  002CB8  0EAE               	movlw	174
  1331  002CBA                     u5607:
  1332  002CBA  2EE8               	decfsz	wreg,f,c
  1333  002CBC  D7FE               	bra	u5607
  1334  002CBE  2E5C               	decfsz	??_main^0,f,c
  1335  002CC0  D7FC               	bra	u5607
  1336  002CC2  2E5D               	decfsz	(??_main+1)^0,f,c
  1337  002CC4  D7FA               	bra	u5607
  1338  002CC6                     
  1339                           ;VendingMachine.c: 125:         lcd_write_char('R');
  1340  002CC6  0E52               	movlw	82
  1341  002CC8  EC77  F020         	call	_lcd_write_char
  1342  002CCC                     
  1343                           ;VendingMachine.c: 126:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1344  002CCC  0E06               	movlw	6
  1345  002CCE  6E5D               	movwf	(??_main+1)^0,c
  1346  002CD0  0E13               	movlw	19
  1347  002CD2  6E5C               	movwf	??_main^0,c
  1348  002CD4  0EAE               	movlw	174
  1349  002CD6                     u5617:
  1350  002CD6  2EE8               	decfsz	wreg,f,c
  1351  002CD8  D7FE               	bra	u5617
  1352  002CDA  2E5C               	decfsz	??_main^0,f,c
  1353  002CDC  D7FC               	bra	u5617
  1354  002CDE  2E5D               	decfsz	(??_main+1)^0,f,c
  1355  002CE0  D7FA               	bra	u5617
  1356  002CE2                     
  1357                           ;VendingMachine.c: 127:         lcd_write_char('G');
  1358  002CE2  0E47               	movlw	71
  1359  002CE4  EC77  F020         	call	_lcd_write_char
  1360  002CE8                     
  1361                           ;VendingMachine.c: 128:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1362  002CE8  0E06               	movlw	6
  1363  002CEA  6E5D               	movwf	(??_main+1)^0,c
  1364  002CEC  0E13               	movlw	19
  1365  002CEE  6E5C               	movwf	??_main^0,c
  1366  002CF0  0EAE               	movlw	174
  1367  002CF2                     u5627:
  1368  002CF2  2EE8               	decfsz	wreg,f,c
  1369  002CF4  D7FE               	bra	u5627
  1370  002CF6  2E5C               	decfsz	??_main^0,f,c
  1371  002CF8  D7FC               	bra	u5627
  1372  002CFA  2E5D               	decfsz	(??_main+1)^0,f,c
  1373  002CFC  D7FA               	bra	u5627
  1374  002CFE                     
  1375                           ;VendingMachine.c: 129:         lcd_write_char('E');
  1376  002CFE  0E45               	movlw	69
  1377  002D00  EC77  F020         	call	_lcd_write_char
  1378  002D04                     
  1379                           ;VendingMachine.c: 130:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1380  002D04  0E15               	movlw	21
  1381  002D06  6E5D               	movwf	(??_main+1)^0,c
  1382  002D08  0E4B               	movlw	75
  1383  002D0A  6E5C               	movwf	??_main^0,c
  1384  002D0C  0EBE               	movlw	190
  1385  002D0E                     u5637:
  1386  002D0E  2EE8               	decfsz	wreg,f,c
  1387  002D10  D7FE               	bra	u5637
  1388  002D12  2E5C               	decfsz	??_main^0,f,c
  1389  002D14  D7FC               	bra	u5637
  1390  002D16  2E5D               	decfsz	(??_main+1)^0,f,c
  1391  002D18  D7FA               	bra	u5637
  1392  002D1A  D000               	nop2	
  1393  002D1C                     
  1394                           ;VendingMachine.c: 131:         lcd_clear();
  1395  002D1C  ECDF  F020         	call	_lcd_clear	;wreg free
  1396  002D20                     
  1397                           ;VendingMachine.c: 132:         sprintf(buffer_lcd,"Float: %03.2f", decimal);
  1398  002D20  0EC8               	movlw	low _buffer_lcd
  1399  002D22  0100               	movlb	0	; () banked
  1400  002D24  6FB0               	movwf	sprintf@s& (0+255),b
  1401  002D26  0E00               	movlw	high _buffer_lcd
  1402  002D28  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1403  002D2A  0E63               	movlw	low STR_8
  1404  002D2C  6FB2               	movwf	sprintf@fmt& (0+255),b
  1405  002D2E  0E08               	movlw	high STR_8
  1406  002D30  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1407  002D32  0E3D               	movlw	61
  1408  002D34  6FB4               	movwf	(?_sprintf+4)& (0+255),b
  1409  002D36  0E0A               	movlw	10
  1410  002D38  6FB5               	movwf	(?_sprintf+5)& (0+255),b
  1411  002D3A  0E8F               	movlw	143
  1412  002D3C  6FB6               	movwf	(?_sprintf+6)& (0+255),b
  1413  002D3E  0E40               	movlw	64
  1414  002D40  6FB7               	movwf	(?_sprintf+7)& (0+255),b
  1415  002D42  EC75  F01F         	call	_sprintf	;wreg free
  1416  002D46                     
  1417                           ;VendingMachine.c: 133:         lcd_gotoxy(1,1);
  1418  002D46  0E01               	movlw	1
  1419  002D48  6E04               	movwf	lcd_gotoxy@b^0,c
  1420  002D4A  0E01               	movlw	1
  1421  002D4C  EC5C  F01E         	call	_lcd_gotoxy
  1422  002D50                     
  1423                           ;VendingMachine.c: 134:         lcd_putc(buffer_lcd);
  1424  002D50  0EC8               	movlw	low _buffer_lcd
  1425  002D52  6E05               	movwf	lcd_putc@a^0,c
  1426  002D54  0E00               	movlw	high _buffer_lcd
  1427  002D56  6E06               	movwf	(lcd_putc@a+1)^0,c
  1428  002D58  ECE5  F01D         	call	_lcd_putc	;wreg free
  1429  002D5C                     
  1430                           ;VendingMachine.c: 135:         sprintf(buffer_lcd,"Int: %d",entero);
  1431  002D5C  0EC8               	movlw	low _buffer_lcd
  1432  002D5E  0100               	movlb	0	; () banked
  1433  002D60  6FB0               	movwf	sprintf@s& (0+255),b
  1434  002D62  0E00               	movlw	high _buffer_lcd
  1435  002D64  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1436  002D66  0E7E               	movlw	low STR_9
  1437  002D68  6FB2               	movwf	sprintf@fmt& (0+255),b
  1438  002D6A  0E08               	movlw	high STR_9
  1439  002D6C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1440  002D6E  0E00               	movlw	0
  1441  002D70  6FB5               	movwf	(?_sprintf+5)& (0+255),b
  1442  002D72  0E14               	movlw	20
  1443  002D74  6FB4               	movwf	(?_sprintf+4)& (0+255),b
  1444  002D76  EC75  F01F         	call	_sprintf	;wreg free
  1445  002D7A                     
  1446                           ;VendingMachine.c: 136:         lcd_gotoxy(2,1);
  1447  002D7A  0E01               	movlw	1
  1448  002D7C  6E04               	movwf	lcd_gotoxy@b^0,c
  1449  002D7E  0E02               	movlw	2
  1450  002D80  EC5C  F01E         	call	_lcd_gotoxy
  1451  002D84                     
  1452                           ;VendingMachine.c: 137:         lcd_putc(buffer_lcd);
  1453  002D84  0EC8               	movlw	low _buffer_lcd
  1454  002D86  6E05               	movwf	lcd_putc@a^0,c
  1455  002D88  0E00               	movlw	high _buffer_lcd
  1456  002D8A  6E06               	movwf	(lcd_putc@a+1)^0,c
  1457  002D8C  ECE5  F01D         	call	_lcd_putc	;wreg free
  1458  002D90                     
  1459                           ;VendingMachine.c: 138:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1460  002D90  0E15               	movlw	21
  1461  002D92  6E5D               	movwf	(??_main+1)^0,c
  1462  002D94  0E4B               	movlw	75
  1463  002D96  6E5C               	movwf	??_main^0,c
  1464  002D98  0EBE               	movlw	190
  1465  002D9A                     u5647:
  1466  002D9A  2EE8               	decfsz	wreg,f,c
  1467  002D9C  D7FE               	bra	u5647
  1468  002D9E  2E5C               	decfsz	??_main^0,f,c
  1469  002DA0  D7FC               	bra	u5647
  1470  002DA2  2E5D               	decfsz	(??_main+1)^0,f,c
  1471  002DA4  D7FA               	bra	u5647
  1472  002DA6  D000               	nop2	
  1473  002DA8  EFA6  F015         	goto	l4444
  1474  002DAC  EF00  F000         	goto	start
  1475  002DB0                     __end_of_main:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _sprintf *****************
  1479 ;; Defined at:
  1480 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  s               2   80[BANK0 ] PTR unsigned char 
  1483 ;;		 -> buffer_lcd(20), 
  1484 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  1485 ;;		 -> STR_9(8), STR_8(14), 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  f               6   85[COMRAM] struct _IO_FILE
  1488 ;;  ap              2   83[COMRAM] PTR void [1]
  1489 ;;		 -> ?_sprintf(2), 
  1490 ;;  ret             2    0        int 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  2   80[BANK0 ] int 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1500 ;;      Params:         0       8       0       0       0       0       0       0       0
  1501 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1503 ;;      Totals:        10       8       0       0       0       0       0       0       0
  1504 ;;Total ram usage:       18 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    7
  1507 ;; This function calls:
  1508 ;;		_vfprintf
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text1
  1515  003EEA                     __ptext1:
  1516                           	callstack 0
  1517  003EEA                     _sprintf:
  1518                           	callstack 23
  1519  003EEA  0EB4               	movlw	low (?_sprintf+4)
  1520  003EEC  6E54               	movwf	sprintf@ap^0,c
  1521  003EEE  0E00               	movlw	high (?_sprintf+4)
  1522  003EF0  6E55               	movwf	(sprintf@ap+1)^0,c
  1523  003EF2  C0B0  F056         	movff	sprintf@s,sprintf@f
  1524  003EF6  C0B1  F057         	movff	sprintf@s+1,sprintf@f+1
  1525  003EFA  0E00               	movlw	0
  1526  003EFC  6E59               	movwf	(sprintf@f+3)^0,c
  1527  003EFE  0E00               	movlw	0
  1528  003F00  6E58               	movwf	(sprintf@f+2)^0,c
  1529  003F02  0E00               	movlw	0
  1530  003F04  6E5B               	movwf	(sprintf@f+5)^0,c
  1531  003F06  0E00               	movlw	0
  1532  003F08  6E5A               	movwf	(sprintf@f+4)^0,c
  1533  003F0A  0E56               	movlw	low sprintf@f
  1534  003F0C  6E4A               	movwf	vfprintf@fp^0,c
  1535  003F0E  0E00               	movlw	high sprintf@f
  1536  003F10  6E4B               	movwf	(vfprintf@fp+1)^0,c
  1537  003F12  C0B2  F04C         	movff	sprintf@fmt,vfprintf@fmt
  1538  003F16  C0B3  F04D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1539  003F1A  0E54               	movlw	low sprintf@ap
  1540  003F1C  6E4E               	movwf	vfprintf@ap^0,c
  1541  003F1E  0E00               	movlw	high sprintf@ap
  1542  003F20  6E4F               	movwf	(vfprintf@ap+1)^0,c
  1543  003F22  EC8F  F01E         	call	_vfprintf	;wreg free
  1544  003F26  5058               	movf	(sprintf@f+2)^0,w,c
  1545  003F28  0100               	movlb	0	; () banked
  1546  003F2A  25B0               	addwf	sprintf@s& (0+255),w,b
  1547  003F2C  6ED9               	movwf	fsr2l,c
  1548  003F2E  5059               	movf	(sprintf@f+3)^0,w,c
  1549  003F30  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1550  003F32  6EDA               	movwf	fsr2h,c
  1551  003F34  0E00               	movlw	0
  1552  003F36  6EDF               	movwf	indf2,c
  1553  003F38                     
  1554                           ; BSR set to: 0
  1555  003F38  0012               	return		;funcret
  1556  003F3A                     __end_of_sprintf:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _vfprintf *****************
  1560 ;; Defined at:
  1561 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  1564 ;;		 -> sprintf@f(6), 
  1565 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  1566 ;;		 -> STR_9(8), STR_8(14), 
  1567 ;;  ap              2   77[COMRAM] PTR PTR void 
  1568 ;;		 -> sprintf@ap(2), 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  1571 ;;		 -> STR_9(8), STR_8(14), 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  2   73[COMRAM] int 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         6       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        8 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    6
  1588 ;; This function calls:
  1589 ;;		_vfpfcnvrt
  1590 ;; This function is called by:
  1591 ;;		_sprintf
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text2
  1596  003D1E                     __ptext2:
  1597                           	callstack 0
  1598  003D1E                     _vfprintf:
  1599                           	callstack 23
  1600  003D1E                     
  1601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1602  003D1E  C04C  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  1603  003D22  C04D  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1604  003D26                     
  1605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1606  003D26  0E00               	movlw	0
  1607  003D28  0100               	movlb	0	; () banked
  1608  003D2A  6FC1               	movwf	(_nout+1)& (0+255),b
  1609  003D2C  0E00               	movlw	0
  1610  003D2E  6FC0               	movwf	_nout& (0+255),b
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1613  003D30  EFAD  F01E         	goto	l4368
  1614  003D34                     l4366:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1618  003D34  C04A  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1619  003D38  C04B  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1620  003D3C  0E50               	movlw	low vfprintf@cfmt
  1621  003D3E  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1622  003D40  0E00               	movlw	high vfprintf@cfmt
  1623  003D42  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1624  003D44  C04E  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1625  003D48  C04F  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1626  003D4C  EC79  F00A         	call	_vfpfcnvrt	;wreg free
  1627  003D50  5040               	movf	?_vfpfcnvrt^0,w,c
  1628  003D52  0100               	movlb	0	; () banked
  1629  003D54  27C0               	addwf	_nout& (0+255),f,b
  1630  003D56  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1631  003D58  23C1               	addwfc	(_nout+1)& (0+255),f,b
  1632  003D5A                     l4368:
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1636  003D5A  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  1637  003D5E  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1638  003D62                     	if	0	;tblptru may be non-zero
  1639  003D62                     	endif
  1640  003D62                     	if	0	;tblptru may be non-zero
  1641  003D62                     	endif
  1642  003D62  0008               	tblrd		*
  1643  003D64  50F5               	movf	tablat,w,c
  1644  003D66  0900               	iorlw	0
  1645  003D68  A4D8               	btfss	status,2,c
  1646  003D6A  EFB9  F01E         	goto	u5471
  1647  003D6E  EFBB  F01E         	goto	u5470
  1648  003D72                     u5471:
  1649  003D72  EF9A  F01E         	goto	l4366
  1650  003D76                     u5470:
  1651  003D76                     
  1652                           ; BSR set to: 0
  1653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1654  003D76  C0C0  F04A         	movff	_nout,?_vfprintf
  1655  003D7A  C0C1  F04B         	movff	_nout+1,?_vfprintf+1
  1656  003D7E                     
  1657                           ; BSR set to: 0
  1658  003D7E  0012               	return		;funcret
  1659  003D80                     __end_of_vfprintf:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _vfpfcnvrt *****************
  1663 ;; Defined at:
  1664 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1667 ;;		 -> sprintf@f(6), 
  1668 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1669 ;;		 -> vfprintf@cfmt(2), 
  1670 ;;  ap              2   67[COMRAM] PTR PTR void 
  1671 ;;		 -> sprintf@ap(2), 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  ll              8   56[BANK0 ] long long 
  1674 ;;  llu             8    0        unsigned long long 
  1675 ;;  f               4   72[BANK0 ] unsigned long long 
  1676 ;;  ct              3   76[BANK0 ] unsigned char [3]
  1677 ;;  vp              3    0        PTR void 
  1678 ;;  cp              3    0        PTR unsigned char 
  1679 ;;  done            2   64[BANK0 ] int 
  1680 ;;  i               2    0        int 
  1681 ;;  c               1   79[BANK0 ] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2   63[COMRAM] int 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1691 ;;      Params:         6       0       0       0       0       0       0       0       0
  1692 ;;      Locals:         0      24       0       0       0       0       0       0       0
  1693 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1694 ;;      Totals:        10      24       0       0       0       0       0       0       0
  1695 ;;Total ram usage:       34 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    5
  1698 ;; This function calls:
  1699 ;;		_atoi
  1700 ;;		_dtoa
  1701 ;;		_efgtoa
  1702 ;;		_fputc
  1703 ;;		_isdigit
  1704 ;;		_isupper
  1705 ;;		_strncmp
  1706 ;;		_tolower
  1707 ;; This function is called by:
  1708 ;;		_vfprintf
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text3
  1713  0014F2                     __ptext3:
  1714                           	callstack 0
  1715  0014F2                     _vfpfcnvrt:
  1716                           	callstack 23
  1717  0014F2                     
  1718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1719  0014F2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1720  0014F6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1721  0014FA  CFDE FFF6          	movff	postinc2,tblptrl
  1722  0014FE  CFDD FFF7          	movff	postdec2,tblptrh
  1723  001502                     	if	0	;tblptru may be non-zero
  1724  001502                     	endif
  1725  001502                     	if	0	;tblptru may be non-zero
  1726  001502                     	endif
  1727  001502  0008               	tblrd		*
  1728  001504  50F5               	movf	tablat,w,c
  1729  001506  0A25               	xorlw	37
  1730  001508  A4D8               	btfss	status,2,c
  1731  00150A  EF89  F00A         	goto	u5241
  1732  00150E  EF8B  F00A         	goto	u5240
  1733  001512                     u5241:
  1734  001512  EFD2  F00D         	goto	l4318
  1735  001516                     u5240:
  1736  001516                     
  1737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1738  001516  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1739  00151A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1740  00151E  2ADE               	incf	postinc2,f,c
  1741  001520  0E00               	movlw	0
  1742  001522  22DD               	addwfc	postdec2,f,c
  1743  001524                     
  1744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1745  001524  0E00               	movlw	0
  1746  001526  0100               	movlb	0	; () banked
  1747  001528  6FC3               	movwf	(_width+1)& (0+255),b
  1748  00152A  0E00               	movlw	0
  1749  00152C  6FC2               	movwf	_width& (0+255),b
  1750  00152E  C0C2  F0C6         	movff	_width,_flags
  1751  001532  C0C3  F0C7         	movff	_width+1,_flags+1
  1752  001536                     
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1755  001536  69C4               	setf	_prec& (0+255),b
  1756  001538  69C5               	setf	(_prec+1)& (0+255),b
  1757  00153A                     
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1760  00153A  0E00               	movlw	0
  1761  00153C  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1762  00153E  0E00               	movlw	0
  1763  001540  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1766  001542  EFE9  F00A         	goto	l4212
  1767  001546                     l4186:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1771  001546  81C6               	bsf	_flags& (0+255),0,b
  1772  001548                     l4188:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1776  001548  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1777  00154C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1778  001550  2ADE               	incf	postinc2,f,c
  1779  001552  0E00               	movlw	0
  1780  001554  22DD               	addwfc	postdec2,f,c
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1783  001556  EFE9  F00A         	goto	l4212
  1784  00155A                     l4190:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1788  00155A  83C6               	bsf	_flags& (0+255),1,b
  1789  00155C  EFA4  F00A         	goto	l4188
  1790  001560                     l4194:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1794  001560  85C6               	bsf	_flags& (0+255),2,b
  1795  001562  EFA4  F00A         	goto	l4188
  1796  001566                     l4198:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1800  001566  87C6               	bsf	_flags& (0+255),3,b
  1801  001568  EFA4  F00A         	goto	l4188
  1802  00156C                     l4202:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1806  00156C  89C6               	bsf	_flags& (0+255),4,b
  1807  00156E  EFA4  F00A         	goto	l4188
  1808  001572                     l4206:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1812  001572  0E00               	movlw	0
  1813  001574  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1814  001576  0E01               	movlw	1
  1815  001578  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1818  00157A  EFE9  F00A         	goto	l4212
  1819  00157E                     l4210:
  1820                           
  1821                           ; BSR set to: 0
  1822  00157E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1823  001582  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1824  001586  CFDE FFF6          	movff	postinc2,tblptrl
  1825  00158A  CFDD FFF7          	movff	postdec2,tblptrh
  1826  00158E                     	if	0	;tblptru may be non-zero
  1827  00158E                     	endif
  1828  00158E                     	if	0	;tblptru may be non-zero
  1829  00158E                     	endif
  1830  00158E  0008               	tblrd		*
  1831  001590  50F5               	movf	tablat,w,c
  1832  001592  6E46               	movwf	??_vfpfcnvrt^0,c
  1833  001594  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  1834                           
  1835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1836                           ; Switch size 1, requested type "simple"
  1837                           ; Number of cases is 1, Range of values is 0 to 0
  1838                           ; switch strategies available:
  1839                           ; Name         Instructions Cycles
  1840                           ; simple_byte            4     3 (average)
  1841                           ;	Chosen strategy is simple_byte
  1842  001596  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1843  001598  0A00               	xorlw	0	; case 0
  1844  00159A  B4D8               	btfsc	status,2,c
  1845  00159C  EFD2  F00A         	goto	l4598
  1846  0015A0  EFB9  F00A         	goto	l4206
  1847  0015A4                     l4598:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ; Switch size 1, requested type "simple"
  1851                           ; Number of cases is 5, Range of values is 32 to 48
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte           16     9 (average)
  1855                           ;	Chosen strategy is simple_byte
  1856  0015A4  5046               	movf	??_vfpfcnvrt^0,w,c
  1857  0015A6  0A20               	xorlw	32	; case 32
  1858  0015A8  B4D8               	btfsc	status,2,c
  1859  0015AA  EFB3  F00A         	goto	l4198
  1860  0015AE  0A03               	xorlw	3	; case 35
  1861  0015B0  B4D8               	btfsc	status,2,c
  1862  0015B2  EFB6  F00A         	goto	l4202
  1863  0015B6  0A08               	xorlw	8	; case 43
  1864  0015B8  B4D8               	btfsc	status,2,c
  1865  0015BA  EFB0  F00A         	goto	l4194
  1866  0015BE  0A06               	xorlw	6	; case 45
  1867  0015C0  B4D8               	btfsc	status,2,c
  1868  0015C2  EFA3  F00A         	goto	l4186
  1869  0015C6  0A1D               	xorlw	29	; case 48
  1870  0015C8  B4D8               	btfsc	status,2,c
  1871  0015CA  EFAD  F00A         	goto	l4190
  1872  0015CE  EFB9  F00A         	goto	l4206
  1873  0015D2                     l4212:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1877  0015D2  51A0               	movf	vfpfcnvrt@done& (0+255),w,b
  1878  0015D4  11A1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1879  0015D6  B4D8               	btfsc	status,2,c
  1880  0015D8  EFF0  F00A         	goto	u5251
  1881  0015DC  EFF2  F00A         	goto	u5250
  1882  0015E0                     u5251:
  1883  0015E0  EFBF  F00A         	goto	l4210
  1884  0015E4                     u5250:
  1885  0015E4                     
  1886                           ; BSR set to: 0
  1887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1888  0015E4  A1C6               	btfss	_flags& (0+255),0,b
  1889  0015E6  EFF7  F00A         	goto	u5261
  1890  0015EA  EFF9  F00A         	goto	u5260
  1891  0015EE                     u5261:
  1892  0015EE  EFFA  F00A         	goto	l4216
  1893  0015F2                     u5260:
  1894  0015F2                     
  1895                           ; BSR set to: 0
  1896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1897  0015F2  93C6               	bcf	_flags& (0+255),1,b
  1898  0015F4                     l4216:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1902  0015F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1903  0015F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1904  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  1905  001600  CFDD FFF7          	movff	postdec2,tblptrh
  1906  001604                     	if	0	;tblptru may be non-zero
  1907  001604                     	endif
  1908  001604                     	if	0	;tblptru may be non-zero
  1909  001604                     	endif
  1910  001604  0008               	tblrd		*
  1911  001606  50F5               	movf	tablat,w,c
  1912  001608  0A2A               	xorlw	42
  1913  00160A  A4D8               	btfss	status,2,c
  1914  00160C  EF0A  F00B         	goto	u5271
  1915  001610  EF0C  F00B         	goto	u5270
  1916  001614                     u5271:
  1917  001614  EF35  F00B         	goto	l4224
  1918  001618                     u5270:
  1919  001618                     
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1922  001618  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1923  00161C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1924  001620  2ADE               	incf	postinc2,f,c
  1925  001622  0E00               	movlw	0
  1926  001624  22DD               	addwfc	postdec2,f,c
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1929  001626  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1930  00162A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1931  00162E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1932  001632  0E02               	movlw	2
  1933  001634  26DE               	addwf	postinc2,f,c
  1934  001636  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1935  00163A  0E00               	movlw	0
  1936  00163C  22DD               	addwfc	postdec2,f,c
  1937  00163E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1938  001642  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1939  001646  CFDE F0C2          	movff	postinc2,_width
  1940  00164A  CFDD F0C3          	movff	postdec2,_width+1
  1941  00164E                     
  1942                           ; BSR set to: 0
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1944  00164E  BFC3               	btfsc	(_width+1)& (0+255),7,b
  1945  001650  EF2E  F00B         	goto	u5280
  1946  001654  EF2C  F00B         	goto	u5281
  1947  001658                     u5281:
  1948  001658  EF79  F00B         	goto	l4234
  1949  00165C                     u5280:
  1950  00165C                     
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1953  00165C  81C6               	bsf	_flags& (0+255),0,b
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1956  00165E  6DC2               	negf	_width& (0+255),b
  1957  001660  1FC3               	comf	(_width+1)& (0+255),f,b
  1958  001662  B0D8               	btfsc	status,0,c
  1959  001664  2BC3               	incf	(_width+1)& (0+255),f,b
  1960  001666  EF79  F00B         	goto	l4234
  1961  00166A                     l4224:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1965  00166A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1966  00166E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1967  001672  CFDE F008          	movff	postinc2,atoi@s
  1968  001676  CFDD F009          	movff	postdec2,atoi@s+1
  1969  00167A  ECE1  F017         	call	_atoi	;wreg free
  1970  00167E  C008  F0C2         	movff	?_atoi,_width
  1971  001682  C009  F0C3         	movff	?_atoi+1,_width+1
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1974  001686  EF4C  F00B         	goto	l4228
  1975  00168A                     l4226:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1979  00168A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1980  00168E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1981  001692  2ADE               	incf	postinc2,f,c
  1982  001694  0E00               	movlw	0
  1983  001696  22DD               	addwfc	postdec2,f,c
  1984  001698                     l4228:
  1985  001698  0ED0               	movlw	208
  1986  00169A  6E46               	movwf	??_vfpfcnvrt^0,c
  1987  00169C  0EFF               	movlw	255
  1988  00169E  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1989  0016A0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1990  0016A4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1991  0016A8  CFDE FFF6          	movff	postinc2,tblptrl
  1992  0016AC  CFDD FFF7          	movff	postdec2,tblptrh
  1993  0016B0                     	if	0	;tblptru may be non-zero
  1994  0016B0                     	endif
  1995  0016B0                     	if	0	;tblptru may be non-zero
  1996  0016B0                     	endif
  1997  0016B0  0008               	tblrd		*
  1998  0016B2  50F5               	movf	tablat,w,c
  1999  0016B4  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2000  0016B6  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2001  0016B8  5046               	movf	??_vfpfcnvrt^0,w,c
  2002  0016BA  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2003  0016BC  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2004  0016BE  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2005  0016C0  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2006  0016C2  E10A               	bnz	u5290
  2007  0016C4  0E0A               	movlw	10
  2008  0016C6  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2009  0016C8  A0D8               	btfss	status,0,c
  2010  0016CA  EF69  F00B         	goto	u5291
  2011  0016CE  EF6C  F00B         	goto	u5290
  2012  0016D2                     u5291:
  2013  0016D2  0E01               	movlw	1
  2014  0016D4  EF6D  F00B         	goto	u5300
  2015  0016D8                     u5290:
  2016  0016D8  0E00               	movlw	0
  2017  0016DA                     u5300:
  2018  0016DA  0100               	movlb	0	; () banked
  2019  0016DC  6FA2               	movwf	_vfpfcnvrt$693& (0+255),b
  2020  0016DE  6BA3               	clrf	(_vfpfcnvrt$693+1)& (0+255),b
  2021  0016E0                     
  2022                           ; BSR set to: 0
  2023  0016E0  51A2               	movf	_vfpfcnvrt$693& (0+255),w,b
  2024  0016E2  11A3               	iorwf	(_vfpfcnvrt$693+1)& (0+255),w,b
  2025  0016E4  A4D8               	btfss	status,2,c
  2026  0016E6  EF77  F00B         	goto	u5311
  2027  0016EA  EF79  F00B         	goto	u5310
  2028  0016EE                     u5311:
  2029  0016EE  EF45  F00B         	goto	l4226
  2030  0016F2                     u5310:
  2031  0016F2                     l4234:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2035  0016F2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2036  0016F6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2037  0016FA  CFDE FFF6          	movff	postinc2,tblptrl
  2038  0016FE  CFDD FFF7          	movff	postdec2,tblptrh
  2039  001702                     	if	0	;tblptru may be non-zero
  2040  001702                     	endif
  2041  001702                     	if	0	;tblptru may be non-zero
  2042  001702                     	endif
  2043  001702  0008               	tblrd		*
  2044  001704  50F5               	movf	tablat,w,c
  2045  001706  0A2E               	xorlw	46
  2046  001708  A4D8               	btfss	status,2,c
  2047  00170A  EF89  F00B         	goto	u5321
  2048  00170E  EF8B  F00B         	goto	u5320
  2049  001712                     u5321:
  2050  001712  EF09  F00C         	goto	l4254
  2051  001716                     u5320:
  2052  001716                     
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2055  001716  0E00               	movlw	0
  2056  001718  6FC5               	movwf	(_prec+1)& (0+255),b
  2057  00171A  0E00               	movlw	0
  2058  00171C  6FC4               	movwf	_prec& (0+255),b
  2059  00171E                     
  2060                           ; BSR set to: 0
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2062  00171E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2063  001722  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2064  001726  2ADE               	incf	postinc2,f,c
  2065  001728  0E00               	movlw	0
  2066  00172A  22DD               	addwfc	postdec2,f,c
  2067  00172C                     
  2068                           ; BSR set to: 0
  2069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2070  00172C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2071  001730  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2072  001734  CFDE FFF6          	movff	postinc2,tblptrl
  2073  001738  CFDD FFF7          	movff	postdec2,tblptrh
  2074  00173C                     	if	0	;tblptru may be non-zero
  2075  00173C                     	endif
  2076  00173C                     	if	0	;tblptru may be non-zero
  2077  00173C                     	endif
  2078  00173C  0008               	tblrd		*
  2079  00173E  50F5               	movf	tablat,w,c
  2080  001740  0A2A               	xorlw	42
  2081  001742  A4D8               	btfss	status,2,c
  2082  001744  EFA6  F00B         	goto	u5331
  2083  001748  EFA8  F00B         	goto	u5330
  2084  00174C                     u5331:
  2085  00174C  EFC5  F00B         	goto	l4244
  2086  001750                     u5330:
  2087  001750                     
  2088                           ; BSR set to: 0
  2089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2090  001750  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2091  001754  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2092  001758  2ADE               	incf	postinc2,f,c
  2093  00175A  0E00               	movlw	0
  2094  00175C  22DD               	addwfc	postdec2,f,c
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2097  00175E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2098  001762  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2099  001766  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2100  00176A  0E02               	movlw	2
  2101  00176C  26DE               	addwf	postinc2,f,c
  2102  00176E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2103  001772  0E00               	movlw	0
  2104  001774  22DD               	addwfc	postdec2,f,c
  2105  001776  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2106  00177A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2107  00177E  CFDE F0C4          	movff	postinc2,_prec
  2108  001782  CFDD F0C5          	movff	postdec2,_prec+1
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2111  001786  EF09  F00C         	goto	l4254
  2112  00178A                     l4244:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2116  00178A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2117  00178E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2118  001792  CFDE F008          	movff	postinc2,atoi@s
  2119  001796  CFDD F009          	movff	postdec2,atoi@s+1
  2120  00179A  ECE1  F017         	call	_atoi	;wreg free
  2121  00179E  C008  F0C4         	movff	?_atoi,_prec
  2122  0017A2  C009  F0C5         	movff	?_atoi+1,_prec+1
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2125  0017A6  EFDC  F00B         	goto	l4248
  2126  0017AA                     l4246:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2130  0017AA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2131  0017AE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2132  0017B2  2ADE               	incf	postinc2,f,c
  2133  0017B4  0E00               	movlw	0
  2134  0017B6  22DD               	addwfc	postdec2,f,c
  2135  0017B8                     l4248:
  2136  0017B8  0ED0               	movlw	208
  2137  0017BA  6E46               	movwf	??_vfpfcnvrt^0,c
  2138  0017BC  0EFF               	movlw	255
  2139  0017BE  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2140  0017C0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2141  0017C4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2142  0017C8  CFDE FFF6          	movff	postinc2,tblptrl
  2143  0017CC  CFDD FFF7          	movff	postdec2,tblptrh
  2144  0017D0                     	if	0	;tblptru may be non-zero
  2145  0017D0                     	endif
  2146  0017D0                     	if	0	;tblptru may be non-zero
  2147  0017D0                     	endif
  2148  0017D0  0008               	tblrd		*
  2149  0017D2  50F5               	movf	tablat,w,c
  2150  0017D4  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2151  0017D6  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2152  0017D8  5046               	movf	??_vfpfcnvrt^0,w,c
  2153  0017DA  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2154  0017DC  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2155  0017DE  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2156  0017E0  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2157  0017E2  E10A               	bnz	u5340
  2158  0017E4  0E0A               	movlw	10
  2159  0017E6  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2160  0017E8  A0D8               	btfss	status,0,c
  2161  0017EA  EFF9  F00B         	goto	u5341
  2162  0017EE  EFFC  F00B         	goto	u5340
  2163  0017F2                     u5341:
  2164  0017F2  0E01               	movlw	1
  2165  0017F4  EFFD  F00B         	goto	u5350
  2166  0017F8                     u5340:
  2167  0017F8  0E00               	movlw	0
  2168  0017FA                     u5350:
  2169  0017FA  0100               	movlb	0	; () banked
  2170  0017FC  6FA4               	movwf	_vfpfcnvrt$694& (0+255),b
  2171  0017FE  6BA5               	clrf	(_vfpfcnvrt$694+1)& (0+255),b
  2172  001800                     
  2173                           ; BSR set to: 0
  2174  001800  51A4               	movf	_vfpfcnvrt$694& (0+255),w,b
  2175  001802  11A5               	iorwf	(_vfpfcnvrt$694+1)& (0+255),w,b
  2176  001804  A4D8               	btfss	status,2,c
  2177  001806  EF07  F00C         	goto	u5361
  2178  00180A  EF09  F00C         	goto	u5360
  2179  00180E                     u5361:
  2180  00180E  EFD5  F00B         	goto	l4246
  2181  001812                     u5360:
  2182  001812                     l4254:
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2186  001812  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2187  001816  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2188  00181A  CFDE FFF6          	movff	postinc2,tblptrl
  2189  00181E  CFDD FFF7          	movff	postdec2,tblptrh
  2190  001822                     	if	0	;tblptru may be non-zero
  2191  001822                     	endif
  2192  001822                     	if	0	;tblptru may be non-zero
  2193  001822                     	endif
  2194  001822  0008               	tblrd		*
  2195  001824  50F5               	movf	tablat,w,c
  2196  001826  6E07               	movwf	tolower@c^0,c
  2197  001828  6A08               	clrf	(tolower@c+1)^0,c
  2198  00182A  ECC0  F01E         	call	_tolower	;wreg free
  2199  00182E  5007               	movf	?_tolower^0,w,c
  2200  001830  0100               	movlb	0	; () banked
  2201  001832  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  2202  001834                     
  2203                           ; BSR set to: 0
  2204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2205  001834  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  2206  001836  B4D8               	btfsc	status,2,c
  2207  001838  EF20  F00C         	goto	u5371
  2208  00183C  EF22  F00C         	goto	u5370
  2209  001840                     u5371:
  2210  001840  EF5C  F00C         	goto	l4264
  2211  001844                     u5370:
  2212  001844                     
  2213                           ; BSR set to: 0
  2214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2215  001844  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2216  001848  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2217  00184C  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2218  001850  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2219  001854  0E01               	movlw	1
  2220  001856  2646               	addwf	??_vfpfcnvrt^0,f,c
  2221  001858  0E00               	movlw	0
  2222  00185A  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2223  00185C  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2224  001860  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2225  001864                     	if	0	;tblptru may be non-zero
  2226  001864                     	endif
  2227  001864                     	if	0	;tblptru may be non-zero
  2228  001864                     	endif
  2229  001864  0008               	tblrd		*
  2230  001866  50F5               	movf	tablat,w,c
  2231  001868  6E07               	movwf	tolower@c^0,c
  2232  00186A  6A08               	clrf	(tolower@c+1)^0,c
  2233  00186C  ECC0  F01E         	call	_tolower	;wreg free
  2234  001870  5007               	movf	?_tolower^0,w,c
  2235  001872  0100               	movlb	0	; () banked
  2236  001874  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2237  001876                     
  2238                           ; BSR set to: 0
  2239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2240  001876  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2241  001878  B4D8               	btfsc	status,2,c
  2242  00187A  EF41  F00C         	goto	u5381
  2243  00187E  EF43  F00C         	goto	u5380
  2244  001882                     u5381:
  2245  001882  EF5C  F00C         	goto	l4264
  2246  001886                     u5380:
  2247  001886                     
  2248                           ; BSR set to: 0
  2249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2250  001886  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2251  00188A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2252  00188E  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2253  001892  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2254  001896  0E02               	movlw	2
  2255  001898  2646               	addwf	??_vfpfcnvrt^0,f,c
  2256  00189A  0E00               	movlw	0
  2257  00189C  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2258  00189E  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2259  0018A2  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2260  0018A6                     	if	0	;tblptru may be non-zero
  2261  0018A6                     	endif
  2262  0018A6                     	if	0	;tblptru may be non-zero
  2263  0018A6                     	endif
  2264  0018A6  0008               	tblrd		*
  2265  0018A8  50F5               	movf	tablat,w,c
  2266  0018AA  6E07               	movwf	tolower@c^0,c
  2267  0018AC  6A08               	clrf	(tolower@c+1)^0,c
  2268  0018AE  ECC0  F01E         	call	_tolower	;wreg free
  2269  0018B2  5007               	movf	?_tolower^0,w,c
  2270  0018B4  0100               	movlb	0	; () banked
  2271  0018B6  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2272  0018B8                     l4264:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2276  0018B8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2277  0018BC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2278  0018C0  CFDE FFF6          	movff	postinc2,tblptrl
  2279  0018C4  CFDD FFF7          	movff	postdec2,tblptrh
  2280  0018C8                     	if	0	;tblptru may be non-zero
  2281  0018C8                     	endif
  2282  0018C8                     	if	0	;tblptru may be non-zero
  2283  0018C8                     	endif
  2284  0018C8  0008               	tblrd		*
  2285  0018CA  50F5               	movf	tablat,w,c
  2286  0018CC  0A64               	xorlw	100
  2287  0018CE  B4D8               	btfsc	status,2,c
  2288  0018D0  EF6C  F00C         	goto	u5391
  2289  0018D4  EF6E  F00C         	goto	u5390
  2290  0018D8                     u5391:
  2291  0018D8  EF80  F00C         	goto	l4268
  2292  0018DC                     u5390:
  2293  0018DC                     
  2294                           ; BSR set to: 0
  2295  0018DC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2296  0018E0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2297  0018E4  CFDE FFF6          	movff	postinc2,tblptrl
  2298  0018E8  CFDD FFF7          	movff	postdec2,tblptrh
  2299  0018EC                     	if	0	;tblptru may be non-zero
  2300  0018EC                     	endif
  2301  0018EC                     	if	0	;tblptru may be non-zero
  2302  0018EC                     	endif
  2303  0018EC  0008               	tblrd		*
  2304  0018EE  50F5               	movf	tablat,w,c
  2305  0018F0  0A69               	xorlw	105
  2306  0018F2  A4D8               	btfss	status,2,c
  2307  0018F4  EF7E  F00C         	goto	u5401
  2308  0018F8  EF80  F00C         	goto	u5400
  2309  0018FC                     u5401:
  2310  0018FC  EFC0  F00C         	goto	l4274
  2311  001900                     u5400:
  2312  001900                     l4268:
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2316  001900  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2317  001904  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2318  001908  2ADE               	incf	postinc2,f,c
  2319  00190A  0E00               	movlw	0
  2320  00190C  22DD               	addwfc	postdec2,f,c
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2323  00190E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2324  001912  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2325  001916  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2326  00191A  0E02               	movlw	2
  2327  00191C  26DE               	addwf	postinc2,f,c
  2328  00191E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2329  001922  0E00               	movlw	0
  2330  001924  22DD               	addwfc	postdec2,f,c
  2331  001926  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2332  00192A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2333  00192E  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  2334  001932  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  2335  001936  0E00               	movlw	0
  2336  001938  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2337  00193A  0EFF               	movlw	-1
  2338  00193C  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2339  00193E  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2340  001940  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2341  001942  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2342  001944  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2343  001946  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2344  001948                     
  2345                           ; BSR set to: 0
  2346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2347  001948  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2348  00194C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2349  001950  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2350  001954  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2351  001958  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2352  00195C  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2353  001960  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2354  001964  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2355  001968  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2356  00196C  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2357  001970  EC30  F014         	call	_dtoa	;wreg free
  2358  001974  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2359  001978  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2360  00197C  EFED  F00D         	goto	l966
  2361  001980                     l4274:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2365  001980  0E66               	movlw	102
  2366  001982  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2367  001984  A4D8               	btfss	status,2,c
  2368  001986  EFC7  F00C         	goto	u5411
  2369  00198A  EFC9  F00C         	goto	u5410
  2370  00198E                     u5411:
  2371  00198E  EF09  F00D         	goto	l4286
  2372  001992                     u5410:
  2373  001992                     
  2374                           ; BSR set to: 0
  2375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2376  001992  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2377  001996  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2378  00199A  CFDE FFF6          	movff	postinc2,tblptrl
  2379  00199E  CFDD FFF7          	movff	postdec2,tblptrh
  2380  0019A2                     	if	0	;tblptru may be non-zero
  2381  0019A2                     	endif
  2382  0019A2                     	if	0	;tblptru may be non-zero
  2383  0019A2                     	endif
  2384  0019A2  0008               	tblrd		*
  2385  0019A4  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  2386  0019A8                     
  2387                           ; BSR set to: 0
  2388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2389  0019A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2390  0019AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2391  0019B0  2ADE               	incf	postinc2,f,c
  2392  0019B2  0E00               	movlw	0
  2393  0019B4  22DD               	addwfc	postdec2,f,c
  2394  0019B6                     
  2395                           ; BSR set to: 0
  2396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2397  0019B6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2398  0019BA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2399  0019BE  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2400  0019C2  0E04               	movlw	4
  2401  0019C4  26DE               	addwf	postinc2,f,c
  2402  0019C6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2403  0019CA  0E00               	movlw	0
  2404  0019CC  22DD               	addwfc	postdec2,f,c
  2405  0019CE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2406  0019D2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2407  0019D6  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  2408  0019DA  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  2409  0019DE  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  2410  0019E2  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  2411  0019E6                     l4282:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2415  0019E6  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2416  0019EA  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2417  0019EE  C0A8  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2418  0019F2  C0A9  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2419  0019F6  C0AA  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2420  0019FA  C0AB  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2421  0019FE  C0AF  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2422  001A02  EC4D  F004         	call	_efgtoa	;wreg free
  2423  001A06  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  2424  001A0A  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2425  001A0E  EFED  F00D         	goto	l966
  2426  001A12                     l4286:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2430  001A12  0EAC               	movlw	low vfpfcnvrt@ct
  2431  001A14  6E01               	movwf	strncmp@_l^0,c
  2432  001A16  0E00               	movlw	high vfpfcnvrt@ct
  2433  001A18  6E02               	movwf	(strncmp@_l+1)^0,c
  2434  001A1A  0E96               	movlw	low STR_18
  2435  001A1C  6E03               	movwf	strncmp@_r^0,c
  2436  001A1E  0E08               	movlw	high STR_18
  2437  001A20  6E04               	movwf	(strncmp@_r+1)^0,c
  2438  001A22  0E00               	movlw	0
  2439  001A24  6E06               	movwf	(strncmp@n+1)^0,c
  2440  001A26  0E02               	movlw	2
  2441  001A28  6E05               	movwf	strncmp@n^0,c
  2442  001A2A  ECA3  F01B         	call	_strncmp	;wreg free
  2443  001A2E  5001               	movf	?_strncmp^0,w,c
  2444  001A30  1002               	iorwf	(?_strncmp+1)^0,w,c
  2445  001A32  A4D8               	btfss	status,2,c
  2446  001A34  EF1E  F00D         	goto	u5421
  2447  001A38  EF20  F00D         	goto	u5420
  2448  001A3C                     u5421:
  2449  001A3C  EF9C  F00D         	goto	l4302
  2450  001A40                     u5420:
  2451  001A40                     
  2452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2453  001A40  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2454  001A44  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2455  001A48  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2456  001A4C  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2457  001A50  0E01               	movlw	1
  2458  001A52  2646               	addwf	??_vfpfcnvrt^0,f,c
  2459  001A54  0E00               	movlw	0
  2460  001A56  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2461  001A58  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2462  001A5C  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2463  001A60                     	if	0	;tblptru may be non-zero
  2464  001A60                     	endif
  2465  001A60                     	if	0	;tblptru may be non-zero
  2466  001A60                     	endif
  2467  001A60  0008               	tblrd		*
  2468  001A62  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  2469  001A66  0EBF               	movlw	191
  2470  001A68  6E46               	movwf	??_vfpfcnvrt^0,c
  2471  001A6A  0EFF               	movlw	255
  2472  001A6C  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2473  001A6E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2474  001A72  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2475  001A76  CFDE FFF6          	movff	postinc2,tblptrl
  2476  001A7A  CFDD FFF7          	movff	postdec2,tblptrh
  2477  001A7E                     	if	0	;tblptru may be non-zero
  2478  001A7E                     	endif
  2479  001A7E                     	if	0	;tblptru may be non-zero
  2480  001A7E                     	endif
  2481  001A7E  0008               	tblrd		*
  2482  001A80  50F5               	movf	tablat,w,c
  2483  001A82  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2484  001A84  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2485  001A86  5046               	movf	??_vfpfcnvrt^0,w,c
  2486  001A88  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2487  001A8A  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2488  001A8C  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2489  001A8E  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2490  001A90  E10A               	bnz	u5430
  2491  001A92  0E1A               	movlw	26
  2492  001A94  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2493  001A96  A0D8               	btfss	status,0,c
  2494  001A98  EF50  F00D         	goto	u5431
  2495  001A9C  EF53  F00D         	goto	u5430
  2496  001AA0                     u5431:
  2497  001AA0  0E01               	movlw	1
  2498  001AA2  EF54  F00D         	goto	u5440
  2499  001AA6                     u5430:
  2500  001AA6  0E00               	movlw	0
  2501  001AA8                     u5440:
  2502  001AA8  0100               	movlb	0	; () banked
  2503  001AAA  6FA6               	movwf	_vfpfcnvrt$699& (0+255),b
  2504  001AAC  6BA7               	clrf	(_vfpfcnvrt$699+1)& (0+255),b
  2505  001AAE                     
  2506                           ; BSR set to: 0
  2507  001AAE  51A6               	movf	_vfpfcnvrt$699& (0+255),w,b
  2508  001AB0  11A7               	iorwf	(_vfpfcnvrt$699+1)& (0+255),w,b
  2509  001AB2  B4D8               	btfsc	status,2,c
  2510  001AB4  EF5E  F00D         	goto	u5451
  2511  001AB8  EF60  F00D         	goto	u5450
  2512  001ABC                     u5451:
  2513  001ABC  EF7A  F00D         	goto	l4296
  2514  001AC0                     u5450:
  2515  001AC0                     
  2516                           ; BSR set to: 0
  2517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2518  001AC0  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2519  001AC4  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2520  001AC8  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2521  001ACC  0E04               	movlw	4
  2522  001ACE  26DE               	addwf	postinc2,f,c
  2523  001AD0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2524  001AD4  0E00               	movlw	0
  2525  001AD6  22DD               	addwfc	postdec2,f,c
  2526  001AD8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2527  001ADC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2528  001AE0  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  2529  001AE4  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  2530  001AE8  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  2531  001AEC  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2534  001AF0  EF92  F00D         	goto	l974
  2535  001AF4                     l4296:
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2539  001AF4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2540  001AF8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2541  001AFC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2542  001B00  0E04               	movlw	4
  2543  001B02  26DE               	addwf	postinc2,f,c
  2544  001B04  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2545  001B08  0E00               	movlw	0
  2546  001B0A  22DD               	addwfc	postdec2,f,c
  2547  001B0C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2548  001B10  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2549  001B14  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  2550  001B18  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  2551  001B1C  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  2552  001B20  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  2553  001B24                     l974:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2557  001B24  0E02               	movlw	2
  2558  001B26  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2559  001B2A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2560  001B2E  26DE               	addwf	postinc2,f,c
  2561  001B30  0E00               	movlw	0
  2562  001B32  22DD               	addwfc	postdec2,f,c
  2563  001B34  EFF3  F00C         	goto	l4282
  2564  001B38                     l4302:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2567  001B38  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2568  001B3C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2569  001B40  CFDE FFF6          	movff	postinc2,tblptrl
  2570  001B44  CFDD FFF7          	movff	postdec2,tblptrh
  2571  001B48                     	if	0	;tblptru may be non-zero
  2572  001B48                     	endif
  2573  001B48                     	if	0	;tblptru may be non-zero
  2574  001B48                     	endif
  2575  001B48  0008               	tblrd		*
  2576  001B4A  50F5               	movf	tablat,w,c
  2577  001B4C  0A25               	xorlw	37
  2578  001B4E  A4D8               	btfss	status,2,c
  2579  001B50  EFAC  F00D         	goto	u5461
  2580  001B54  EFAE  F00D         	goto	u5460
  2581  001B58                     u5461:
  2582  001B58  EFC5  F00D         	goto	l4312
  2583  001B5C                     u5460:
  2584  001B5C                     
  2585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2586  001B5C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2587  001B60  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2588  001B64  2ADE               	incf	postinc2,f,c
  2589  001B66  0E00               	movlw	0
  2590  001B68  22DD               	addwfc	postdec2,f,c
  2591  001B6A                     
  2592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2593  001B6A  0E00               	movlw	0
  2594  001B6C  6E02               	movwf	(fputc@c+1)^0,c
  2595  001B6E  0E25               	movlw	37
  2596  001B70  6E01               	movwf	fputc@c^0,c
  2597  001B72  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2598  001B76  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2599  001B7A  EC0E  F01C         	call	_fputc	;wreg free
  2600  001B7E                     l4308:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2603  001B7E  0E00               	movlw	0
  2604  001B80  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2605  001B82  0E01               	movlw	1
  2606  001B84  6E40               	movwf	?_vfpfcnvrt^0,c
  2607  001B86  EFED  F00D         	goto	l966
  2608  001B8A                     l4312:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2611  001B8A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2612  001B8E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2613  001B92  2ADE               	incf	postinc2,f,c
  2614  001B94  0E00               	movlw	0
  2615  001B96  22DD               	addwfc	postdec2,f,c
  2616  001B98                     
  2617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2618  001B98  0E00               	movlw	0
  2619  001B9A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2620  001B9C  0E00               	movlw	0
  2621  001B9E  6E40               	movwf	?_vfpfcnvrt^0,c
  2622  001BA0  EFED  F00D         	goto	l966
  2623  001BA4                     l4318:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2626  001BA4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2627  001BA8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2628  001BAC  CFDE FFF6          	movff	postinc2,tblptrl
  2629  001BB0  CFDD FFF7          	movff	postdec2,tblptrh
  2630  001BB4                     	if	0	;tblptru may be non-zero
  2631  001BB4                     	endif
  2632  001BB4                     	if	0	;tblptru may be non-zero
  2633  001BB4                     	endif
  2634  001BB4  0008               	tblrd		*
  2635  001BB6  50F5               	movf	tablat,w,c
  2636  001BB8  6E01               	movwf	fputc@c^0,c
  2637  001BBA  6A02               	clrf	(fputc@c+1)^0,c
  2638  001BBC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2639  001BC0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2640  001BC4  EC0E  F01C         	call	_fputc	;wreg free
  2641  001BC8                     
  2642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2643  001BC8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2644  001BCC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2645  001BD0  2ADE               	incf	postinc2,f,c
  2646  001BD2  0E00               	movlw	0
  2647  001BD4  22DD               	addwfc	postdec2,f,c
  2648  001BD6  EFBF  F00D         	goto	l4308
  2649  001BDA                     l966:
  2650  001BDA  0012               	return		;funcret
  2651  001BDC                     __end_of_vfpfcnvrt:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _strncmp *****************
  2655 ;; Defined at:
  2656 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2659 ;;		 -> vfpfcnvrt@ct(3), 
  2660 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2661 ;;		 -> STR_20(3), 
  2662 ;;  n               2    4[COMRAM] unsigned int 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2665 ;;		 -> STR_20(3), 
  2666 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2667 ;;		 -> vfpfcnvrt@ct(3), 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  2    0[COMRAM] int 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2677 ;;      Params:         6       0       0       0       0       0       0       0       0
  2678 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2679 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2680 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2681 ;;Total ram usage:       11 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_vfpfcnvrt
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text4
  2691  003746                     __ptext4:
  2692                           	callstack 0
  2693  003746                     _strncmp:
  2694                           	callstack 27
  2695  003746  C001  F008         	movff	strncmp@_l,strncmp@l
  2696  00374A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2697  00374E  C003  F00A         	movff	strncmp@_r,strncmp@r
  2698  003752  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2699  003756  0605               	decf	strncmp@n^0,f,c
  2700  003758  A0D8               	btfss	status,0,c
  2701  00375A  0606               	decf	(strncmp@n+1)^0,f,c
  2702  00375C  2805               	incf	strncmp@n^0,w,c
  2703  00375E  E106               	bnz	u5151
  2704  003760  2806               	incf	(strncmp@n+1)^0,w,c
  2705  003762  A4D8               	btfss	status,2,c
  2706  003764  EFB6  F01B         	goto	u5151
  2707  003768  EFB8  F01B         	goto	u5150
  2708  00376C                     u5151:
  2709  00376C  EFC5  F01B         	goto	l4148
  2710  003770                     u5150:
  2711  003770  0E00               	movlw	0
  2712  003772  6E02               	movwf	(?_strncmp+1)^0,c
  2713  003774  0E00               	movlw	0
  2714  003776  6E01               	movwf	?_strncmp^0,c
  2715  003778  EF0D  F01C         	goto	l1102
  2716  00377C                     l4146:
  2717  00377C  4A08               	infsnz	strncmp@l^0,f,c
  2718  00377E  2A09               	incf	(strncmp@l+1)^0,f,c
  2719  003780  4A0A               	infsnz	strncmp@r^0,f,c
  2720  003782  2A0B               	incf	(strncmp@r+1)^0,f,c
  2721  003784  0605               	decf	strncmp@n^0,f,c
  2722  003786  A0D8               	btfss	status,0,c
  2723  003788  0606               	decf	(strncmp@n+1)^0,f,c
  2724  00378A                     l4148:
  2725  00378A  C008  FFD9         	movff	strncmp@l,fsr2l
  2726  00378E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2727  003792  50DF               	movf	indf2,w,c
  2728  003794  B4D8               	btfsc	status,2,c
  2729  003796  EFCF  F01B         	goto	u5161
  2730  00379A  EFD1  F01B         	goto	u5160
  2731  00379E                     u5161:
  2732  00379E  EFFC  F01B         	goto	l4156
  2733  0037A2                     u5160:
  2734  0037A2  C00A  FFF6         	movff	strncmp@r,tblptrl
  2735  0037A6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2736  0037AA                     	if	0	;tblptru may be non-zero
  2737  0037AA                     	endif
  2738  0037AA                     	if	0	;tblptru may be non-zero
  2739  0037AA                     	endif
  2740  0037AA  0008               	tblrd		*
  2741  0037AC  50F5               	movf	tablat,w,c
  2742  0037AE  0900               	iorlw	0
  2743  0037B0  B4D8               	btfsc	status,2,c
  2744  0037B2  EFDD  F01B         	goto	u5171
  2745  0037B6  EFDF  F01B         	goto	u5170
  2746  0037BA                     u5171:
  2747  0037BA  EFFC  F01B         	goto	l4156
  2748  0037BE                     u5170:
  2749  0037BE  5005               	movf	strncmp@n^0,w,c
  2750  0037C0  1006               	iorwf	(strncmp@n+1)^0,w,c
  2751  0037C2  B4D8               	btfsc	status,2,c
  2752  0037C4  EFE6  F01B         	goto	u5181
  2753  0037C8  EFE8  F01B         	goto	u5180
  2754  0037CC                     u5181:
  2755  0037CC  EFFC  F01B         	goto	l4156
  2756  0037D0                     u5180:
  2757  0037D0  C008  FFD9         	movff	strncmp@l,fsr2l
  2758  0037D4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2759  0037D8  50DF               	movf	indf2,w,c
  2760  0037DA  6E07               	movwf	??_strncmp^0,c
  2761  0037DC  C00A  FFF6         	movff	strncmp@r,tblptrl
  2762  0037E0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2763  0037E4                     	if	0	;tblptru may be non-zero
  2764  0037E4                     	endif
  2765  0037E4                     	if	0	;tblptru may be non-zero
  2766  0037E4                     	endif
  2767  0037E4  0008               	tblrd		*
  2768  0037E6  50F5               	movf	tablat,w,c
  2769  0037E8  1807               	xorwf	??_strncmp^0,w,c
  2770  0037EA  B4D8               	btfsc	status,2,c
  2771  0037EC  EFFA  F01B         	goto	u5191
  2772  0037F0  EFFC  F01B         	goto	u5190
  2773  0037F4                     u5191:
  2774  0037F4  EFBE  F01B         	goto	l4146
  2775  0037F8                     u5190:
  2776  0037F8                     l4156:
  2777  0037F8  C008  FFD9         	movff	strncmp@l,fsr2l
  2778  0037FC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2779  003800  50DF               	movf	indf2,w,c
  2780  003802  6E07               	movwf	??_strncmp^0,c
  2781  003804  C00A  FFF6         	movff	strncmp@r,tblptrl
  2782  003808  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2783  00380C                     	if	0	;tblptru may be non-zero
  2784  00380C                     	endif
  2785  00380C                     	if	0	;tblptru may be non-zero
  2786  00380C                     	endif
  2787  00380C  0008               	tblrd		*
  2788  00380E  50F5               	movf	tablat,w,c
  2789  003810  5C07               	subwf	??_strncmp^0,w,c
  2790  003812  6E01               	movwf	?_strncmp^0,c
  2791  003814  6A02               	clrf	(?_strncmp+1)^0,c
  2792  003816  A0D8               	btfss	status,0,c
  2793  003818  0602               	decf	(?_strncmp+1)^0,f,c
  2794  00381A                     l1102:
  2795  00381A  0012               	return		;funcret
  2796  00381C                     __end_of_strncmp:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _efgtoa *****************
  2800 ;; Defined at:
  2801 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2804 ;;		 -> sprintf@f(6), 
  2805 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2806 ;;  c               1   51[COMRAM] unsigned char 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  u               4   52[BANK0 ] unsigned char 
  2809 ;;  g               4   44[BANK0 ] unsigned char 
  2810 ;;  l               4   38[BANK0 ] unsigned char 
  2811 ;;  h               4   34[BANK0 ] unsigned char 
  2812 ;;  ou              4   20[BANK0 ] unsigned char 
  2813 ;;  n               2   50[BANK0 ] int 
  2814 ;;  e               2   48[BANK0 ] int 
  2815 ;;  i               2   42[BANK0 ] int 
  2816 ;;  w               2   30[BANK0 ] int 
  2817 ;;  p               2   28[BANK0 ] int 
  2818 ;;  sign            2   26[BANK0 ] int 
  2819 ;;  d               2   24[BANK0 ] int 
  2820 ;;  m               2   18[BANK0 ] int 
  2821 ;;  ne              2   16[BANK0 ] int 
  2822 ;;  pp              2   14[BANK0 ] int 
  2823 ;;  t               2   12[BANK0 ] int 
  2824 ;;  mode            1   33[BANK0 ] unsigned char 
  2825 ;;  nmode           1   32[BANK0 ] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  2   45[COMRAM] int 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2835 ;;      Params:         7       0       0       0       0       0       0       0       0
  2836 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2837 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2838 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2839 ;;Total ram usage:       68 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    4
  2842 ;; This function calls:
  2843 ;;		___awdiv
  2844 ;;		___awmod
  2845 ;;		___fladd
  2846 ;;		___fldiv
  2847 ;;		___fleq
  2848 ;;		___flge
  2849 ;;		___flmul
  2850 ;;		___flneg
  2851 ;;		___flsub
  2852 ;;		___fltol
  2853 ;;		___fpclassifyf
  2854 ;;		_floorf
  2855 ;;		_isupper
  2856 ;;		_pad
  2857 ;;		_strcpy
  2858 ;;		_tolower
  2859 ;; This function is called by:
  2860 ;;		_vfpfcnvrt
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text5
  2865  00089A                     __ptext5:
  2866                           	callstack 0
  2867  00089A                     _efgtoa:
  2868                           	callstack 23
  2869  00089A                     
  2870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2871  00089A  0E00               	movlw	0
  2872  00089C  0100               	movlb	0	; () banked
  2873  00089E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2874  0008A0  0E00               	movlw	0
  2875  0008A2  6F7A               	movwf	efgtoa@sign& (0+255),b
  2876  0008A4                     
  2877                           ; BSR set to: 0
  2878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2879  0008A4  C030  F08C         	movff	efgtoa@f,efgtoa@g
  2880  0008A8  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2881  0008AC  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2882  0008B0  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2883  0008B4                     
  2884                           ; BSR set to: 0
  2885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2886  0008B4  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2887  0008B6  EF61  F004         	goto	u4540
  2888  0008BA  EF5F  F004         	goto	u4541
  2889  0008BE                     u4541:
  2890  0008BE  EF77  F004         	goto	l3800
  2891  0008C2                     u4540:
  2892  0008C2                     
  2893                           ; BSR set to: 0
  2894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2895  0008C2  0E00               	movlw	0
  2896  0008C4  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2897  0008C6  0E01               	movlw	1
  2898  0008C8  6F7A               	movwf	efgtoa@sign& (0+255),b
  2899  0008CA                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2902  0008CA  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2903  0008CE  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2904  0008D2  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2905  0008D6  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2906  0008DA  EC3F  F020         	call	___flneg	;wreg free
  2907  0008DE  C001  F08C         	movff	?___flneg,efgtoa@g
  2908  0008E2  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2909  0008E6  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2910  0008EA  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2911  0008EE                     l3800:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2914  0008EE  0E00               	movlw	0
  2915  0008F0  0100               	movlb	0	; () banked
  2916  0008F2  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2917  0008F4  0E00               	movlw	0
  2918  0008F6  6F92               	movwf	efgtoa@n& (0+255),b
  2919  0008F8                     
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2922  0008F8  C0C2  F07E         	movff	_width,efgtoa@w
  2923  0008FC  C0C3  F07F         	movff	_width+1,efgtoa@w+1
  2924  000900                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2927  000900  517A               	movf	efgtoa@sign& (0+255),w,b
  2928  000902  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2929  000904  A4D8               	btfss	status,2,c
  2930  000906  EF87  F004         	goto	u4551
  2931  00090A  EF89  F004         	goto	u4550
  2932  00090E                     u4551:
  2933  00090E  EF90  F004         	goto	l3808
  2934  000912                     u4550:
  2935  000912                     
  2936                           ; BSR set to: 0
  2937  000912  A5C6               	btfss	_flags& (0+255),2,b
  2938  000914  EF8E  F004         	goto	u4561
  2939  000918  EF90  F004         	goto	u4560
  2940  00091C                     u4561:
  2941  00091C  EFAA  F004         	goto	l3820
  2942  000920                     u4560:
  2943  000920                     l3808:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2947  000920  517A               	movf	efgtoa@sign& (0+255),w,b
  2948  000922  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2949  000924  A4D8               	btfss	status,2,c
  2950  000926  EF97  F004         	goto	u4571
  2951  00092A  EF99  F004         	goto	u4570
  2952  00092E                     u4571:
  2953  00092E  EF9F  F004         	goto	l3812
  2954  000932                     u4570:
  2955  000932                     
  2956                           ; BSR set to: 0
  2957  000932  0E00               	movlw	0
  2958  000934  6F61               	movwf	(_efgtoa$668+1)& (0+255),b
  2959  000936  0E2B               	movlw	43
  2960  000938  6F60               	movwf	_efgtoa$668& (0+255),b
  2961  00093A  EFA3  F004         	goto	l3814
  2962  00093E                     l3812:
  2963                           
  2964                           ; BSR set to: 0
  2965  00093E  0E00               	movlw	0
  2966  000940  6F61               	movwf	(_efgtoa$668+1)& (0+255),b
  2967  000942  0E2D               	movlw	45
  2968  000944  6F60               	movwf	_efgtoa$668& (0+255),b
  2969  000946                     l3814:
  2970                           
  2971                           ; BSR set to: 0
  2972  000946  C060  F100         	movff	_efgtoa$668,_dbuf
  2973  00094A                     
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2976  00094A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2977  00094C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2978  00094E                     
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 352:         --w;
  2981  00094E  077E               	decf	efgtoa@w& (0+255),f,b
  2982  000950  A0D8               	btfss	status,0,c
  2983  000952  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2984  000954                     l3820:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2988  000954  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2989  000958  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2990  00095C  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2991  000960  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2992  000964  EC24  F01B         	call	___fpclassifyf	;wreg free
  2993  000968  0401               	decf	?___fpclassifyf^0,w,c
  2994  00096A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2995  00096C  A4D8               	btfss	status,2,c
  2996  00096E  EFBB  F004         	goto	u4581
  2997  000972  EFBD  F004         	goto	u4580
  2998  000976                     u4581:
  2999  000976  EF14  F005         	goto	l3838
  3000  00097A                     u4580:
  3001  00097A  0EBF               	movlw	191
  3002  00097C  6E35               	movwf	??_efgtoa^0,c
  3003  00097E  0EFF               	movlw	255
  3004  000980  6E36               	movwf	(??_efgtoa+1)^0,c
  3005  000982  5034               	movf	efgtoa@c^0,w,c
  3006  000984  6E37               	movwf	(??_efgtoa+2)^0,c
  3007  000986  6A38               	clrf	(??_efgtoa+3)^0,c
  3008  000988  5035               	movf	??_efgtoa^0,w,c
  3009  00098A  2637               	addwf	(??_efgtoa+2)^0,f,c
  3010  00098C  5036               	movf	(??_efgtoa+1)^0,w,c
  3011  00098E  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3012  000990  5038               	movf	(??_efgtoa+3)^0,w,c
  3013  000992  E10A               	bnz	u4590
  3014  000994  0E1A               	movlw	26
  3015  000996  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3016  000998  A0D8               	btfss	status,0,c
  3017  00099A  EFD1  F004         	goto	u4591
  3018  00099E  EFD4  F004         	goto	u4590
  3019  0009A2                     u4591:
  3020  0009A2  0E01               	movlw	1
  3021  0009A4  EFD5  F004         	goto	u4600
  3022  0009A8                     u4590:
  3023  0009A8  0E00               	movlw	0
  3024  0009AA                     u4600:
  3025  0009AA  0100               	movlb	0	; () banked
  3026  0009AC  6F62               	movwf	_efgtoa$669& (0+255),b
  3027  0009AE  6B63               	clrf	(_efgtoa$669+1)& (0+255),b
  3028  0009B0                     
  3029                           ; BSR set to: 0
  3030  0009B0  5162               	movf	_efgtoa$669& (0+255),w,b
  3031  0009B2  1163               	iorwf	(_efgtoa$669+1)& (0+255),w,b
  3032  0009B4  B4D8               	btfsc	status,2,c
  3033  0009B6  EFDF  F004         	goto	u4611
  3034  0009BA  EFE1  F004         	goto	u4610
  3035  0009BE                     u4611:
  3036  0009BE  EFEF  F004         	goto	l3830
  3037  0009C2                     u4610:
  3038  0009C2                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3041  0009C2  0E00               	movlw	low _dbuf
  3042  0009C4  2592               	addwf	efgtoa@n& (0+255),w,b
  3043  0009C6  6E01               	movwf	strcpy@dest^0,c
  3044  0009C8  0E01               	movlw	high _dbuf
  3045  0009CA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3046  0009CC  6E02               	movwf	(strcpy@dest+1)^0,c
  3047  0009CE  0E86               	movlw	low STR_10
  3048  0009D0  6E03               	movwf	strcpy@src^0,c
  3049  0009D2  0E08               	movlw	high STR_10
  3050  0009D4  6E04               	movwf	(strcpy@src+1)^0,c
  3051  0009D6  ECF0  F01E         	call	_strcpy	;wreg free
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3054  0009DA  EFFB  F004         	goto	l3832
  3055  0009DE                     l3830:
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3059  0009DE  0E00               	movlw	low _dbuf
  3060  0009E0  2592               	addwf	efgtoa@n& (0+255),w,b
  3061  0009E2  6E01               	movwf	strcpy@dest^0,c
  3062  0009E4  0E01               	movlw	high _dbuf
  3063  0009E6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3064  0009E8  6E02               	movwf	(strcpy@dest+1)^0,c
  3065  0009EA  0E8E               	movlw	low STR_11
  3066  0009EC  6E03               	movwf	strcpy@src^0,c
  3067  0009EE  0E08               	movlw	high STR_11
  3068  0009F0  6E04               	movwf	(strcpy@src+1)^0,c
  3069  0009F2  ECF0  F01E         	call	_strcpy	;wreg free
  3070  0009F6                     l3832:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3073  0009F6  0100               	movlb	0	; () banked
  3074  0009F8  0EFD               	movlw	253
  3075  0009FA  277E               	addwf	efgtoa@w& (0+255),f,b
  3076  0009FC  0EFF               	movlw	255
  3077  0009FE  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3078  000A00                     l3834:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3081  000A00  C02E  F011         	movff	efgtoa@fp,pad@fp
  3082  000A04  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  3083  000A08  0E00               	movlw	low _dbuf
  3084  000A0A  6E13               	movwf	pad@buf^0,c
  3085  000A0C  0E01               	movlw	high _dbuf
  3086  000A0E  6E14               	movwf	(pad@buf+1)^0,c
  3087  000A10  C07E  F015         	movff	efgtoa@w,pad@p
  3088  000A14  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  3089  000A18  EC73  F01C         	call	_pad	;wreg free
  3090  000A1C  C011  F02E         	movff	?_pad,?_efgtoa
  3091  000A20  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  3092  000A24  EF78  F00A         	goto	l850
  3093  000A28                     l3838:
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3096  000A28  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3097  000A2C  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3098  000A30  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3099  000A34  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3100  000A38  EC24  F01B         	call	___fpclassifyf	;wreg free
  3101  000A3C  5001               	movf	?___fpclassifyf^0,w,c
  3102  000A3E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3103  000A40  A4D8               	btfss	status,2,c
  3104  000A42  EF25  F005         	goto	u4621
  3105  000A46  EF27  F005         	goto	u4620
  3106  000A4A                     u4621:
  3107  000A4A  EF67  F005         	goto	l3856
  3108  000A4E                     u4620:
  3109  000A4E  0EBF               	movlw	191
  3110  000A50  6E35               	movwf	??_efgtoa^0,c
  3111  000A52  0EFF               	movlw	255
  3112  000A54  6E36               	movwf	(??_efgtoa+1)^0,c
  3113  000A56  5034               	movf	efgtoa@c^0,w,c
  3114  000A58  6E37               	movwf	(??_efgtoa+2)^0,c
  3115  000A5A  6A38               	clrf	(??_efgtoa+3)^0,c
  3116  000A5C  5035               	movf	??_efgtoa^0,w,c
  3117  000A5E  2637               	addwf	(??_efgtoa+2)^0,f,c
  3118  000A60  5036               	movf	(??_efgtoa+1)^0,w,c
  3119  000A62  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3120  000A64  5038               	movf	(??_efgtoa+3)^0,w,c
  3121  000A66  E10A               	bnz	u4630
  3122  000A68  0E1A               	movlw	26
  3123  000A6A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3124  000A6C  A0D8               	btfss	status,0,c
  3125  000A6E  EF3B  F005         	goto	u4631
  3126  000A72  EF3E  F005         	goto	u4630
  3127  000A76                     u4631:
  3128  000A76  0E01               	movlw	1
  3129  000A78  EF3F  F005         	goto	u4640
  3130  000A7C                     u4630:
  3131  000A7C  0E00               	movlw	0
  3132  000A7E                     u4640:
  3133  000A7E  0100               	movlb	0	; () banked
  3134  000A80  6F64               	movwf	_efgtoa$673& (0+255),b
  3135  000A82  6B65               	clrf	(_efgtoa$673+1)& (0+255),b
  3136  000A84                     
  3137                           ; BSR set to: 0
  3138  000A84  5164               	movf	_efgtoa$673& (0+255),w,b
  3139  000A86  1165               	iorwf	(_efgtoa$673+1)& (0+255),w,b
  3140  000A88  B4D8               	btfsc	status,2,c
  3141  000A8A  EF49  F005         	goto	u4651
  3142  000A8E  EF4B  F005         	goto	u4650
  3143  000A92                     u4651:
  3144  000A92  EF59  F005         	goto	l3848
  3145  000A96                     u4650:
  3146  000A96                     
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3149  000A96  0E00               	movlw	low _dbuf
  3150  000A98  2592               	addwf	efgtoa@n& (0+255),w,b
  3151  000A9A  6E01               	movwf	strcpy@dest^0,c
  3152  000A9C  0E01               	movlw	high _dbuf
  3153  000A9E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3154  000AA0  6E02               	movwf	(strcpy@dest+1)^0,c
  3155  000AA2  0E8A               	movlw	low STR_14
  3156  000AA4  6E03               	movwf	strcpy@src^0,c
  3157  000AA6  0E08               	movlw	high STR_14
  3158  000AA8  6E04               	movwf	(strcpy@src+1)^0,c
  3159  000AAA  ECF0  F01E         	call	_strcpy	;wreg free
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3162  000AAE  EFFB  F004         	goto	l3832
  3163  000AB2                     l3848:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3167  000AB2  0E00               	movlw	low _dbuf
  3168  000AB4  2592               	addwf	efgtoa@n& (0+255),w,b
  3169  000AB6  6E01               	movwf	strcpy@dest^0,c
  3170  000AB8  0E01               	movlw	high _dbuf
  3171  000ABA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3172  000ABC  6E02               	movwf	(strcpy@dest+1)^0,c
  3173  000ABE  0E92               	movlw	low STR_15
  3174  000AC0  6E03               	movwf	strcpy@src^0,c
  3175  000AC2  0E08               	movlw	high STR_15
  3176  000AC4  6E04               	movwf	(strcpy@src+1)^0,c
  3177  000AC6  ECF0  F01E         	call	_strcpy	;wreg free
  3178  000ACA  EFFB  F004         	goto	l3832
  3179  000ACE                     l3856:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3182  000ACE  0E00               	movlw	0
  3183  000AD0  0100               	movlb	0	; () banked
  3184  000AD2  6F94               	movwf	efgtoa@u& (0+255),b
  3185  000AD4  0E00               	movlw	0
  3186  000AD6  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3187  000AD8  0E80               	movlw	128
  3188  000ADA  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3189  000ADC  0E3F               	movlw	63
  3190  000ADE  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3193  000AE0  0E00               	movlw	0
  3194  000AE2  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3195  000AE4  0E00               	movlw	0
  3196  000AE6  6F90               	movwf	efgtoa@e& (0+255),b
  3197  000AE8                     
  3198                           ; BSR set to: 0
  3199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3200  000AE8  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3201  000AEC  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3202  000AF0  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3203  000AF4  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3204  000AF8  0E00               	movlw	0
  3205  000AFA  6E05               	movwf	___fleq@ff2^0,c
  3206  000AFC  0E00               	movlw	0
  3207  000AFE  6E06               	movwf	(___fleq@ff2+1)^0,c
  3208  000B00  0E00               	movlw	0
  3209  000B02  6E07               	movwf	(___fleq@ff2+2)^0,c
  3210  000B04  0E00               	movlw	0
  3211  000B06  6E08               	movwf	(___fleq@ff2+3)^0,c
  3212  000B08  EC90  F01D         	call	___fleq	;wreg free
  3213  000B0C  B0D8               	btfsc	status,0,c
  3214  000B0E  EF8B  F005         	goto	u4661
  3215  000B12  EF8D  F005         	goto	u4660
  3216  000B16                     u4661:
  3217  000B16  EF10  F006         	goto	l3874
  3218  000B1A                     u4660:
  3219  000B1A  EFAC  F005         	goto	l3866
  3220  000B1E                     l3862:
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3223  000B1E  C094  F001         	movff	efgtoa@u,___flmul@b
  3224  000B22  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3225  000B26  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3226  000B2A  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3227  000B2E  0E00               	movlw	0
  3228  000B30  6E05               	movwf	___flmul@a^0,c
  3229  000B32  0E00               	movlw	0
  3230  000B34  6E06               	movwf	(___flmul@a+1)^0,c
  3231  000B36  0E20               	movlw	32
  3232  000B38  6E07               	movwf	(___flmul@a+2)^0,c
  3233  000B3A  0E41               	movlw	65
  3234  000B3C  6E08               	movwf	(___flmul@a+3)^0,c
  3235  000B3E  EC4E  F010         	call	___flmul	;wreg free
  3236  000B42  C001  F094         	movff	?___flmul,efgtoa@u
  3237  000B46  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  3238  000B4A  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  3239  000B4E  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  3240  000B52                     
  3241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3242  000B52  0100               	movlb	0	; () banked
  3243  000B54  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3244  000B56  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3245  000B58                     l3866:
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3248  000B58  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3249  000B5C  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3250  000B60  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3251  000B64  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3252  000B68  0E00               	movlw	0
  3253  000B6A  6E05               	movwf	___flmul@a^0,c
  3254  000B6C  0E00               	movlw	0
  3255  000B6E  6E06               	movwf	(___flmul@a+1)^0,c
  3256  000B70  0E20               	movlw	32
  3257  000B72  6E07               	movwf	(___flmul@a+2)^0,c
  3258  000B74  0E41               	movlw	65
  3259  000B76  6E08               	movwf	(___flmul@a+3)^0,c
  3260  000B78  C094  F001         	movff	efgtoa@u,___flmul@b
  3261  000B7C  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3262  000B80  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3263  000B84  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3264  000B88  EC4E  F010         	call	___flmul	;wreg free
  3265  000B8C  C001  F01E         	movff	?___flmul,___flge@ff2
  3266  000B90  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3267  000B94  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3268  000B98  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3269  000B9C  ECA2  F01A         	call	___flge	;wreg free
  3270  000BA0  B0D8               	btfsc	status,0,c
  3271  000BA2  EFD5  F005         	goto	u4671
  3272  000BA6  EFD7  F005         	goto	u4670
  3273  000BAA                     u4671:
  3274  000BAA  EF8F  F005         	goto	l3862
  3275  000BAE                     u4670:
  3276  000BAE  EFF7  F005         	goto	l3872
  3277  000BB2                     l3868:
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3280  000BB2  C094  F001         	movff	efgtoa@u,___fldiv@b
  3281  000BB6  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3282  000BBA  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3283  000BBE  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3284  000BC2  0E00               	movlw	0
  3285  000BC4  6E05               	movwf	___fldiv@a^0,c
  3286  000BC6  0E00               	movlw	0
  3287  000BC8  6E06               	movwf	(___fldiv@a+1)^0,c
  3288  000BCA  0E20               	movlw	32
  3289  000BCC  6E07               	movwf	(___fldiv@a+2)^0,c
  3290  000BCE  0E41               	movlw	65
  3291  000BD0  6E08               	movwf	(___fldiv@a+3)^0,c
  3292  000BD2  EC63  F012         	call	___fldiv	;wreg free
  3293  000BD6  C001  F094         	movff	?___fldiv,efgtoa@u
  3294  000BDA  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3295  000BDE  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3296  000BE2  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3297  000BE6                     
  3298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3299  000BE6  0100               	movlb	0	; () banked
  3300  000BE8  0790               	decf	efgtoa@e& (0+255),f,b
  3301  000BEA  A0D8               	btfss	status,0,c
  3302  000BEC  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3303  000BEE                     l3872:
  3304                           
  3305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3306  000BEE  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3307  000BF2  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3308  000BF6  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3309  000BFA  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3310  000BFE  C094  F01E         	movff	efgtoa@u,___flge@ff2
  3311  000C02  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3312  000C06  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3313  000C0A  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3314  000C0E  ECA2  F01A         	call	___flge	;wreg free
  3315  000C12  A0D8               	btfss	status,0,c
  3316  000C14  EF0E  F006         	goto	u4681
  3317  000C18  EF10  F006         	goto	u4680
  3318  000C1C                     u4681:
  3319  000C1C  EFD9  F005         	goto	l3868
  3320  000C20                     u4680:
  3321  000C20                     l3874:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3324  000C20  C034  F007         	movff	efgtoa@c,tolower@c
  3325  000C24  6A08               	clrf	(tolower@c+1)^0,c
  3326  000C26  ECC0  F01E         	call	_tolower	;wreg free
  3327  000C2A  5007               	movf	?_tolower^0,w,c
  3328  000C2C  0100               	movlb	0	; () banked
  3329  000C2E  6F81               	movwf	efgtoa@mode& (0+255),b
  3330  000C30                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3333  000C30  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3334  000C34                     
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3337  000C34  0E67               	movlw	103
  3338  000C36  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3339  000C38  A4D8               	btfss	status,2,c
  3340  000C3A  EF21  F006         	goto	u4691
  3341  000C3E  EF23  F006         	goto	u4690
  3342  000C42                     u4691:
  3343  000C42  EF49  F006         	goto	l3888
  3344  000C46                     u4690:
  3345  000C46                     
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3348  000C46  51C4               	movf	_prec& (0+255),w,b
  3349  000C48  11C5               	iorwf	(_prec+1)& (0+255),w,b
  3350  000C4A  A4D8               	btfss	status,2,c
  3351  000C4C  EF2A  F006         	goto	u4701
  3352  000C50  EF2C  F006         	goto	u4700
  3353  000C54                     u4701:
  3354  000C54  EF30  F006         	goto	l3884
  3355  000C58                     u4700:
  3356  000C58                     
  3357                           ; BSR set to: 0
  3358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3359  000C58  0E00               	movlw	0
  3360  000C5A  6FC5               	movwf	(_prec+1)& (0+255),b
  3361  000C5C  0E01               	movlw	1
  3362  000C5E  6FC4               	movwf	_prec& (0+255),b
  3363  000C60                     l3884:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3367  000C60  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  3368  000C62  EF3D  F006         	goto	u4710
  3369  000C66  51C5               	movf	(_prec+1)& (0+255),w,b
  3370  000C68  E106               	bnz	u4711
  3371  000C6A  05C4               	decf	_prec& (0+255),w,b
  3372  000C6C  B0D8               	btfsc	status,0,c
  3373  000C6E  EF3B  F006         	goto	u4711
  3374  000C72  EF3D  F006         	goto	u4710
  3375  000C76                     u4711:
  3376  000C76  EF43  F006         	goto	l868
  3377  000C7A                     u4710:
  3378  000C7A                     l3886:
  3379                           
  3380                           ; BSR set to: 0
  3381  000C7A  0E00               	movlw	0
  3382  000C7C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3383  000C7E  0E06               	movlw	6
  3384  000C80  6F7C               	movwf	efgtoa@p& (0+255),b
  3385  000C82  EF52  F006         	goto	l3894
  3386  000C86                     l868:
  3387                           
  3388                           ; BSR set to: 0
  3389  000C86  C0C4  F07C         	movff	_prec,efgtoa@p
  3390  000C8A  C0C5  F07D         	movff	_prec+1,efgtoa@p+1
  3391  000C8E  EF52  F006         	goto	l3894
  3392  000C92                     l3888:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3396  000C92  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  3397  000C94  EF4E  F006         	goto	u4721
  3398  000C98  EF50  F006         	goto	u4720
  3399  000C9C                     u4721:
  3400  000C9C  EF3D  F006         	goto	l3886
  3401  000CA0                     u4720:
  3402  000CA0  EF43  F006         	goto	l868
  3403  000CA4                     l3894:
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3407  000CA4  0E67               	movlw	103
  3408  000CA6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3409  000CA8  A4D8               	btfss	status,2,c
  3410  000CAA  EF59  F006         	goto	u4731
  3411  000CAE  EF5B  F006         	goto	u4730
  3412  000CB2                     u4731:
  3413  000CB2  EF8A  F006         	goto	l3904
  3414  000CB6                     u4730:
  3415  000CB6                     
  3416                           ; BSR set to: 0
  3417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3418  000CB6  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3419  000CB8  EF69  F006         	goto	u4740
  3420  000CBC  0EFC               	movlw	252
  3421  000CBE  5D90               	subwf	efgtoa@e& (0+255),w,b
  3422  000CC0  0EFF               	movlw	255
  3423  000CC2  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3424  000CC4  A0D8               	btfss	status,0,c
  3425  000CC6  EF67  F006         	goto	u4741
  3426  000CCA  EF69  F006         	goto	u4740
  3427  000CCE                     u4741:
  3428  000CCE  EF88  F006         	goto	l3902
  3429  000CD2                     u4740:
  3430  000CD2                     
  3431                           ; BSR set to: 0
  3432  000CD2  0EFF               	movlw	255
  3433  000CD4  6E35               	movwf	??_efgtoa^0,c
  3434  000CD6  0EFF               	movlw	255
  3435  000CD8  6E36               	movwf	(??_efgtoa+1)^0,c
  3436  000CDA  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  3437  000CDE  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  3438  000CE2  5035               	movf	??_efgtoa^0,w,c
  3439  000CE4  2637               	addwf	(??_efgtoa+2)^0,f,c
  3440  000CE6  5036               	movf	(??_efgtoa+1)^0,w,c
  3441  000CE8  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3442  000CEA  5190               	movf	efgtoa@e& (0+255),w,b
  3443  000CEC  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3444  000CEE  5038               	movf	(??_efgtoa+3)^0,w,c
  3445  000CF0  0A80               	xorlw	128
  3446  000CF2  6E39               	movwf	(??_efgtoa+4)^0,c
  3447  000CF4  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3448  000CF6  0A80               	xorlw	128
  3449  000CF8  5839               	subwfb	(??_efgtoa+4)^0,w,c
  3450  000CFA  A0D8               	btfss	status,0,c
  3451  000CFC  EF82  F006         	goto	u4751
  3452  000D00  EF84  F006         	goto	u4750
  3453  000D04                     u4751:
  3454  000D04  EF88  F006         	goto	l3902
  3455  000D08                     u4750:
  3456  000D08                     
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3459  000D08  0E66               	movlw	102
  3460  000D0A  6F80               	movwf	efgtoa@nmode& (0+255),b
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3463  000D0C  EF8A  F006         	goto	l3904
  3464  000D10                     l3902:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3468  000D10  0E65               	movlw	101
  3469  000D12  6F80               	movwf	efgtoa@nmode& (0+255),b
  3470  000D14                     l3904:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3474  000D14  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3475  000D18  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3476  000D1C                     
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3479  000D1C  0E67               	movlw	103
  3480  000D1E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3481  000D20  A4D8               	btfss	status,2,c
  3482  000D22  EF95  F006         	goto	u4761
  3483  000D26  EF97  F006         	goto	u4760
  3484  000D2A                     u4761:
  3485  000D2A  EFA7  F006         	goto	l3912
  3486  000D2E                     u4760:
  3487  000D2E                     
  3488                           ; BSR set to: 0
  3489  000D2E  0E66               	movlw	102
  3490  000D30  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3491  000D32  A4D8               	btfss	status,2,c
  3492  000D34  EF9E  F006         	goto	u4771
  3493  000D38  EFA0  F006         	goto	u4770
  3494  000D3C                     u4771:
  3495  000D3C  EFA9  F006         	goto	l3914
  3496  000D40                     u4770:
  3497  000D40                     
  3498                           ; BSR set to: 0
  3499  000D40  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3500  000D42  EFA7  F006         	goto	u4780
  3501  000D46  EFA5  F006         	goto	u4781
  3502  000D4A                     u4781:
  3503  000D4A  EFA9  F006         	goto	l3914
  3504  000D4E                     u4780:
  3505  000D4E                     l3912:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3509  000D4E  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3510  000D50  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3511  000D52                     l3914:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3515  000D52  0E66               	movlw	102
  3516  000D54  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3517  000D56  A4D8               	btfss	status,2,c
  3518  000D58  EFB0  F006         	goto	u4791
  3519  000D5C  EFB2  F006         	goto	u4790
  3520  000D60                     u4791:
  3521  000D60  EFD2  F006         	goto	l3924
  3522  000D64                     u4790:
  3523  000D64                     
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3526  000D64  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3527  000D66  EFB9  F006         	goto	u4800
  3528  000D6A  EFB7  F006         	goto	u4801
  3529  000D6E                     u4801:
  3530  000D6E  EFC5  F006         	goto	l3920
  3531  000D72                     u4800:
  3532  000D72                     
  3533                           ; BSR set to: 0
  3534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3535  000D72  0E00               	movlw	0
  3536  000D74  6F94               	movwf	efgtoa@u& (0+255),b
  3537  000D76  0E00               	movlw	0
  3538  000D78  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3539  000D7A  0E80               	movlw	128
  3540  000D7C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3541  000D7E  0E3F               	movlw	63
  3542  000D80  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3545  000D82  0E00               	movlw	0
  3546  000D84  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3547  000D86  0E00               	movlw	0
  3548  000D88  6F90               	movwf	efgtoa@e& (0+255),b
  3549  000D8A                     l3920:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3553  000D8A  0E67               	movlw	103
  3554  000D8C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3555  000D8E  B4D8               	btfsc	status,2,c
  3556  000D90  EFCC  F006         	goto	u4811
  3557  000D94  EFCE  F006         	goto	u4810
  3558  000D98                     u4811:
  3559  000D98  EFD2  F006         	goto	l3924
  3560  000D9C                     u4810:
  3561  000D9C                     
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3564  000D9C  5190               	movf	efgtoa@e& (0+255),w,b
  3565  000D9E  2772               	addwf	efgtoa@m& (0+255),f,b
  3566  000DA0  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3567  000DA2  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3568  000DA4                     l3924:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3572  000DA4  0E00               	movlw	0
  3573  000DA6  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3574  000DA8  0E00               	movlw	0
  3575  000DAA  6F8A               	movwf	efgtoa@i& (0+255),b
  3576  000DAC                     
  3577                           ; BSR set to: 0
  3578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3579  000DAC  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3580  000DB0  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3581  000DB4  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3582  000DB8  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3583  000DBC                     
  3584                           ; BSR set to: 0
  3585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3586  000DBC  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3587  000DC0  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3588  000DC4  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3589  000DC8  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3592  000DCC  EF63  F007         	goto	l3938
  3593  000DD0                     l3930:
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3597  000DD0  C082  F001         	movff	efgtoa@h,___fldiv@b
  3598  000DD4  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3599  000DD8  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3600  000DDC  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3601  000DE0  C094  F005         	movff	efgtoa@u,___fldiv@a
  3602  000DE4  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3603  000DE8  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3604  000DEC  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3605  000DF0  EC63  F012         	call	___fldiv	;wreg free
  3606  000DF4  C001  F01A         	movff	?___fldiv,floorf@x
  3607  000DF8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3608  000DFC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3609  000E00  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3610  000E04  ECD8  F016         	call	_floorf	;wreg free
  3611  000E08  C01A  F086         	movff	?_floorf,efgtoa@l
  3612  000E0C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3613  000E10  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3614  000E14  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3617  000E18  C086  F001         	movff	efgtoa@l,___fltol@f1
  3618  000E1C  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3619  000E20  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3620  000E24  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3621  000E28  EC1F  F01A         	call	___fltol	;wreg free
  3622  000E2C  C001  F078         	movff	?___fltol,efgtoa@d
  3623  000E30  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3624  000E34                     
  3625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3626  000E34  C082  F01A         	movff	efgtoa@h,___flsub@b
  3627  000E38  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3628  000E3C  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3629  000E40  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3630  000E44  C094  F005         	movff	efgtoa@u,___flmul@a
  3631  000E48  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3632  000E4C  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3633  000E50  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3634  000E54  C086  F001         	movff	efgtoa@l,___flmul@b
  3635  000E58  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3636  000E5C  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3637  000E60  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3638  000E64  EC4E  F010         	call	___flmul	;wreg free
  3639  000E68  C001  F01E         	movff	?___flmul,___flsub@a
  3640  000E6C  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3641  000E70  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3642  000E74  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3643  000E78  EC9D  F01F         	call	___flsub	;wreg free
  3644  000E7C  C01A  F082         	movff	?___flsub,efgtoa@h
  3645  000E80  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3646  000E84  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3647  000E88  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3648  000E8C                     
  3649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3650  000E8C  C094  F001         	movff	efgtoa@u,___fldiv@b
  3651  000E90  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3652  000E94  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3653  000E98  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3654  000E9C  0E00               	movlw	0
  3655  000E9E  6E05               	movwf	___fldiv@a^0,c
  3656  000EA0  0E00               	movlw	0
  3657  000EA2  6E06               	movwf	(___fldiv@a+1)^0,c
  3658  000EA4  0E20               	movlw	32
  3659  000EA6  6E07               	movwf	(___fldiv@a+2)^0,c
  3660  000EA8  0E41               	movlw	65
  3661  000EAA  6E08               	movwf	(___fldiv@a+3)^0,c
  3662  000EAC  EC63  F012         	call	___fldiv	;wreg free
  3663  000EB0  C001  F094         	movff	?___fldiv,efgtoa@u
  3664  000EB4  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3665  000EB8  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3666  000EBC  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3667  000EC0                     
  3668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3669  000EC0  0100               	movlb	0	; () banked
  3670  000EC2  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3671  000EC4  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3672  000EC6                     l3938:
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3676  000EC6  5172               	movf	efgtoa@m& (0+255),w,b
  3677  000EC8  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3678  000ECA  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3679  000ECC  0A80               	xorlw	128
  3680  000ECE  6E35               	movwf	??_efgtoa^0,c
  3681  000ED0  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3682  000ED2  0A80               	xorlw	128
  3683  000ED4  5835               	subwfb	??_efgtoa^0,w,c
  3684  000ED6  A0D8               	btfss	status,0,c
  3685  000ED8  EF70  F007         	goto	u4821
  3686  000EDC  EF72  F007         	goto	u4820
  3687  000EE0                     u4821:
  3688  000EE0  EFE8  F006         	goto	l3930
  3689  000EE4                     u4820:
  3690  000EE4                     
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3693  000EE4  C094  F001         	movff	efgtoa@u,___flmul@b
  3694  000EE8  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3695  000EEC  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3696  000EF0  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3697  000EF4  0E00               	movlw	0
  3698  000EF6  6E05               	movwf	___flmul@a^0,c
  3699  000EF8  0E00               	movlw	0
  3700  000EFA  6E06               	movwf	(___flmul@a+1)^0,c
  3701  000EFC  0EA0               	movlw	160
  3702  000EFE  6E07               	movwf	(___flmul@a+2)^0,c
  3703  000F00  0E40               	movlw	64
  3704  000F02  6E08               	movwf	(___flmul@a+3)^0,c
  3705  000F04  EC4E  F010         	call	___flmul	;wreg free
  3706  000F08  C001  F086         	movff	?___flmul,efgtoa@l
  3707  000F0C  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3708  000F10  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3709  000F14  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3710  000F18                     
  3711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3712  000F18  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3713  000F1C  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3714  000F20  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3715  000F24  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3716  000F28  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3717  000F2C  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3718  000F30  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3719  000F34  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3720  000F38  ECA2  F01A         	call	___flge	;wreg free
  3721  000F3C  B0D8               	btfsc	status,0,c
  3722  000F3E  EFA3  F007         	goto	u4831
  3723  000F42  EFA5  F007         	goto	u4830
  3724  000F46                     u4831:
  3725  000F46  EFB0  F007         	goto	l3946
  3726  000F4A                     u4830:
  3727  000F4A                     
  3728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3729  000F4A  0E00               	movlw	0
  3730  000F4C  0100               	movlb	0	; () banked
  3731  000F4E  6F86               	movwf	efgtoa@l& (0+255),b
  3732  000F50  0E00               	movlw	0
  3733  000F52  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3734  000F54  0E00               	movlw	0
  3735  000F56  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3736  000F58  0E00               	movlw	0
  3737  000F5A  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3738                           
  3739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 443:     } else {
  3740  000F5C  EFD9  F007         	goto	l3952
  3741  000F60                     l3946:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3744  000F60  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3745  000F64  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3746  000F68  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3747  000F6C  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3748  000F70  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3749  000F74  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3750  000F78  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3751  000F7C  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3752  000F80  EC90  F01D         	call	___fleq	;wreg free
  3753  000F84  A0D8               	btfss	status,0,c
  3754  000F86  EFC7  F007         	goto	u4841
  3755  000F8A  EFC9  F007         	goto	u4840
  3756  000F8E                     u4841:
  3757  000F8E  EFD9  F007         	goto	l3952
  3758  000F92                     u4840:
  3759  000F92  0100               	movlb	0	; () banked
  3760  000F94  B178               	btfsc	efgtoa@d& (0+255),0,b
  3761  000F96  EFCF  F007         	goto	u4851
  3762  000F9A  EFD1  F007         	goto	u4850
  3763  000F9E                     u4851:
  3764  000F9E  EFD9  F007         	goto	l3952
  3765  000FA2                     u4850:
  3766  000FA2                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3769  000FA2  0E00               	movlw	0
  3770  000FA4  6F86               	movwf	efgtoa@l& (0+255),b
  3771  000FA6  0E00               	movlw	0
  3772  000FA8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3773  000FAA  0E00               	movlw	0
  3774  000FAC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3775  000FAE  0E00               	movlw	0
  3776  000FB0  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3777  000FB2                     l3952:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3780  000FB2  C08C  F001         	movff	efgtoa@g,___fladd@b
  3781  000FB6  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3782  000FBA  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3783  000FBE  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3784  000FC2  C086  F005         	movff	efgtoa@l,___fladd@a
  3785  000FC6  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3786  000FCA  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3787  000FCE  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3788  000FD2  ECEE  F00D         	call	___fladd	;wreg free
  3789  000FD6  C001  F082         	movff	?___fladd,efgtoa@h
  3790  000FDA  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3791  000FDE  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3792  000FE2  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3793  000FE6                     
  3794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3795  000FE6  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3796  000FEA  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3797  000FEE  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3798  000FF2  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3799  000FF6  0E00               	movlw	0
  3800  000FF8  6E05               	movwf	___flmul@a^0,c
  3801  000FFA  0E00               	movlw	0
  3802  000FFC  6E06               	movwf	(___flmul@a+1)^0,c
  3803  000FFE  0E20               	movlw	32
  3804  001000  6E07               	movwf	(___flmul@a+2)^0,c
  3805  001002  0E41               	movlw	65
  3806  001004  6E08               	movwf	(___flmul@a+3)^0,c
  3807  001006  C074  F001         	movff	efgtoa@ou,___flmul@b
  3808  00100A  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3809  00100E  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3810  001012  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3811  001016  EC4E  F010         	call	___flmul	;wreg free
  3812  00101A  C001  F01E         	movff	?___flmul,___flge@ff2
  3813  00101E  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3814  001022  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3815  001026  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3816  00102A  ECA2  F01A         	call	___flge	;wreg free
  3817  00102E  A0D8               	btfss	status,0,c
  3818  001030  EF1C  F008         	goto	u4861
  3819  001034  EF1E  F008         	goto	u4860
  3820  001038                     u4861:
  3821  001038  EF47  F008         	goto	l3964
  3822  00103C                     u4860:
  3823  00103C                     
  3824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 454:   e++;
  3825  00103C  0100               	movlb	0	; () banked
  3826  00103E  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3827  001040  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3828  001042                     
  3829                           ; BSR set to: 0
  3830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3831  001042  C074  F001         	movff	efgtoa@ou,___flmul@b
  3832  001046  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3833  00104A  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3834  00104E  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3835  001052  0E00               	movlw	0
  3836  001054  6E05               	movwf	___flmul@a^0,c
  3837  001056  0E00               	movlw	0
  3838  001058  6E06               	movwf	(___flmul@a+1)^0,c
  3839  00105A  0E20               	movlw	32
  3840  00105C  6E07               	movwf	(___flmul@a+2)^0,c
  3841  00105E  0E41               	movlw	65
  3842  001060  6E08               	movwf	(___flmul@a+3)^0,c
  3843  001062  EC4E  F010         	call	___flmul	;wreg free
  3844  001066  C001  F074         	movff	?___flmul,efgtoa@ou
  3845  00106A  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  3846  00106E  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  3847  001072  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  3848  001076                     
  3849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3850  001076  0E66               	movlw	102
  3851  001078  0100               	movlb	0	; () banked
  3852  00107A  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3853  00107C  A4D8               	btfss	status,2,c
  3854  00107E  EF43  F008         	goto	u4871
  3855  001082  EF45  F008         	goto	u4870
  3856  001086                     u4871:
  3857  001086  EF47  F008         	goto	l3964
  3858  00108A                     u4870:
  3859  00108A                     
  3860                           ; BSR set to: 0
  3861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 458:    m++;
  3862  00108A  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3863  00108C  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3864  00108E                     l3964:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3867  00108E  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3868  001092  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3869  001096  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3870  00109A  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3871  00109E                     
  3872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3873  00109E  0E65               	movlw	101
  3874  0010A0  0100               	movlb	0	; () banked
  3875  0010A2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3876  0010A4  B4D8               	btfsc	status,2,c
  3877  0010A6  EF57  F008         	goto	u4881
  3878  0010AA  EF59  F008         	goto	u4880
  3879  0010AE                     u4881:
  3880  0010AE  EF5F  F008         	goto	l3970
  3881  0010B2                     u4880:
  3882  0010B2                     
  3883                           ; BSR set to: 0
  3884  0010B2  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3885  0010B6  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3886  0010BA  EF63  F008         	goto	l896
  3887  0010BE                     l3970:
  3888                           
  3889                           ; BSR set to: 0
  3890  0010BE  0E00               	movlw	0
  3891  0010C0  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3892  0010C2  0E00               	movlw	0
  3893  0010C4  6F70               	movwf	efgtoa@ne& (0+255),b
  3894  0010C6                     l896:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3898  0010C6  0E00               	movlw	0
  3899  0010C8  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3900  0010CA  0E00               	movlw	0
  3901  0010CC  6F6E               	movwf	efgtoa@pp& (0+255),b
  3902                           
  3903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3904  0010CE  0E00               	movlw	0
  3905  0010D0  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3906  0010D2  0E00               	movlw	0
  3907  0010D4  6F6C               	movwf	efgtoa@t& (0+255),b
  3908                           
  3909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3910  0010D6  0E00               	movlw	0
  3911  0010D8  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3912  0010DA  0E00               	movlw	0
  3913  0010DC  6F8A               	movwf	efgtoa@i& (0+255),b
  3914                           
  3915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3916  0010DE  EF5E  F009         	goto	l4020
  3917  0010E2                     l3972:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3921  0010E2  C082  F001         	movff	efgtoa@h,___fldiv@b
  3922  0010E6  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3923  0010EA  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3924  0010EE  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3925  0010F2  C094  F005         	movff	efgtoa@u,___fldiv@a
  3926  0010F6  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3927  0010FA  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3928  0010FE  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3929  001102  EC63  F012         	call	___fldiv	;wreg free
  3930  001106  C001  F01A         	movff	?___fldiv,floorf@x
  3931  00110A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3932  00110E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3933  001112  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3934  001116  ECD8  F016         	call	_floorf	;wreg free
  3935  00111A  C01A  F086         	movff	?_floorf,efgtoa@l
  3936  00111E  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3937  001122  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3938  001126  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3939                           
  3940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3941  00112A  C086  F001         	movff	efgtoa@l,___fltol@f1
  3942  00112E  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3943  001132  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3944  001136  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3945  00113A  EC1F  F01A         	call	___fltol	;wreg free
  3946  00113E  C001  F078         	movff	?___fltol,efgtoa@d
  3947  001142  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3948  001146                     
  3949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3950  001146  0100               	movlb	0	; () banked
  3951  001148  B9C6               	btfsc	_flags& (0+255),4,b
  3952  00114A  EFA9  F008         	goto	u4891
  3953  00114E  EFAB  F008         	goto	u4890
  3954  001152                     u4891:
  3955  001152  EFC8  F008         	goto	l3984
  3956  001156                     u4890:
  3957  001156                     
  3958                           ; BSR set to: 0
  3959  001156  5178               	movf	efgtoa@d& (0+255),w,b
  3960  001158  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3961  00115A  A4D8               	btfss	status,2,c
  3962  00115C  EFB2  F008         	goto	u4901
  3963  001160  EFB4  F008         	goto	u4900
  3964  001164                     u4901:
  3965  001164  EFC8  F008         	goto	l3984
  3966  001168                     u4900:
  3967  001168                     
  3968                           ; BSR set to: 0
  3969  001168  0E67               	movlw	103
  3970  00116A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3971  00116C  A4D8               	btfss	status,2,c
  3972  00116E  EFBB  F008         	goto	u4911
  3973  001172  EFBD  F008         	goto	u4910
  3974  001176                     u4911:
  3975  001176  EFC8  F008         	goto	l3984
  3976  00117A                     u4910:
  3977  00117A                     
  3978                           ; BSR set to: 0
  3979  00117A  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3980  00117C  EFC4  F008         	goto	u4920
  3981  001180  EFC2  F008         	goto	u4921
  3982  001184                     u4921:
  3983  001184  EFC8  F008         	goto	l3984
  3984  001188                     u4920:
  3985  001188                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3988  001188  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3989  00118A  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3990                           
  3991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3992  00118C  EF12  F009         	goto	l4012
  3993  001190                     l3984:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3997  001190  516E               	movf	efgtoa@pp& (0+255),w,b
  3998  001192  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3999  001194  A4D8               	btfss	status,2,c
  4000  001196  EFCF  F008         	goto	u4931
  4001  00119A  EFD1  F008         	goto	u4930
  4002  00119E                     u4931:
  4003  00119E  EFFB  F008         	goto	l4004
  4004  0011A2                     u4930:
  4005  0011A2                     
  4006                           ; BSR set to: 0
  4007  0011A2  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4008  0011A4  EFD8  F008         	goto	u4940
  4009  0011A8  EFD6  F008         	goto	u4941
  4010  0011AC                     u4941:
  4011  0011AC  EFFB  F008         	goto	l4004
  4012  0011B0                     u4940:
  4013  0011B0                     
  4014                           ; BSR set to: 0
  4015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4016  0011B0  0E00               	movlw	low _dbuf
  4017  0011B2  2592               	addwf	efgtoa@n& (0+255),w,b
  4018  0011B4  6ED9               	movwf	fsr2l,c
  4019  0011B6  0E01               	movlw	high _dbuf
  4020  0011B8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4021  0011BA  6EDA               	movwf	fsr2h,c
  4022  0011BC  0E2E               	movlw	46
  4023  0011BE  6EDF               	movwf	indf2,c
  4024  0011C0                     
  4025                           ; BSR set to: 0
  4026  0011C0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4027  0011C2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4028  0011C4                     
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4031  0011C4  077E               	decf	efgtoa@w& (0+255),f,b
  4032  0011C6  A0D8               	btfss	status,0,c
  4033  0011C8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4034  0011CA                     
  4035                           ; BSR set to: 0
  4036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4037  0011CA  0E00               	movlw	0
  4038  0011CC  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4039  0011CE  0E01               	movlw	1
  4040  0011D0  6F6E               	movwf	efgtoa@pp& (0+255),b
  4041  0011D2  EFFB  F008         	goto	l4004
  4042  0011D6                     l3996:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4046  0011D6  0E00               	movlw	low _dbuf
  4047  0011D8  2592               	addwf	efgtoa@n& (0+255),w,b
  4048  0011DA  6ED9               	movwf	fsr2l,c
  4049  0011DC  0E01               	movlw	high _dbuf
  4050  0011DE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4051  0011E0  6EDA               	movwf	fsr2h,c
  4052  0011E2  0E30               	movlw	48
  4053  0011E4  6EDF               	movwf	indf2,c
  4054  0011E6                     
  4055                           ; BSR set to: 0
  4056  0011E6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4057  0011E8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4058  0011EA                     
  4059                           ; BSR set to: 0
  4060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4061  0011EA  077E               	decf	efgtoa@w& (0+255),f,b
  4062  0011EC  A0D8               	btfss	status,0,c
  4063  0011EE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4064  0011F0                     
  4065                           ; BSR set to: 0
  4066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4067  0011F0  076C               	decf	efgtoa@t& (0+255),f,b
  4068  0011F2  A0D8               	btfss	status,0,c
  4069  0011F4  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  4070  0011F6                     l4004:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4074  0011F6  516C               	movf	efgtoa@t& (0+255),w,b
  4075  0011F8  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4076  0011FA  A4D8               	btfss	status,2,c
  4077  0011FC  EF02  F009         	goto	u4951
  4078  001200  EF04  F009         	goto	u4950
  4079  001204                     u4951:
  4080  001204  EFEB  F008         	goto	l3996
  4081  001208                     u4950:
  4082  001208                     
  4083                           ; BSR set to: 0
  4084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4085  001208  0E00               	movlw	low _dbuf
  4086  00120A  2592               	addwf	efgtoa@n& (0+255),w,b
  4087  00120C  6ED9               	movwf	fsr2l,c
  4088  00120E  0E01               	movlw	high _dbuf
  4089  001210  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4090  001212  6EDA               	movwf	fsr2h,c
  4091  001214  5178               	movf	efgtoa@d& (0+255),w,b
  4092  001216  0F30               	addlw	48
  4093  001218  6EDF               	movwf	indf2,c
  4094  00121A                     
  4095                           ; BSR set to: 0
  4096  00121A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4097  00121C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4098  00121E                     
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4101  00121E  077E               	decf	efgtoa@w& (0+255),f,b
  4102  001220  A0D8               	btfss	status,0,c
  4103  001222  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4104  001224                     l4012:
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4108  001224  C082  F01A         	movff	efgtoa@h,___flsub@b
  4109  001228  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4110  00122C  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4111  001230  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4112  001234  C094  F005         	movff	efgtoa@u,___flmul@a
  4113  001238  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4114  00123C  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4115  001240  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4116  001244  C086  F001         	movff	efgtoa@l,___flmul@b
  4117  001248  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4118  00124C  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4119  001250  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4120  001254  EC4E  F010         	call	___flmul	;wreg free
  4121  001258  C001  F01E         	movff	?___flmul,___flsub@a
  4122  00125C  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4123  001260  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4124  001264  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4125  001268  EC9D  F01F         	call	___flsub	;wreg free
  4126  00126C  C01A  F082         	movff	?___flsub,efgtoa@h
  4127  001270  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4128  001274  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4129  001278  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4130  00127C                     
  4131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4132  00127C  C094  F001         	movff	efgtoa@u,___fldiv@b
  4133  001280  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4134  001284  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4135  001288  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4136  00128C  0E00               	movlw	0
  4137  00128E  6E05               	movwf	___fldiv@a^0,c
  4138  001290  0E00               	movlw	0
  4139  001292  6E06               	movwf	(___fldiv@a+1)^0,c
  4140  001294  0E20               	movlw	32
  4141  001296  6E07               	movwf	(___fldiv@a+2)^0,c
  4142  001298  0E41               	movlw	65
  4143  00129A  6E08               	movwf	(___fldiv@a+3)^0,c
  4144  00129C  EC63  F012         	call	___fldiv	;wreg free
  4145  0012A0  C001  F094         	movff	?___fldiv,efgtoa@u
  4146  0012A4  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4147  0012A8  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4148  0012AC  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4149  0012B0                     
  4150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4151  0012B0  0100               	movlb	0	; () banked
  4152  0012B2  0770               	decf	efgtoa@ne& (0+255),f,b
  4153  0012B4  A0D8               	btfss	status,0,c
  4154  0012B6  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4155  0012B8                     
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4158  0012B8  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4159  0012BA  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4160  0012BC                     l4020:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4164  0012BC  5172               	movf	efgtoa@m& (0+255),w,b
  4165  0012BE  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4166  0012C0  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4167  0012C2  0A80               	xorlw	128
  4168  0012C4  6E35               	movwf	??_efgtoa^0,c
  4169  0012C6  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4170  0012C8  0A80               	xorlw	128
  4171  0012CA  5835               	subwfb	??_efgtoa^0,w,c
  4172  0012CC  B0D8               	btfsc	status,0,c
  4173  0012CE  EF6B  F009         	goto	u4961
  4174  0012D2  EF6D  F009         	goto	u4960
  4175  0012D6                     u4961:
  4176  0012D6  EF7B  F009         	goto	l4024
  4177  0012DA                     u4960:
  4178  0012DA                     
  4179                           ; BSR set to: 0
  4180  0012DA  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4181  0012DC  EF79  F009         	goto	u4971
  4182  0012E0  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4183  0012E2  E109               	bnz	u4970
  4184  0012E4  0E4B               	movlw	75
  4185  0012E6  5D92               	subwf	efgtoa@n& (0+255),w,b
  4186  0012E8  A0D8               	btfss	status,0,c
  4187  0012EA  EF79  F009         	goto	u4971
  4188  0012EE  EF7B  F009         	goto	u4970
  4189  0012F2                     u4971:
  4190  0012F2  EF71  F008         	goto	l3972
  4191  0012F6                     u4970:
  4192  0012F6                     l4024:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4196  0012F6  516E               	movf	efgtoa@pp& (0+255),w,b
  4197  0012F8  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4198  0012FA  A4D8               	btfss	status,2,c
  4199  0012FC  EF82  F009         	goto	u4981
  4200  001300  EF84  F009         	goto	u4980
  4201  001304                     u4981:
  4202  001304  EF95  F009         	goto	l4032
  4203  001308                     u4980:
  4204  001308                     
  4205                           ; BSR set to: 0
  4206  001308  A9C6               	btfss	_flags& (0+255),4,b
  4207  00130A  EF89  F009         	goto	u4991
  4208  00130E  EF8B  F009         	goto	u4990
  4209  001312                     u4991:
  4210  001312  EF95  F009         	goto	l4032
  4211  001316                     u4990:
  4212  001316                     
  4213                           ; BSR set to: 0
  4214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4215  001316  0E00               	movlw	low _dbuf
  4216  001318  2592               	addwf	efgtoa@n& (0+255),w,b
  4217  00131A  6ED9               	movwf	fsr2l,c
  4218  00131C  0E01               	movlw	high _dbuf
  4219  00131E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4220  001320  6EDA               	movwf	fsr2h,c
  4221  001322  0E2E               	movlw	46
  4222  001324  6EDF               	movwf	indf2,c
  4223  001326                     
  4224                           ; BSR set to: 0
  4225  001326  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4226  001328  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4227  00132A                     l4032:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4231  00132A  0E00               	movlw	low _dbuf
  4232  00132C  2592               	addwf	efgtoa@n& (0+255),w,b
  4233  00132E  6ED9               	movwf	fsr2l,c
  4234  001330  0E01               	movlw	high _dbuf
  4235  001332  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4236  001334  6EDA               	movwf	fsr2h,c
  4237  001336  0E00               	movlw	0
  4238  001338  6EDF               	movwf	indf2,c
  4239  00133A                     
  4240                           ; BSR set to: 0
  4241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4242  00133A  0E65               	movlw	101
  4243  00133C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4244  00133E  A4D8               	btfss	status,2,c
  4245  001340  EFA4  F009         	goto	u5001
  4246  001344  EFA6  F009         	goto	u5000
  4247  001348                     u5001:
  4248  001348  EF00  F005         	goto	l3834
  4249  00134C                     u5000:
  4250  00134C                     
  4251                           ; BSR set to: 0
  4252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4253  00134C  0E00               	movlw	0
  4254  00134E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4255  001350  0E4F               	movlw	79
  4256  001352  6F8A               	movwf	efgtoa@i& (0+255),b
  4257  001354                     
  4258                           ; BSR set to: 0
  4259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4260  001354  0E00               	movlw	low _dbuf
  4261  001356  258A               	addwf	efgtoa@i& (0+255),w,b
  4262  001358  6ED9               	movwf	fsr2l,c
  4263  00135A  0E01               	movlw	high _dbuf
  4264  00135C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4265  00135E  6EDA               	movwf	fsr2h,c
  4266  001360  0E00               	movlw	0
  4267  001362  6EDF               	movwf	indf2,c
  4268  001364                     
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4271  001364  0E00               	movlw	0
  4272  001366  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4273  001368  0E00               	movlw	0
  4274  00136A  6F7A               	movwf	efgtoa@sign& (0+255),b
  4275  00136C                     
  4276                           ; BSR set to: 0
  4277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4278  00136C  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4279  00136E  EFBD  F009         	goto	u5010
  4280  001372  EFBB  F009         	goto	u5011
  4281  001376                     u5011:
  4282  001376  EFC5  F009         	goto	l4048
  4283  00137A                     u5010:
  4284  00137A                     
  4285                           ; BSR set to: 0
  4286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4287  00137A  0E00               	movlw	0
  4288  00137C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4289  00137E  0E01               	movlw	1
  4290  001380  6F7A               	movwf	efgtoa@sign& (0+255),b
  4291  001382                     
  4292                           ; BSR set to: 0
  4293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4294  001382  6D90               	negf	efgtoa@e& (0+255),b
  4295  001384  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4296  001386  B0D8               	btfsc	status,0,c
  4297  001388  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4298  00138A                     l4048:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4302  00138A  0E00               	movlw	0
  4303  00138C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4304  00138E  0E02               	movlw	2
  4305  001390  6F7C               	movwf	efgtoa@p& (0+255),b
  4306                           
  4307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4308  001392  EFF6  F009         	goto	l4060
  4309  001396                     l4050:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4313  001396  078A               	decf	efgtoa@i& (0+255),f,b
  4314  001398  A0D8               	btfss	status,0,c
  4315  00139A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4316  00139C                     
  4317                           ; BSR set to: 0
  4318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4319  00139C  0E00               	movlw	low _dbuf
  4320  00139E  258A               	addwf	efgtoa@i& (0+255),w,b
  4321  0013A0  6ED9               	movwf	fsr2l,c
  4322  0013A2  0E01               	movlw	high _dbuf
  4323  0013A4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4324  0013A6  6EDA               	movwf	fsr2h,c
  4325  0013A8  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4326  0013AC  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4327  0013B0  0E00               	movlw	0
  4328  0013B2  6E04               	movwf	(___awmod@divisor+1)^0,c
  4329  0013B4  0E0A               	movlw	10
  4330  0013B6  6E03               	movwf	___awmod@divisor^0,c
  4331  0013B8  EC38  F01D         	call	___awmod	;wreg free
  4332  0013BC  5001               	movf	?___awmod^0,w,c
  4333  0013BE  0F30               	addlw	48
  4334  0013C0  6EDF               	movwf	indf2,c
  4335  0013C2                     
  4336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4337  0013C2  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4338  0013C6  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4339  0013CA  0E00               	movlw	0
  4340  0013CC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4341  0013CE  0E0A               	movlw	10
  4342  0013D0  6E03               	movwf	___awdiv@divisor^0,c
  4343  0013D2  ECD6  F01C         	call	___awdiv	;wreg free
  4344  0013D6  C001  F090         	movff	?___awdiv,efgtoa@e
  4345  0013DA  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4346  0013DE                     
  4347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4348  0013DE  0100               	movlb	0	; () banked
  4349  0013E0  077C               	decf	efgtoa@p& (0+255),f,b
  4350  0013E2  A0D8               	btfss	status,0,c
  4351  0013E4  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4352  0013E6                     
  4353                           ; BSR set to: 0
  4354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4355  0013E6  077E               	decf	efgtoa@w& (0+255),f,b
  4356  0013E8  A0D8               	btfss	status,0,c
  4357  0013EA  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4358  0013EC                     l4060:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4362  0013EC  5190               	movf	efgtoa@e& (0+255),w,b
  4363  0013EE  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4364  0013F0  A4D8               	btfss	status,2,c
  4365  0013F2  EFFD  F009         	goto	u5021
  4366  0013F6  EFFF  F009         	goto	u5020
  4367  0013FA                     u5021:
  4368  0013FA  EFCB  F009         	goto	l4050
  4369  0013FE                     u5020:
  4370  0013FE                     
  4371                           ; BSR set to: 0
  4372  0013FE  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4373  001400  EF0C  F00A         	goto	u5030
  4374  001404  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4375  001406  E106               	bnz	u5031
  4376  001408  057C               	decf	efgtoa@p& (0+255),w,b
  4377  00140A  B0D8               	btfsc	status,0,c
  4378  00140C  EF0A  F00A         	goto	u5031
  4379  001410  EF0C  F00A         	goto	u5030
  4380  001414                     u5031:
  4381  001414  EFCB  F009         	goto	l4050
  4382  001418                     u5030:
  4383  001418                     
  4384                           ; BSR set to: 0
  4385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 514:         --i;
  4386  001418  078A               	decf	efgtoa@i& (0+255),f,b
  4387  00141A  A0D8               	btfss	status,0,c
  4388  00141C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4389  00141E                     
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4392  00141E  517A               	movf	efgtoa@sign& (0+255),w,b
  4393  001420  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4394  001422  A4D8               	btfss	status,2,c
  4395  001424  EF16  F00A         	goto	u5041
  4396  001428  EF18  F00A         	goto	u5040
  4397  00142C                     u5041:
  4398  00142C  EF1E  F00A         	goto	l4070
  4399  001430                     u5040:
  4400  001430                     
  4401                           ; BSR set to: 0
  4402  001430  0E00               	movlw	0
  4403  001432  6F67               	movwf	(_efgtoa$677+1)& (0+255),b
  4404  001434  0E2B               	movlw	43
  4405  001436  6F66               	movwf	_efgtoa$677& (0+255),b
  4406  001438  EF22  F00A         	goto	l4072
  4407  00143C                     l4070:
  4408                           
  4409                           ; BSR set to: 0
  4410  00143C  0E00               	movlw	0
  4411  00143E  6F67               	movwf	(_efgtoa$677+1)& (0+255),b
  4412  001440  0E2D               	movlw	45
  4413  001442  6F66               	movwf	_efgtoa$677& (0+255),b
  4414  001444                     l4072:
  4415                           
  4416                           ; BSR set to: 0
  4417  001444  0E00               	movlw	low _dbuf
  4418  001446  258A               	addwf	efgtoa@i& (0+255),w,b
  4419  001448  6ED9               	movwf	fsr2l,c
  4420  00144A  0E01               	movlw	high _dbuf
  4421  00144C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4422  00144E  6EDA               	movwf	fsr2h,c
  4423  001450  C066  FFDF         	movff	_efgtoa$677,indf2
  4424  001454                     
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 516:         --w;
  4427  001454  077E               	decf	efgtoa@w& (0+255),f,b
  4428  001456  A0D8               	btfss	status,0,c
  4429  001458  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4430  00145A                     
  4431                           ; BSR set to: 0
  4432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4433  00145A  078A               	decf	efgtoa@i& (0+255),f,b
  4434  00145C  A0D8               	btfss	status,0,c
  4435  00145E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4436  001460                     
  4437                           ; BSR set to: 0
  4438  001460  0EBF               	movlw	191
  4439  001462  6E35               	movwf	??_efgtoa^0,c
  4440  001464  0EFF               	movlw	255
  4441  001466  6E36               	movwf	(??_efgtoa+1)^0,c
  4442  001468  5034               	movf	efgtoa@c^0,w,c
  4443  00146A  6E37               	movwf	(??_efgtoa+2)^0,c
  4444  00146C  6A38               	clrf	(??_efgtoa+3)^0,c
  4445  00146E  5035               	movf	??_efgtoa^0,w,c
  4446  001470  2637               	addwf	(??_efgtoa+2)^0,f,c
  4447  001472  5036               	movf	(??_efgtoa+1)^0,w,c
  4448  001474  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4449  001476  5038               	movf	(??_efgtoa+3)^0,w,c
  4450  001478  E10A               	bnz	u5050
  4451  00147A  0E1A               	movlw	26
  4452  00147C  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4453  00147E  A0D8               	btfss	status,0,c
  4454  001480  EF44  F00A         	goto	u5051
  4455  001484  EF47  F00A         	goto	u5050
  4456  001488                     u5051:
  4457  001488  0E01               	movlw	1
  4458  00148A  EF48  F00A         	goto	u5060
  4459  00148E                     u5050:
  4460  00148E  0E00               	movlw	0
  4461  001490                     u5060:
  4462  001490  6F6A               	movwf	_efgtoa$679& (0+255),b
  4463  001492  6B6B               	clrf	(_efgtoa$679+1)& (0+255),b
  4464  001494                     
  4465                           ; BSR set to: 0
  4466  001494  516A               	movf	_efgtoa$679& (0+255),w,b
  4467  001496  116B               	iorwf	(_efgtoa$679+1)& (0+255),w,b
  4468  001498  A4D8               	btfss	status,2,c
  4469  00149A  EF51  F00A         	goto	u5071
  4470  00149E  EF53  F00A         	goto	u5070
  4471  0014A2                     u5071:
  4472  0014A2  EF59  F00A         	goto	l4086
  4473  0014A6                     u5070:
  4474  0014A6                     
  4475                           ; BSR set to: 0
  4476  0014A6  0E00               	movlw	0
  4477  0014A8  6F69               	movwf	(_efgtoa$678+1)& (0+255),b
  4478  0014AA  0E65               	movlw	101
  4479  0014AC  6F68               	movwf	_efgtoa$678& (0+255),b
  4480  0014AE  EF5D  F00A         	goto	l4088
  4481  0014B2                     l4086:
  4482                           
  4483                           ; BSR set to: 0
  4484  0014B2  0E00               	movlw	0
  4485  0014B4  6F69               	movwf	(_efgtoa$678+1)& (0+255),b
  4486  0014B6  0E45               	movlw	69
  4487  0014B8  6F68               	movwf	_efgtoa$678& (0+255),b
  4488  0014BA                     l4088:
  4489                           
  4490                           ; BSR set to: 0
  4491  0014BA  0E00               	movlw	low _dbuf
  4492  0014BC  258A               	addwf	efgtoa@i& (0+255),w,b
  4493  0014BE  6ED9               	movwf	fsr2l,c
  4494  0014C0  0E01               	movlw	high _dbuf
  4495  0014C2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4496  0014C4  6EDA               	movwf	fsr2h,c
  4497  0014C6  C068  FFDF         	movff	_efgtoa$678,indf2
  4498  0014CA                     
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 519:         --w;
  4501  0014CA  077E               	decf	efgtoa@w& (0+255),f,b
  4502  0014CC  A0D8               	btfss	status,0,c
  4503  0014CE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4504  0014D0                     
  4505                           ; BSR set to: 0
  4506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4507  0014D0  0E00               	movlw	low _dbuf
  4508  0014D2  2592               	addwf	efgtoa@n& (0+255),w,b
  4509  0014D4  6E01               	movwf	strcpy@dest^0,c
  4510  0014D6  0E01               	movlw	high _dbuf
  4511  0014D8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4512  0014DA  6E02               	movwf	(strcpy@dest+1)^0,c
  4513  0014DC  0E00               	movlw	low _dbuf
  4514  0014DE  258A               	addwf	efgtoa@i& (0+255),w,b
  4515  0014E0  6E03               	movwf	strcpy@src^0,c
  4516  0014E2  0E01               	movlw	high _dbuf
  4517  0014E4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4518  0014E6  6E04               	movwf	(strcpy@src+1)^0,c
  4519  0014E8  ECF0  F01E         	call	_strcpy	;wreg free
  4520  0014EC  EF00  F005         	goto	l3834
  4521  0014F0                     l850:
  4522  0014F0  0012               	return		;funcret
  4523  0014F2                     __end_of_efgtoa:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _tolower *****************
  4527 ;; Defined at:
  4528 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\tolower.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  c               2    6[COMRAM] int 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  2    6[COMRAM] int 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4542 ;;      Params:         2       0       0       0       0       0       0       0       0
  4543 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4544 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4545 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4546 ;;Total ram usage:        8 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    1
  4549 ;; This function calls:
  4550 ;;		_isupper
  4551 ;; This function is called by:
  4552 ;;		_efgtoa
  4553 ;;		_vfpfcnvrt
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text6
  4558  003D80                     __ptext6:
  4559                           	callstack 0
  4560  003D80                     _tolower:
  4561                           	callstack 26
  4562  003D80  0EBF               	movlw	191
  4563  003D82  6E09               	movwf	??_tolower^0,c
  4564  003D84  0EFF               	movlw	255
  4565  003D86  6E0A               	movwf	(??_tolower+1)^0,c
  4566  003D88  C007  F00B         	movff	tolower@c,??_tolower+2
  4567  003D8C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4568  003D90  5009               	movf	??_tolower^0,w,c
  4569  003D92  260B               	addwf	(??_tolower+2)^0,f,c
  4570  003D94  500A               	movf	(??_tolower+1)^0,w,c
  4571  003D96  220C               	addwfc	(??_tolower+3)^0,f,c
  4572  003D98  500C               	movf	(??_tolower+3)^0,w,c
  4573  003D9A  E10A               	bnz	u4220
  4574  003D9C  0E1A               	movlw	26
  4575  003D9E  5C0B               	subwf	(??_tolower+2)^0,w,c
  4576  003DA0  A0D8               	btfss	status,0,c
  4577  003DA2  EFD5  F01E         	goto	u4221
  4578  003DA6  EFD8  F01E         	goto	u4220
  4579  003DAA                     u4221:
  4580  003DAA  0E01               	movlw	1
  4581  003DAC  EFD9  F01E         	goto	u4230
  4582  003DB0                     u4220:
  4583  003DB0  0E00               	movlw	0
  4584  003DB2                     u4230:
  4585  003DB2  6E0D               	movwf	_tolower$830^0,c
  4586  003DB4  6A0E               	clrf	(_tolower$830+1)^0,c
  4587  003DB6  500D               	movf	_tolower$830^0,w,c
  4588  003DB8  100E               	iorwf	(_tolower$830+1)^0,w,c
  4589  003DBA  B4D8               	btfsc	status,2,c
  4590  003DBC  EFE2  F01E         	goto	u4241
  4591  003DC0  EFE4  F01E         	goto	u4240
  4592  003DC4                     u4241:
  4593  003DC4  EFEB  F01E         	goto	l1112
  4594  003DC8                     u4240:
  4595  003DC8  0E20               	movlw	32
  4596  003DCA  1007               	iorwf	tolower@c^0,w,c
  4597  003DCC  6E07               	movwf	?_tolower^0,c
  4598  003DCE  5008               	movf	(tolower@c+1)^0,w,c
  4599  003DD0  6E08               	movwf	(?_tolower+1)^0,c
  4600  003DD2  EFEF  F01E         	goto	l1117
  4601  003DD6                     l1112:
  4602  003DD6  C007  F007         	movff	tolower@c,?_tolower
  4603  003DDA  C008  F008         	movff	tolower@c+1,?_tolower+1
  4604  003DDE                     l1117:
  4605  003DDE  0012               	return		;funcret
  4606  003DE0                     __end_of_tolower:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _isupper *****************
  4610 ;; Defined at:
  4611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  c               2    0[COMRAM] int 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  2    0[COMRAM] int 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4625 ;;      Params:         2       0       0       0       0       0       0       0       0
  4626 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4627 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4628 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4629 ;;Total ram usage:        6 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_efgtoa
  4635 ;;		_vfpfcnvrt
  4636 ;;		_tolower
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text7
  4641  004046                     __ptext7:
  4642                           	callstack 0
  4643  004046                     _isupper:
  4644                           	callstack 26
  4645  004046  0EBF               	movlw	191
  4646  004048  6E03               	movwf	??_isupper^0,c
  4647  00404A  0EFF               	movlw	255
  4648  00404C  6E04               	movwf	(??_isupper+1)^0,c
  4649  00404E  C001  F005         	movff	isupper@c,??_isupper+2
  4650  004052  C002  F006         	movff	isupper@c+1,??_isupper+3
  4651  004056  5003               	movf	??_isupper^0,w,c
  4652  004058  2605               	addwf	(??_isupper+2)^0,f,c
  4653  00405A  5004               	movf	(??_isupper+1)^0,w,c
  4654  00405C  2206               	addwfc	(??_isupper+3)^0,f,c
  4655  00405E  5006               	movf	(??_isupper+3)^0,w,c
  4656  004060  E10A               	bnz	u3230
  4657  004062  0E1A               	movlw	26
  4658  004064  5C05               	subwf	(??_isupper+2)^0,w,c
  4659  004066  A0D8               	btfss	status,0,c
  4660  004068  EF38  F020         	goto	u3231
  4661  00406C  EF3B  F020         	goto	u3230
  4662  004070                     u3231:
  4663  004070  0E01               	movlw	1
  4664  004072  EF3C  F020         	goto	u3240
  4665  004076                     u3230:
  4666  004076  0E00               	movlw	0
  4667  004078                     u3240:
  4668  004078  6E01               	movwf	?_isupper^0,c
  4669  00407A  6A02               	clrf	(?_isupper+1)^0,c
  4670  00407C  0012               	return		;funcret
  4671  00407E                     __end_of_isupper:
  4672                           	callstack 0
  4673                           
  4674 ;; *************** function _strcpy *****************
  4675 ;; Defined at:
  4676 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4679 ;;		 -> dbuf(80), 
  4680 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4681 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4682 ;;		 -> dbuf(80), 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  d               2    8[COMRAM] PTR unsigned char 
  4685 ;;		 -> dbuf(80), 
  4686 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4687 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4688 ;;		 -> dbuf(80), 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  2    0[COMRAM] PTR unsigned char 
  4691 ;; Registers used:
  4692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4698 ;;      Params:         4       0       0       0       0       0       0       0       0
  4699 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4700 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4701 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4702 ;;Total ram usage:       10 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_efgtoa
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text8
  4712  003DE0                     __ptext8:
  4713                           	callstack 0
  4714  003DE0                     _strcpy:
  4715                           	callstack 26
  4716  003DE0  C003  F007         	movff	strcpy@src,strcpy@s
  4717  003DE4  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4718  003DE8  C001  F009         	movff	strcpy@dest,strcpy@d
  4719  003DEC  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4720  003DF0                     l3672:
  4721  003DF0  5007               	movf	strcpy@s^0,w,c
  4722  003DF2  6E05               	movwf	??_strcpy^0,c
  4723  003DF4  5008               	movf	(strcpy@s+1)^0,w,c
  4724  003DF6  6E06               	movwf	(??_strcpy+1)^0,c
  4725  003DF8  4A07               	infsnz	strcpy@s^0,f,c
  4726  003DFA  2A08               	incf	(strcpy@s+1)^0,f,c
  4727  003DFC  C005  FFF6         	movff	??_strcpy,tblptrl
  4728  003E00  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4729  003E04  6AF8               	clrf	tblptru,c
  4730  003E06  C009  FFD9         	movff	strcpy@d,fsr2l
  4731  003E0A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4732  003E0E  4A09               	infsnz	strcpy@d^0,f,c
  4733  003E10  2A0A               	incf	(strcpy@d+1)^0,f,c
  4734  003E12  0E07               	movlw	(high __ramtop+-1)
  4735  003E14  64F7               	cpfsgt	tblptrh,c
  4736  003E16  D003               	bra	u4207
  4737  003E18  0008               	tblrd		*
  4738  003E1A  50F5               	movf	tablat,w,c
  4739  003E1C  D005               	bra	u4200
  4740  003E1E                     u4207:
  4741  003E1E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4742  003E22  CFF7 FFE2          	movff	tblptrh,fsr1h
  4743  003E26  50E7               	movf	indf1,w,c
  4744  003E28                     u4200:
  4745  003E28  6EDF               	movwf	indf2,c
  4746  003E2A  50DF               	movf	indf2,w,c
  4747  003E2C  A4D8               	btfss	status,2,c
  4748  003E2E  EF1B  F01F         	goto	u4211
  4749  003E32  EF1D  F01F         	goto	u4210
  4750  003E36                     u4211:
  4751  003E36  EFF8  F01E         	goto	l3672
  4752  003E3A                     u4210:
  4753  003E3A  0012               	return		;funcret
  4754  003E3C                     __end_of_strcpy:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _floorf *****************
  4758 ;; Defined at:
  4759 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\floorf.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  x               4   25[COMRAM] float 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  u               4   41[COMRAM] struct .
  4764 ;;  m               4   35[COMRAM] unsigned long 
  4765 ;;  e               2   39[COMRAM] int 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  4   25[COMRAM] float 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4775 ;;      Params:         4       0       0       0       0       0       0       0       0
  4776 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4777 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4778 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4779 ;;Total ram usage:       20 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_efgtoa
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text9
  4789  002DB0                     __ptext9:
  4790                           	callstack 0
  4791  002DB0                     _floorf:
  4792                           	callstack 26
  4793  002DB0  C0B8  F02A         	movff	floorf@F527,floorf@u
  4794  002DB4  C0B9  F02B         	movff	floorf@F527+1,floorf@u+1
  4795  002DB8  C0BA  F02C         	movff	floorf@F527+2,floorf@u+2
  4796  002DBC  C0BB  F02D         	movff	floorf@F527+3,floorf@u+3
  4797  002DC0  C01A  F02A         	movff	floorf@x,floorf@u
  4798  002DC4  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4799  002DC8  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4800  002DCC  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4801  002DD0  0E81               	movlw	129
  4802  002DD2  6E1E               	movwf	??_floorf^0,c
  4803  002DD4  0EFF               	movlw	255
  4804  002DD6  6E1F               	movwf	(??_floorf+1)^0,c
  4805  002DD8  C02A  F020         	movff	floorf@u,??_floorf+2
  4806  002DDC  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4807  002DE0  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4808  002DE4  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4809  002DE8  0E18               	movlw	24
  4810  002DEA  EFFC  F016         	goto	u4250
  4811  002DEE                     u4255:
  4812  002DEE  90D8               	bcf	status,0,c
  4813  002DF0  3223               	rrcf	(??_floorf+5)^0,f,c
  4814  002DF2  3222               	rrcf	(??_floorf+4)^0,f,c
  4815  002DF4  3221               	rrcf	(??_floorf+3)^0,f,c
  4816  002DF6  3220               	rrcf	(??_floorf+2)^0,f,c
  4817  002DF8                     u4250:
  4818  002DF8  2EE8               	decfsz	wreg,f,c
  4819  002DFA  EFF7  F016         	goto	u4255
  4820  002DFE  5020               	movf	(??_floorf+2)^0,w,c
  4821  002E00  241E               	addwf	??_floorf^0,w,c
  4822  002E02  6E28               	movwf	floorf@e^0,c
  4823  002E04  0E00               	movlw	0
  4824  002E06  201F               	addwfc	(??_floorf+1)^0,w,c
  4825  002E08  6E29               	movwf	(floorf@e+1)^0,c
  4826  002E0A  BE29               	btfsc	(floorf@e+1)^0,7,c
  4827  002E0C  EF11  F017         	goto	u4261
  4828  002E10  5029               	movf	(floorf@e+1)^0,w,c
  4829  002E12  E109               	bnz	u4260
  4830  002E14  0E17               	movlw	23
  4831  002E16  5C28               	subwf	floorf@e^0,w,c
  4832  002E18  A0D8               	btfss	status,0,c
  4833  002E1A  EF11  F017         	goto	u4261
  4834  002E1E  EF13  F017         	goto	u4260
  4835  002E22                     u4261:
  4836  002E22  EF1D  F017         	goto	l3690
  4837  002E26                     u4260:
  4838  002E26                     l3688:
  4839  002E26  C01A  F01A         	movff	floorf@x,?_floorf
  4840  002E2A  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4841  002E2E  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4842  002E32  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4843  002E36  EFE0  F017         	goto	l1036
  4844  002E3A                     l3690:
  4845  002E3A  BE29               	btfsc	(floorf@e+1)^0,7,c
  4846  002E3C  EF22  F017         	goto	u4271
  4847  002E40  EF24  F017         	goto	u4270
  4848  002E44                     u4271:
  4849  002E44  EF94  F017         	goto	l3700
  4850  002E48                     u4270:
  4851  002E48  C028  F01E         	movff	floorf@e,??_floorf
  4852  002E4C  0EFF               	movlw	255
  4853  002E4E  6E1F               	movwf	(??_floorf+1)^0,c
  4854  002E50  0EFF               	movlw	255
  4855  002E52  6E20               	movwf	(??_floorf+2)^0,c
  4856  002E54  0E7F               	movlw	127
  4857  002E56  6E21               	movwf	(??_floorf+3)^0,c
  4858  002E58  0E00               	movlw	0
  4859  002E5A  6E22               	movwf	(??_floorf+4)^0,c
  4860  002E5C                     u4285:
  4861  002E5C  661E               	tstfsz	??_floorf^0,c
  4862  002E5E  EF33  F017         	goto	u4286
  4863  002E62  EF3B  F017         	goto	u4287
  4864  002E66                     u4286:
  4865  002E66  3422               	rlcf	(??_floorf+4)^0,w,c
  4866  002E68  3222               	rrcf	(??_floorf+4)^0,f,c
  4867  002E6A  3221               	rrcf	(??_floorf+3)^0,f,c
  4868  002E6C  3220               	rrcf	(??_floorf+2)^0,f,c
  4869  002E6E  321F               	rrcf	(??_floorf+1)^0,f,c
  4870  002E70  2E1E               	decfsz	??_floorf^0,f,c
  4871  002E72  EF2E  F017         	goto	u4285
  4872  002E76                     u4287:
  4873  002E76  C01F  F024         	movff	??_floorf+1,floorf@m
  4874  002E7A  C020  F025         	movff	??_floorf+2,floorf@m+1
  4875  002E7E  C021  F026         	movff	??_floorf+3,floorf@m+2
  4876  002E82  C022  F027         	movff	??_floorf+4,floorf@m+3
  4877  002E86  5024               	movf	floorf@m^0,w,c
  4878  002E88  142A               	andwf	floorf@u^0,w,c
  4879  002E8A  6E1E               	movwf	??_floorf^0,c
  4880  002E8C  5025               	movf	(floorf@m+1)^0,w,c
  4881  002E8E  142B               	andwf	(floorf@u+1)^0,w,c
  4882  002E90  6E1F               	movwf	(??_floorf+1)^0,c
  4883  002E92  5026               	movf	(floorf@m+2)^0,w,c
  4884  002E94  142C               	andwf	(floorf@u+2)^0,w,c
  4885  002E96  6E20               	movwf	(??_floorf+2)^0,c
  4886  002E98  5027               	movf	(floorf@m+3)^0,w,c
  4887  002E9A  142D               	andwf	(floorf@u+3)^0,w,c
  4888  002E9C  6E21               	movwf	(??_floorf+3)^0,c
  4889  002E9E  501E               	movf	??_floorf^0,w,c
  4890  002EA0  101F               	iorwf	(??_floorf+1)^0,w,c
  4891  002EA2  1020               	iorwf	(??_floorf+2)^0,w,c
  4892  002EA4  1021               	iorwf	(??_floorf+3)^0,w,c
  4893  002EA6  A4D8               	btfss	status,2,c
  4894  002EA8  EF58  F017         	goto	u4291
  4895  002EAC  EF5A  F017         	goto	u4290
  4896  002EB0                     u4291:
  4897  002EB0  EF5C  F017         	goto	l3696
  4898  002EB4                     u4290:
  4899  002EB4  EF13  F017         	goto	l3688
  4900  002EB8                     l3696:
  4901  002EB8  C02A  F01E         	movff	floorf@u,??_floorf
  4902  002EBC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4903  002EC0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4904  002EC4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4905  002EC8  0E20               	movlw	32
  4906  002ECA  EF6C  F017         	goto	u4300
  4907  002ECE                     u4305:
  4908  002ECE  90D8               	bcf	status,0,c
  4909  002ED0  3221               	rrcf	(??_floorf+3)^0,f,c
  4910  002ED2  3220               	rrcf	(??_floorf+2)^0,f,c
  4911  002ED4  321F               	rrcf	(??_floorf+1)^0,f,c
  4912  002ED6  321E               	rrcf	??_floorf^0,f,c
  4913  002ED8                     u4300:
  4914  002ED8  2EE8               	decfsz	wreg,f,c
  4915  002EDA  EF67  F017         	goto	u4305
  4916  002EDE  501E               	movf	??_floorf^0,w,c
  4917  002EE0  101F               	iorwf	(??_floorf+1)^0,w,c
  4918  002EE2  1020               	iorwf	(??_floorf+2)^0,w,c
  4919  002EE4  1021               	iorwf	(??_floorf+3)^0,w,c
  4920  002EE6  B4D8               	btfsc	status,2,c
  4921  002EE8  EF78  F017         	goto	u4311
  4922  002EEC  EF7A  F017         	goto	u4310
  4923  002EF0                     u4311:
  4924  002EF0  EF82  F017         	goto	l1039
  4925  002EF4                     u4310:
  4926  002EF4  5024               	movf	floorf@m^0,w,c
  4927  002EF6  262A               	addwf	floorf@u^0,f,c
  4928  002EF8  5025               	movf	(floorf@m+1)^0,w,c
  4929  002EFA  222B               	addwfc	(floorf@u+1)^0,f,c
  4930  002EFC  5026               	movf	(floorf@m+2)^0,w,c
  4931  002EFE  222C               	addwfc	(floorf@u+2)^0,f,c
  4932  002F00  5027               	movf	(floorf@m+3)^0,w,c
  4933  002F02  222D               	addwfc	(floorf@u+3)^0,f,c
  4934  002F04                     l1039:
  4935  002F04  1C24               	comf	floorf@m^0,w,c
  4936  002F06  6E1E               	movwf	??_floorf^0,c
  4937  002F08  1C25               	comf	(floorf@m+1)^0,w,c
  4938  002F0A  6E1F               	movwf	(??_floorf+1)^0,c
  4939  002F0C  1C26               	comf	(floorf@m+2)^0,w,c
  4940  002F0E  6E20               	movwf	(??_floorf+2)^0,c
  4941  002F10  1C27               	comf	(floorf@m+3)^0,w,c
  4942  002F12  6E21               	movwf	(??_floorf+3)^0,c
  4943  002F14  501E               	movf	??_floorf^0,w,c
  4944  002F16  162A               	andwf	floorf@u^0,f,c
  4945  002F18  501F               	movf	(??_floorf+1)^0,w,c
  4946  002F1A  162B               	andwf	(floorf@u+1)^0,f,c
  4947  002F1C  5020               	movf	(??_floorf+2)^0,w,c
  4948  002F1E  162C               	andwf	(floorf@u+2)^0,f,c
  4949  002F20  5021               	movf	(??_floorf+3)^0,w,c
  4950  002F22  162D               	andwf	(floorf@u+3)^0,f,c
  4951  002F24  EFD8  F017         	goto	l3708
  4952  002F28                     l3700:
  4953  002F28  C02A  F01E         	movff	floorf@u,??_floorf
  4954  002F2C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4955  002F30  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4956  002F34  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4957  002F38  0E20               	movlw	32
  4958  002F3A  EFA4  F017         	goto	u4320
  4959  002F3E                     u4325:
  4960  002F3E  90D8               	bcf	status,0,c
  4961  002F40  3221               	rrcf	(??_floorf+3)^0,f,c
  4962  002F42  3220               	rrcf	(??_floorf+2)^0,f,c
  4963  002F44  321F               	rrcf	(??_floorf+1)^0,f,c
  4964  002F46  321E               	rrcf	??_floorf^0,f,c
  4965  002F48                     u4320:
  4966  002F48  2EE8               	decfsz	wreg,f,c
  4967  002F4A  EF9F  F017         	goto	u4325
  4968  002F4E  501E               	movf	??_floorf^0,w,c
  4969  002F50  101F               	iorwf	(??_floorf+1)^0,w,c
  4970  002F52  1020               	iorwf	(??_floorf+2)^0,w,c
  4971  002F54  1021               	iorwf	(??_floorf+3)^0,w,c
  4972  002F56  A4D8               	btfss	status,2,c
  4973  002F58  EFB0  F017         	goto	u4331
  4974  002F5C  EFB2  F017         	goto	u4330
  4975  002F60                     u4331:
  4976  002F60  EFBC  F017         	goto	l3704
  4977  002F64                     u4330:
  4978  002F64  0E00               	movlw	0
  4979  002F66  6E2A               	movwf	floorf@u^0,c
  4980  002F68  0E00               	movlw	0
  4981  002F6A  6E2B               	movwf	(floorf@u+1)^0,c
  4982  002F6C  0E00               	movlw	0
  4983  002F6E  6E2C               	movwf	(floorf@u+2)^0,c
  4984  002F70  0E00               	movlw	0
  4985  002F72  6E2D               	movwf	(floorf@u+3)^0,c
  4986  002F74  EFD8  F017         	goto	l3708
  4987  002F78                     l3704:
  4988  002F78  90D8               	bcf	status,0,c
  4989  002F7A  342A               	rlcf	floorf@u^0,w,c
  4990  002F7C  6E1E               	movwf	??_floorf^0,c
  4991  002F7E  342B               	rlcf	(floorf@u+1)^0,w,c
  4992  002F80  6E1F               	movwf	(??_floorf+1)^0,c
  4993  002F82  342C               	rlcf	(floorf@u+2)^0,w,c
  4994  002F84  6E20               	movwf	(??_floorf+2)^0,c
  4995  002F86  342D               	rlcf	(floorf@u+3)^0,w,c
  4996  002F88  6E21               	movwf	(??_floorf+3)^0,c
  4997  002F8A  501E               	movf	??_floorf^0,w,c
  4998  002F8C  101F               	iorwf	(??_floorf+1)^0,w,c
  4999  002F8E  1020               	iorwf	(??_floorf+2)^0,w,c
  5000  002F90  1021               	iorwf	(??_floorf+3)^0,w,c
  5001  002F92  B4D8               	btfsc	status,2,c
  5002  002F94  EFCE  F017         	goto	u4341
  5003  002F98  EFD0  F017         	goto	u4340
  5004  002F9C                     u4341:
  5005  002F9C  EFD8  F017         	goto	l3708
  5006  002FA0                     u4340:
  5007  002FA0  0E00               	movlw	0
  5008  002FA2  6E2A               	movwf	floorf@u^0,c
  5009  002FA4  0E00               	movlw	0
  5010  002FA6  6E2B               	movwf	(floorf@u+1)^0,c
  5011  002FA8  0E80               	movlw	128
  5012  002FAA  6E2C               	movwf	(floorf@u+2)^0,c
  5013  002FAC  0EBF               	movlw	191
  5014  002FAE  6E2D               	movwf	(floorf@u+3)^0,c
  5015  002FB0                     l3708:
  5016  002FB0  C02A  F01A         	movff	floorf@u,?_floorf
  5017  002FB4  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5018  002FB8  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5019  002FBC  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5020  002FC0                     l1036:
  5021  002FC0  0012               	return		;funcret
  5022  002FC2                     __end_of_floorf:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function ___fpclassifyf *****************
  5026 ;; Defined at:
  5027 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__fpclassifyf.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  x               4    0[COMRAM] float 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  u               4   10[COMRAM] struct .
  5032 ;;  e               2    8[COMRAM] int 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  2    0[COMRAM] int 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5042 ;;      Params:         4       0       0       0       0       0       0       0       0
  5043 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5044 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5045 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5046 ;;Total ram usage:       14 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_efgtoa
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text10
  5056  003648                     __ptext10:
  5057                           	callstack 0
  5058  003648                     ___fpclassifyf:
  5059                           	callstack 26
  5060  003648  C0BC  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5061  00364C  C0BD  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5062  003650  C0BE  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5063  003654  C0BF  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5064  003658  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5065  00365C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5066  003660  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5067  003664  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5068  003668  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5069  00366C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5070  003670  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5071  003674  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5072  003678  0E18               	movlw	24
  5073  00367A  EF44  F01B         	goto	u4130
  5074  00367E                     u4135:
  5075  00367E  90D8               	bcf	status,0,c
  5076  003680  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5077  003682  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5078  003684  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5079  003686  3205               	rrcf	??___fpclassifyf^0,f,c
  5080  003688                     u4130:
  5081  003688  2EE8               	decfsz	wreg,f,c
  5082  00368A  EF3F  F01B         	goto	u4135
  5083  00368E  5005               	movf	??___fpclassifyf^0,w,c
  5084  003690  6E09               	movwf	___fpclassifyf@e^0,c
  5085  003692  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5086  003694  5009               	movf	___fpclassifyf@e^0,w,c
  5087  003696  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5088  003698  A4D8               	btfss	status,2,c
  5089  00369A  EF51  F01B         	goto	u4141
  5090  00369E  EF53  F01B         	goto	u4140
  5091  0036A2                     u4141:
  5092  0036A2  EF73  F01B         	goto	l3660
  5093  0036A6                     u4140:
  5094  0036A6  90D8               	bcf	status,0,c
  5095  0036A8  340B               	rlcf	___fpclassifyf@u^0,w,c
  5096  0036AA  6E05               	movwf	??___fpclassifyf^0,c
  5097  0036AC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5098  0036AE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5099  0036B0  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5100  0036B2  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5101  0036B4  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5102  0036B6  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5103  0036B8  5005               	movf	??___fpclassifyf^0,w,c
  5104  0036BA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5105  0036BC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5106  0036BE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5107  0036C0  A4D8               	btfss	status,2,c
  5108  0036C2  EF65  F01B         	goto	u4151
  5109  0036C6  EF67  F01B         	goto	u4150
  5110  0036CA                     u4151:
  5111  0036CA  EF6D  F01B         	goto	l3656
  5112  0036CE                     u4150:
  5113  0036CE  0E00               	movlw	0
  5114  0036D0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5115  0036D2  0E02               	movlw	2
  5116  0036D4  6E01               	movwf	?___fpclassifyf^0,c
  5117  0036D6  EFA2  F01B         	goto	l991
  5118  0036DA                     l3656:
  5119  0036DA  0E00               	movlw	0
  5120  0036DC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5121  0036DE  0E03               	movlw	3
  5122  0036E0  6E01               	movwf	?___fpclassifyf^0,c
  5123  0036E2  EFA2  F01B         	goto	l991
  5124  0036E6                     l3660:
  5125  0036E6  2809               	incf	___fpclassifyf@e^0,w,c
  5126  0036E8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5127  0036EA  A4D8               	btfss	status,2,c
  5128  0036EC  EF7A  F01B         	goto	u4161
  5129  0036F0  EF7C  F01B         	goto	u4160
  5130  0036F4                     u4161:
  5131  0036F4  EF9E  F01B         	goto	l3666
  5132  0036F8                     u4160:
  5133  0036F8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5134  0036FC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5135  003700  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5136  003704  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5137  003708  0E09               	movlw	9
  5138  00370A                     u4175:
  5139  00370A  90D8               	bcf	status,0,c
  5140  00370C  3605               	rlcf	??___fpclassifyf^0,f,c
  5141  00370E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5142  003710  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5143  003712  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5144  003714  2EE8               	decfsz	wreg,f,c
  5145  003716  EF85  F01B         	goto	u4175
  5146  00371A  5005               	movf	??___fpclassifyf^0,w,c
  5147  00371C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5148  00371E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5149  003720  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5150  003722  B4D8               	btfsc	status,2,c
  5151  003724  EF96  F01B         	goto	u4181
  5152  003728  EF99  F01B         	goto	u4180
  5153  00372C                     u4181:
  5154  00372C  0E01               	movlw	1
  5155  00372E  EF9A  F01B         	goto	u4190
  5156  003732                     u4180:
  5157  003732  0E00               	movlw	0
  5158  003734                     u4190:
  5159  003734  6E01               	movwf	?___fpclassifyf^0,c
  5160  003736  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5161  003738  EFA2  F01B         	goto	l991
  5162  00373C                     l3666:
  5163  00373C  0E00               	movlw	0
  5164  00373E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5165  003740  0E04               	movlw	4
  5166  003742  6E01               	movwf	?___fpclassifyf^0,c
  5167  003744                     l991:
  5168  003744  0012               	return		;funcret
  5169  003746                     __end_of___fpclassifyf:
  5170                           	callstack 0
  5171                           
  5172 ;; *************** function ___fltol *****************
  5173 ;; Defined at:
  5174 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  f1              4    0[COMRAM] int 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  exp1            1    9[COMRAM] unsigned char 
  5179 ;;  sign1           1    8[COMRAM] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  4    0[COMRAM] long 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5189 ;;      Params:         4       0       0       0       0       0       0       0       0
  5190 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5191 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5192 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5193 ;;Total ram usage:       10 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; This function calls:
  5196 ;;		Nothing
  5197 ;; This function is called by:
  5198 ;;		_efgtoa
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text11
  5203  00343E                     __ptext11:
  5204                           	callstack 0
  5205  00343E                     ___fltol:
  5206                           	callstack 26
  5207  00343E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5208  003440  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5209  003442  6E0A               	movwf	___fltol@exp1^0,c
  5210  003444  500A               	movf	___fltol@exp1^0,w,c
  5211  003446  A4D8               	btfss	status,2,c
  5212  003448  EF28  F01A         	goto	u4011
  5213  00344C  EF2A  F01A         	goto	u4010
  5214  003450                     u4011:
  5215  003450  EF34  F01A         	goto	l3584
  5216  003454                     u4010:
  5217  003454                     l3580:
  5218  003454  0E00               	movlw	0
  5219  003456  6E01               	movwf	?___fltol^0,c
  5220  003458  0E00               	movlw	0
  5221  00345A  6E02               	movwf	(?___fltol+1)^0,c
  5222  00345C  0E00               	movlw	0
  5223  00345E  6E03               	movwf	(?___fltol+2)^0,c
  5224  003460  0E00               	movlw	0
  5225  003462  6E04               	movwf	(?___fltol+3)^0,c
  5226  003464  EFA1  F01A         	goto	l377
  5227  003468                     l3584:
  5228  003468  C001  F005         	movff	___fltol@f1,??___fltol
  5229  00346C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5230  003470  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5231  003474  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5232  003478  0E20               	movlw	32
  5233  00347A  EF44  F01A         	goto	u4020
  5234  00347E                     u4025:
  5235  00347E  90D8               	bcf	status,0,c
  5236  003480  3208               	rrcf	(??___fltol+3)^0,f,c
  5237  003482  3207               	rrcf	(??___fltol+2)^0,f,c
  5238  003484  3206               	rrcf	(??___fltol+1)^0,f,c
  5239  003486  3205               	rrcf	??___fltol^0,f,c
  5240  003488                     u4020:
  5241  003488  2EE8               	decfsz	wreg,f,c
  5242  00348A  EF3F  F01A         	goto	u4025
  5243  00348E  5005               	movf	??___fltol^0,w,c
  5244  003490  6E09               	movwf	___fltol@sign1^0,c
  5245  003492  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5246  003494  0EFF               	movlw	255
  5247  003496  1601               	andwf	___fltol@f1^0,f,c
  5248  003498  0EFF               	movlw	255
  5249  00349A  1602               	andwf	(___fltol@f1+1)^0,f,c
  5250  00349C  0EFF               	movlw	255
  5251  00349E  1603               	andwf	(___fltol@f1+2)^0,f,c
  5252  0034A0  0E00               	movlw	0
  5253  0034A2  1604               	andwf	(___fltol@f1+3)^0,f,c
  5254  0034A4  0E96               	movlw	150
  5255  0034A6  5E0A               	subwf	___fltol@exp1^0,f,c
  5256  0034A8  BE0A               	btfsc	___fltol@exp1^0,7,c
  5257  0034AA  EF5B  F01A         	goto	u4030
  5258  0034AE  EF59  F01A         	goto	u4031
  5259  0034B2                     u4031:
  5260  0034B2  EF71  F01A         	goto	l3604
  5261  0034B6                     u4030:
  5262  0034B6  500A               	movf	___fltol@exp1^0,w,c
  5263  0034B8  0A80               	xorlw	128
  5264  0034BA  0F97               	addlw	151
  5265  0034BC  B0D8               	btfsc	status,0,c
  5266  0034BE  EF63  F01A         	goto	u4041
  5267  0034C2  EF65  F01A         	goto	u4040
  5268  0034C6                     u4041:
  5269  0034C6  EF67  F01A         	goto	l3600
  5270  0034CA                     u4040:
  5271  0034CA  EF2A  F01A         	goto	l3580
  5272  0034CE                     l3600:
  5273  0034CE  90D8               	bcf	status,0,c
  5274  0034D0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5275  0034D2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5276  0034D4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5277  0034D6  3201               	rrcf	___fltol@f1^0,f,c
  5278  0034D8  3E0A               	incfsz	___fltol@exp1^0,f,c
  5279  0034DA  EF67  F01A         	goto	l3600
  5280  0034DE  EF89  F01A         	goto	l3614
  5281  0034E2                     l3604:
  5282  0034E2  0E1F               	movlw	31
  5283  0034E4  640A               	cpfsgt	___fltol@exp1^0,c
  5284  0034E6  EF77  F01A         	goto	u4051
  5285  0034EA  EF79  F01A         	goto	u4050
  5286  0034EE                     u4051:
  5287  0034EE  EF81  F01A         	goto	l3612
  5288  0034F2                     u4050:
  5289  0034F2  EF2A  F01A         	goto	l3580
  5290  0034F6                     l3610:
  5291  0034F6  90D8               	bcf	status,0,c
  5292  0034F8  3601               	rlcf	___fltol@f1^0,f,c
  5293  0034FA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5294  0034FC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5295  0034FE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5296  003500  060A               	decf	___fltol@exp1^0,f,c
  5297  003502                     l3612:
  5298  003502  500A               	movf	___fltol@exp1^0,w,c
  5299  003504  A4D8               	btfss	status,2,c
  5300  003506  EF87  F01A         	goto	u4061
  5301  00350A  EF89  F01A         	goto	u4060
  5302  00350E                     u4061:
  5303  00350E  EF7B  F01A         	goto	l3610
  5304  003512                     u4060:
  5305  003512                     l3614:
  5306  003512  5009               	movf	___fltol@sign1^0,w,c
  5307  003514  B4D8               	btfsc	status,2,c
  5308  003516  EF8F  F01A         	goto	u4071
  5309  00351A  EF91  F01A         	goto	u4070
  5310  00351E                     u4071:
  5311  00351E  EF99  F01A         	goto	l3618
  5312  003522                     u4070:
  5313  003522  1E04               	comf	(___fltol@f1+3)^0,f,c
  5314  003524  1E03               	comf	(___fltol@f1+2)^0,f,c
  5315  003526  1E02               	comf	(___fltol@f1+1)^0,f,c
  5316  003528  6C01               	negf	___fltol@f1^0,c
  5317  00352A  0E00               	movlw	0
  5318  00352C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5319  00352E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5320  003530  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5321  003532                     l3618:
  5322  003532  C001  F001         	movff	___fltol@f1,?___fltol
  5323  003536  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5324  00353A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5325  00353E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5326  003542                     l377:
  5327  003542  0012               	return		;funcret
  5328  003544                     __end_of___fltol:
  5329                           	callstack 0
  5330                           
  5331 ;; *************** function ___flsub *****************
  5332 ;; Defined at:
  5333 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  b               4   25[COMRAM] long 
  5336 ;;  a               4   29[COMRAM] long 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  4   25[COMRAM] long 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5348 ;;      Params:         8       0       0       0       0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5351 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5352 ;;Total ram usage:        8 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    1
  5355 ;; This function calls:
  5356 ;;		___fladd
  5357 ;; This function is called by:
  5358 ;;		_efgtoa
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text12
  5363  003F3A                     __ptext12:
  5364                           	callstack 0
  5365  003F3A                     ___flsub:
  5366                           	callstack 25
  5367  003F3A  0E00               	movlw	0
  5368  003F3C  1A1E               	xorwf	___flsub@a^0,f,c
  5369  003F3E  0E00               	movlw	0
  5370  003F40  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5371  003F42  0E00               	movlw	0
  5372  003F44  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5373  003F46  0E80               	movlw	128
  5374  003F48  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5375  003F4A  C01A  F001         	movff	___flsub@b,___fladd@b
  5376  003F4E  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5377  003F52  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5378  003F56  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5379  003F5A  C01E  F005         	movff	___flsub@a,___fladd@a
  5380  003F5E  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5381  003F62  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5382  003F66  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5383  003F6A  ECEE  F00D         	call	___fladd	;wreg free
  5384  003F6E  C001  F01A         	movff	?___fladd,?___flsub
  5385  003F72  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5386  003F76  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5387  003F7A  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5388  003F7E  0012               	return		;funcret
  5389  003F80                     __end_of___flsub:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function ___fladd *****************
  5393 ;; Defined at:
  5394 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  b               4    0[COMRAM] long 
  5397 ;;  a               4    4[COMRAM] long 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  grs             1   15[COMRAM] unsigned char 
  5400 ;;  bexp            1   14[COMRAM] unsigned char 
  5401 ;;  aexp            1   13[COMRAM] unsigned char 
  5402 ;;  signs           1   12[COMRAM] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  4    0[COMRAM] unsigned char 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5412 ;;      Params:         8       0       0       0       0       0       0       0       0
  5413 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5414 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5415 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5416 ;;Total ram usage:       16 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		___flsub
  5422 ;;		_efgtoa
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text13
  5427  001BDC                     __ptext13:
  5428                           	callstack 0
  5429  001BDC                     ___fladd:
  5430                           	callstack 25
  5431  001BDC  5004               	movf	(___fladd@b+3)^0,w,c
  5432  001BDE  0B80               	andlw	128
  5433  001BE0  6E0D               	movwf	___fladd@signs^0,c
  5434  001BE2  5004               	movf	(___fladd@b+3)^0,w,c
  5435  001BE4  2404               	addwf	(___fladd@b+3)^0,w,c
  5436  001BE6  6E0F               	movwf	___fladd@bexp^0,c
  5437  001BE8  AE03               	btfss	(___fladd@b+2)^0,7,c
  5438  001BEA  EFF9  F00D         	goto	u2821
  5439  001BEE  EFFB  F00D         	goto	u2820
  5440  001BF2                     u2821:
  5441  001BF2  EFFC  F00D         	goto	l2874
  5442  001BF6                     u2820:
  5443  001BF6  800F               	bsf	___fladd@bexp^0,0,c
  5444  001BF8                     l2874:
  5445  001BF8  500F               	movf	___fladd@bexp^0,w,c
  5446  001BFA  B4D8               	btfsc	status,2,c
  5447  001BFC  EF02  F00E         	goto	u2831
  5448  001C00  EF04  F00E         	goto	u2830
  5449  001C04                     u2831:
  5450  001C04  EF19  F00E         	goto	l2884
  5451  001C08                     u2830:
  5452  001C08  280F               	incf	___fladd@bexp^0,w,c
  5453  001C0A  A4D8               	btfss	status,2,c
  5454  001C0C  EF0A  F00E         	goto	u2841
  5455  001C10  EF0C  F00E         	goto	u2840
  5456  001C14                     u2841:
  5457  001C14  EF14  F00E         	goto	l2880
  5458  001C18                     u2840:
  5459  001C18  0E00               	movlw	0
  5460  001C1A  6E01               	movwf	___fladd@b^0,c
  5461  001C1C  0E00               	movlw	0
  5462  001C1E  6E02               	movwf	(___fladd@b+1)^0,c
  5463  001C20  0E00               	movlw	0
  5464  001C22  6E03               	movwf	(___fladd@b+2)^0,c
  5465  001C24  0E00               	movlw	0
  5466  001C26  6E04               	movwf	(___fladd@b+3)^0,c
  5467  001C28                     l2880:
  5468  001C28  8E03               	bsf	(___fladd@b+2)^0,7,c
  5469  001C2A  0E00               	movlw	0
  5470  001C2C  6E04               	movwf	(___fladd@b+3)^0,c
  5471  001C2E  EF21  F00E         	goto	l2886
  5472  001C32                     l2884:
  5473  001C32  0E00               	movlw	0
  5474  001C34  6E01               	movwf	___fladd@b^0,c
  5475  001C36  0E00               	movlw	0
  5476  001C38  6E02               	movwf	(___fladd@b+1)^0,c
  5477  001C3A  0E00               	movlw	0
  5478  001C3C  6E03               	movwf	(___fladd@b+2)^0,c
  5479  001C3E  0E00               	movlw	0
  5480  001C40  6E04               	movwf	(___fladd@b+3)^0,c
  5481  001C42                     l2886:
  5482  001C42  5008               	movf	(___fladd@a+3)^0,w,c
  5483  001C44  0B80               	andlw	128
  5484  001C46  6E0E               	movwf	___fladd@aexp^0,c
  5485  001C48  500D               	movf	___fladd@signs^0,w,c
  5486  001C4A  180E               	xorwf	___fladd@aexp^0,w,c
  5487  001C4C  B4D8               	btfsc	status,2,c
  5488  001C4E  EF2B  F00E         	goto	u2851
  5489  001C52  EF2D  F00E         	goto	u2850
  5490  001C56                     u2851:
  5491  001C56  EF2E  F00E         	goto	l2892
  5492  001C5A                     u2850:
  5493  001C5A  8C0D               	bsf	___fladd@signs^0,6,c
  5494  001C5C                     l2892:
  5495  001C5C  5008               	movf	(___fladd@a+3)^0,w,c
  5496  001C5E  2408               	addwf	(___fladd@a+3)^0,w,c
  5497  001C60  6E0E               	movwf	___fladd@aexp^0,c
  5498  001C62  AE07               	btfss	(___fladd@a+2)^0,7,c
  5499  001C64  EF36  F00E         	goto	u2861
  5500  001C68  EF38  F00E         	goto	u2860
  5501  001C6C                     u2861:
  5502  001C6C  EF39  F00E         	goto	l2898
  5503  001C70                     u2860:
  5504  001C70  800E               	bsf	___fladd@aexp^0,0,c
  5505  001C72                     l2898:
  5506  001C72  500E               	movf	___fladd@aexp^0,w,c
  5507  001C74  B4D8               	btfsc	status,2,c
  5508  001C76  EF3F  F00E         	goto	u2871
  5509  001C7A  EF41  F00E         	goto	u2870
  5510  001C7E                     u2871:
  5511  001C7E  EF56  F00E         	goto	l2908
  5512  001C82                     u2870:
  5513  001C82  280E               	incf	___fladd@aexp^0,w,c
  5514  001C84  A4D8               	btfss	status,2,c
  5515  001C86  EF47  F00E         	goto	u2881
  5516  001C8A  EF49  F00E         	goto	u2880
  5517  001C8E                     u2881:
  5518  001C8E  EF51  F00E         	goto	l2904
  5519  001C92                     u2880:
  5520  001C92  0E00               	movlw	0
  5521  001C94  6E05               	movwf	___fladd@a^0,c
  5522  001C96  0E00               	movlw	0
  5523  001C98  6E06               	movwf	(___fladd@a+1)^0,c
  5524  001C9A  0E00               	movlw	0
  5525  001C9C  6E07               	movwf	(___fladd@a+2)^0,c
  5526  001C9E  0E00               	movlw	0
  5527  001CA0  6E08               	movwf	(___fladd@a+3)^0,c
  5528  001CA2                     l2904:
  5529  001CA2  8E07               	bsf	(___fladd@a+2)^0,7,c
  5530  001CA4  0E00               	movlw	0
  5531  001CA6  6E08               	movwf	(___fladd@a+3)^0,c
  5532  001CA8  EF5E  F00E         	goto	l2910
  5533  001CAC                     l2908:
  5534  001CAC  0E00               	movlw	0
  5535  001CAE  6E05               	movwf	___fladd@a^0,c
  5536  001CB0  0E00               	movlw	0
  5537  001CB2  6E06               	movwf	(___fladd@a+1)^0,c
  5538  001CB4  0E00               	movlw	0
  5539  001CB6  6E07               	movwf	(___fladd@a+2)^0,c
  5540  001CB8  0E00               	movlw	0
  5541  001CBA  6E08               	movwf	(___fladd@a+3)^0,c
  5542  001CBC                     l2910:
  5543  001CBC  500F               	movf	___fladd@bexp^0,w,c
  5544  001CBE  5C0E               	subwf	___fladd@aexp^0,w,c
  5545  001CC0  B0D8               	btfsc	status,0,c
  5546  001CC2  EF65  F00E         	goto	u2891
  5547  001CC6  EF67  F00E         	goto	u2890
  5548  001CCA                     u2891:
  5549  001CCA  EF8E  F00E         	goto	l2946
  5550  001CCE                     u2890:
  5551  001CCE  AC0D               	btfss	___fladd@signs^0,6,c
  5552  001CD0  EF6C  F00E         	goto	u2901
  5553  001CD4  EF6E  F00E         	goto	u2900
  5554  001CD8                     u2901:
  5555  001CD8  EF70  F00E         	goto	l2916
  5556  001CDC                     u2900:
  5557  001CDC  0E80               	movlw	128
  5558  001CDE  1A0D               	xorwf	___fladd@signs^0,f,c
  5559  001CE0                     l2916:
  5560  001CE0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5561  001CE4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5562  001CE8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5563  001CEC  C001  F010         	movff	___fladd@b,___fladd@grs
  5564  001CF0  C005  F001         	movff	___fladd@a,___fladd@b
  5565  001CF4  C010  F005         	movff	___fladd@grs,___fladd@a
  5566  001CF8  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5567  001CFC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5568  001D00  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5569  001D04  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5570  001D08  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5571  001D0C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5572  001D10  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5573  001D14  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5574  001D18  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5575  001D1C                     l2946:
  5576  001D1C  0E00               	movlw	0
  5577  001D1E  6E10               	movwf	___fladd@grs^0,c
  5578  001D20  500F               	movf	___fladd@bexp^0,w,c
  5579  001D22  C00E  F009         	movff	___fladd@aexp,??___fladd
  5580  001D26  6A0A               	clrf	(??___fladd+1)^0,c
  5581  001D28  5E09               	subwf	??___fladd^0,f,c
  5582  001D2A  0E00               	movlw	0
  5583  001D2C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5584  001D2E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5585  001D30  EFA3  F00E         	goto	u2911
  5586  001D34  500A               	movf	(??___fladd+1)^0,w,c
  5587  001D36  E109               	bnz	u2910
  5588  001D38  0E1A               	movlw	26
  5589  001D3A  5C09               	subwf	??___fladd^0,w,c
  5590  001D3C  A0D8               	btfss	status,0,c
  5591  001D3E  EFA3  F00E         	goto	u2911
  5592  001D42  EFA5  F00E         	goto	u2910
  5593  001D46                     u2911:
  5594  001D46  EFDC  F00E         	goto	l609
  5595  001D4A                     u2910:
  5596  001D4A  5001               	movf	___fladd@b^0,w,c
  5597  001D4C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5598  001D4E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5599  001D50  1004               	iorwf	(___fladd@b+3)^0,w,c
  5600  001D52  A4D8               	btfss	status,2,c
  5601  001D54  EFAE  F00E         	goto	u2921
  5602  001D58  EFB1  F00E         	goto	u2920
  5603  001D5C                     u2921:
  5604  001D5C  0E01               	movlw	1
  5605  001D5E  EFB2  F00E         	goto	u2930
  5606  001D62                     u2920:
  5607  001D62  0E00               	movlw	0
  5608  001D64                     u2930:
  5609  001D64  6E10               	movwf	___fladd@grs^0,c
  5610  001D66  0E00               	movlw	0
  5611  001D68  6E01               	movwf	___fladd@b^0,c
  5612  001D6A  0E00               	movlw	0
  5613  001D6C  6E02               	movwf	(___fladd@b+1)^0,c
  5614  001D6E  0E00               	movlw	0
  5615  001D70  6E03               	movwf	(___fladd@b+2)^0,c
  5616  001D72  0E00               	movlw	0
  5617  001D74  6E04               	movwf	(___fladd@b+3)^0,c
  5618  001D76  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5619  001D7A  EFE5  F00E         	goto	l608
  5620  001D7E                     l610:
  5621  001D7E  A010               	btfss	___fladd@grs^0,0,c
  5622  001D80  EFC4  F00E         	goto	u2941
  5623  001D84  EFC6  F00E         	goto	u2940
  5624  001D88                     u2941:
  5625  001D88  EFCC  F00E         	goto	l2958
  5626  001D8C                     u2940:
  5627  001D8C  90D8               	bcf	status,0,c
  5628  001D8E  3010               	rrcf	___fladd@grs^0,w,c
  5629  001D90  0901               	iorlw	1
  5630  001D92  6E10               	movwf	___fladd@grs^0,c
  5631  001D94  EFCE  F00E         	goto	l2960
  5632  001D98                     l2958:
  5633  001D98  90D8               	bcf	status,0,c
  5634  001D9A  3210               	rrcf	___fladd@grs^0,f,c
  5635  001D9C                     l2960:
  5636  001D9C  A001               	btfss	___fladd@b^0,0,c
  5637  001D9E  EFD3  F00E         	goto	u2951
  5638  001DA2  EFD5  F00E         	goto	u2950
  5639  001DA6                     u2951:
  5640  001DA6  EFD6  F00E         	goto	l2964
  5641  001DAA                     u2950:
  5642  001DAA  8E10               	bsf	___fladd@grs^0,7,c
  5643  001DAC                     l2964:
  5644  001DAC  3404               	rlcf	(___fladd@b+3)^0,w,c
  5645  001DAE  3204               	rrcf	(___fladd@b+3)^0,f,c
  5646  001DB0  3203               	rrcf	(___fladd@b+2)^0,f,c
  5647  001DB2  3202               	rrcf	(___fladd@b+1)^0,f,c
  5648  001DB4  3201               	rrcf	___fladd@b^0,f,c
  5649  001DB6  2A0F               	incf	___fladd@bexp^0,f,c
  5650  001DB8                     l609:
  5651  001DB8  500E               	movf	___fladd@aexp^0,w,c
  5652  001DBA  5C0F               	subwf	___fladd@bexp^0,w,c
  5653  001DBC  A0D8               	btfss	status,0,c
  5654  001DBE  EFE3  F00E         	goto	u2961
  5655  001DC2  EFE5  F00E         	goto	u2960
  5656  001DC6                     u2961:
  5657  001DC6  EFBF  F00E         	goto	l610
  5658  001DCA                     u2960:
  5659  001DCA                     l608:
  5660  001DCA  BC0D               	btfsc	___fladd@signs^0,6,c
  5661  001DCC  EFEA  F00E         	goto	u2971
  5662  001DD0  EFEC  F00E         	goto	u2970
  5663  001DD4                     u2971:
  5664  001DD4  EF2C  F00F         	goto	l2992
  5665  001DD8                     u2970:
  5666  001DD8  500F               	movf	___fladd@bexp^0,w,c
  5667  001DDA  A4D8               	btfss	status,2,c
  5668  001DDC  EFF2  F00E         	goto	u2981
  5669  001DE0  EFF4  F00E         	goto	u2980
  5670  001DE4                     u2981:
  5671  001DE4  EFFE  F00E         	goto	l2974
  5672  001DE8                     u2980:
  5673  001DE8  0E00               	movlw	0
  5674  001DEA  6E01               	movwf	?___fladd^0,c
  5675  001DEC  0E00               	movlw	0
  5676  001DEE  6E02               	movwf	(?___fladd+1)^0,c
  5677  001DF0  0E00               	movlw	0
  5678  001DF2  6E03               	movwf	(?___fladd+2)^0,c
  5679  001DF4  0E00               	movlw	0
  5680  001DF6  6E04               	movwf	(?___fladd+3)^0,c
  5681  001DF8  EF4D  F010         	goto	l617
  5682  001DFC                     l2974:
  5683  001DFC  5005               	movf	___fladd@a^0,w,c
  5684  001DFE  2601               	addwf	___fladd@b^0,f,c
  5685  001E00  5006               	movf	(___fladd@a+1)^0,w,c
  5686  001E02  2202               	addwfc	(___fladd@b+1)^0,f,c
  5687  001E04  5007               	movf	(___fladd@a+2)^0,w,c
  5688  001E06  2203               	addwfc	(___fladd@b+2)^0,f,c
  5689  001E08  5008               	movf	(___fladd@a+3)^0,w,c
  5690  001E0A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5691  001E0C  A004               	btfss	(___fladd@b+3)^0,0,c
  5692  001E0E  EF0B  F00F         	goto	u2991
  5693  001E12  EF0D  F00F         	goto	u2990
  5694  001E16                     u2991:
  5695  001E16  EFB9  F00F         	goto	l3028
  5696  001E1A                     u2990:
  5697  001E1A  A010               	btfss	___fladd@grs^0,0,c
  5698  001E1C  EF12  F00F         	goto	u3001
  5699  001E20  EF14  F00F         	goto	u3000
  5700  001E24                     u3001:
  5701  001E24  EF1A  F00F         	goto	l2982
  5702  001E28                     u3000:
  5703  001E28  90D8               	bcf	status,0,c
  5704  001E2A  3010               	rrcf	___fladd@grs^0,w,c
  5705  001E2C  0901               	iorlw	1
  5706  001E2E  6E10               	movwf	___fladd@grs^0,c
  5707  001E30  EF1C  F00F         	goto	l2984
  5708  001E34                     l2982:
  5709  001E34  90D8               	bcf	status,0,c
  5710  001E36  3210               	rrcf	___fladd@grs^0,f,c
  5711  001E38                     l2984:
  5712  001E38  A001               	btfss	___fladd@b^0,0,c
  5713  001E3A  EF21  F00F         	goto	u3011
  5714  001E3E  EF23  F00F         	goto	u3010
  5715  001E42                     u3011:
  5716  001E42  EF24  F00F         	goto	l2988
  5717  001E46                     u3010:
  5718  001E46  8E10               	bsf	___fladd@grs^0,7,c
  5719  001E48                     l2988:
  5720  001E48  3404               	rlcf	(___fladd@b+3)^0,w,c
  5721  001E4A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5722  001E4C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5723  001E4E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5724  001E50  3201               	rrcf	___fladd@b^0,f,c
  5725  001E52  2A0F               	incf	___fladd@bexp^0,f,c
  5726  001E54  EFB9  F00F         	goto	l3028
  5727  001E58                     l2992:
  5728  001E58  5005               	movf	___fladd@a^0,w,c
  5729  001E5A  5C01               	subwf	___fladd@b^0,w,c
  5730  001E5C  5006               	movf	(___fladd@a+1)^0,w,c
  5731  001E5E  5802               	subwfb	(___fladd@b+1)^0,w,c
  5732  001E60  5007               	movf	(___fladd@a+2)^0,w,c
  5733  001E62  5803               	subwfb	(___fladd@b+2)^0,w,c
  5734  001E64  5004               	movf	(___fladd@b+3)^0,w,c
  5735  001E66  0A80               	xorlw	128
  5736  001E68  6E09               	movwf	??___fladd^0,c
  5737  001E6A  5008               	movf	(___fladd@a+3)^0,w,c
  5738  001E6C  0A80               	xorlw	128
  5739  001E6E  5809               	subwfb	??___fladd^0,w,c
  5740  001E70  B0D8               	btfsc	status,0,c
  5741  001E72  EF3D  F00F         	goto	u3021
  5742  001E76  EF3F  F00F         	goto	u3020
  5743  001E7A                     u3021:
  5744  001E7A  EF6A  F00F         	goto	l3002
  5745  001E7E                     u3020:
  5746  001E7E  5001               	movf	___fladd@b^0,w,c
  5747  001E80  5C05               	subwf	___fladd@a^0,w,c
  5748  001E82  6E09               	movwf	??___fladd^0,c
  5749  001E84  5002               	movf	(___fladd@b+1)^0,w,c
  5750  001E86  5806               	subwfb	(___fladd@a+1)^0,w,c
  5751  001E88  6E0A               	movwf	(??___fladd+1)^0,c
  5752  001E8A  5003               	movf	(___fladd@b+2)^0,w,c
  5753  001E8C  5807               	subwfb	(___fladd@a+2)^0,w,c
  5754  001E8E  6E0B               	movwf	(??___fladd+2)^0,c
  5755  001E90  5004               	movf	(___fladd@b+3)^0,w,c
  5756  001E92  5808               	subwfb	(___fladd@a+3)^0,w,c
  5757  001E94  6E0C               	movwf	(??___fladd+3)^0,c
  5758  001E96  0EFF               	movlw	255
  5759  001E98  2409               	addwf	??___fladd^0,w,c
  5760  001E9A  6E01               	movwf	___fladd@b^0,c
  5761  001E9C  0EFF               	movlw	255
  5762  001E9E  200A               	addwfc	(??___fladd+1)^0,w,c
  5763  001EA0  6E02               	movwf	(___fladd@b+1)^0,c
  5764  001EA2  0EFF               	movlw	255
  5765  001EA4  200B               	addwfc	(??___fladd+2)^0,w,c
  5766  001EA6  6E03               	movwf	(___fladd@b+2)^0,c
  5767  001EA8  0EFF               	movlw	255
  5768  001EAA  200C               	addwfc	(??___fladd+3)^0,w,c
  5769  001EAC  6E04               	movwf	(___fladd@b+3)^0,c
  5770  001EAE  0E80               	movlw	128
  5771  001EB0  1A0D               	xorwf	___fladd@signs^0,f,c
  5772  001EB2  6C10               	negf	___fladd@grs^0,c
  5773  001EB4  5010               	movf	___fladd@grs^0,w,c
  5774  001EB6  A4D8               	btfss	status,2,c
  5775  001EB8  EF60  F00F         	goto	u3031
  5776  001EBC  EF62  F00F         	goto	u3030
  5777  001EC0                     u3031:
  5778  001EC0  EF72  F00F         	goto	l625
  5779  001EC4                     u3030:
  5780  001EC4  0E01               	movlw	1
  5781  001EC6  2601               	addwf	___fladd@b^0,f,c
  5782  001EC8  0E00               	movlw	0
  5783  001ECA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5784  001ECC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5785  001ECE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5786  001ED0  EF72  F00F         	goto	l625
  5787  001ED4                     l3002:
  5788  001ED4  5005               	movf	___fladd@a^0,w,c
  5789  001ED6  5E01               	subwf	___fladd@b^0,f,c
  5790  001ED8  5006               	movf	(___fladd@a+1)^0,w,c
  5791  001EDA  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5792  001EDC  5007               	movf	(___fladd@a+2)^0,w,c
  5793  001EDE  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5794  001EE0  5008               	movf	(___fladd@a+3)^0,w,c
  5795  001EE2  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5796  001EE4                     l625:
  5797  001EE4  5001               	movf	___fladd@b^0,w,c
  5798  001EE6  1002               	iorwf	(___fladd@b+1)^0,w,c
  5799  001EE8  1003               	iorwf	(___fladd@b+2)^0,w,c
  5800  001EEA  1004               	iorwf	(___fladd@b+3)^0,w,c
  5801  001EEC  A4D8               	btfss	status,2,c
  5802  001EEE  EF7B  F00F         	goto	u3041
  5803  001EF2  EF7D  F00F         	goto	u3040
  5804  001EF6                     u3041:
  5805  001EF6  EFB2  F00F         	goto	l3026
  5806  001EFA                     u3040:
  5807  001EFA  5010               	movf	___fladd@grs^0,w,c
  5808  001EFC  A4D8               	btfss	status,2,c
  5809  001EFE  EF83  F00F         	goto	u3051
  5810  001F02  EF85  F00F         	goto	u3050
  5811  001F06                     u3051:
  5812  001F06  EFB2  F00F         	goto	l3026
  5813  001F0A                     u3050:
  5814  001F0A  0E00               	movlw	0
  5815  001F0C  6E01               	movwf	?___fladd^0,c
  5816  001F0E  0E00               	movlw	0
  5817  001F10  6E02               	movwf	(?___fladd+1)^0,c
  5818  001F12  0E00               	movlw	0
  5819  001F14  6E03               	movwf	(?___fladd+2)^0,c
  5820  001F16  0E00               	movlw	0
  5821  001F18  6E04               	movwf	(?___fladd+3)^0,c
  5822  001F1A  EF4D  F010         	goto	l617
  5823  001F1E                     l3010:
  5824  001F1E  90D8               	bcf	status,0,c
  5825  001F20  3601               	rlcf	___fladd@b^0,f,c
  5826  001F22  3602               	rlcf	(___fladd@b+1)^0,f,c
  5827  001F24  3603               	rlcf	(___fladd@b+2)^0,f,c
  5828  001F26  3604               	rlcf	(___fladd@b+3)^0,f,c
  5829  001F28  AE10               	btfss	___fladd@grs^0,7,c
  5830  001F2A  EF99  F00F         	goto	u3061
  5831  001F2E  EF9B  F00F         	goto	u3060
  5832  001F32                     u3061:
  5833  001F32  EF9C  F00F         	goto	l3016
  5834  001F36                     u3060:
  5835  001F36  8001               	bsf	___fladd@b^0,0,c
  5836  001F38                     l3016:
  5837  001F38  A010               	btfss	___fladd@grs^0,0,c
  5838  001F3A  EFA1  F00F         	goto	u3071
  5839  001F3E  EFA3  F00F         	goto	u3070
  5840  001F42                     u3071:
  5841  001F42  EFA7  F00F         	goto	l3020
  5842  001F46                     u3070:
  5843  001F46  80D8               	bsf	status,0,c
  5844  001F48  3610               	rlcf	___fladd@grs^0,f,c
  5845  001F4A  EFA9  F00F         	goto	l3022
  5846  001F4E                     l3020:
  5847  001F4E  90D8               	bcf	status,0,c
  5848  001F50  3610               	rlcf	___fladd@grs^0,f,c
  5849  001F52                     l3022:
  5850  001F52  500F               	movf	___fladd@bexp^0,w,c
  5851  001F54  B4D8               	btfsc	status,2,c
  5852  001F56  EFAF  F00F         	goto	u3081
  5853  001F5A  EFB1  F00F         	goto	u3080
  5854  001F5E                     u3081:
  5855  001F5E  EFB2  F00F         	goto	l3026
  5856  001F62                     u3080:
  5857  001F62  060F               	decf	___fladd@bexp^0,f,c
  5858  001F64                     l3026:
  5859  001F64  AE03               	btfss	(___fladd@b+2)^0,7,c
  5860  001F66  EFB7  F00F         	goto	u3091
  5861  001F6A  EFB9  F00F         	goto	u3090
  5862  001F6E                     u3091:
  5863  001F6E  EF8F  F00F         	goto	l3010
  5864  001F72                     u3090:
  5865  001F72                     l3028:
  5866  001F72  0E00               	movlw	0
  5867  001F74  6E0E               	movwf	___fladd@aexp^0,c
  5868  001F76  AE10               	btfss	___fladd@grs^0,7,c
  5869  001F78  EFC0  F00F         	goto	u3101
  5870  001F7C  EFC2  F00F         	goto	u3100
  5871  001F80                     u3101:
  5872  001F80  EFDA  F00F         	goto	l634
  5873  001F84                     u3100:
  5874  001F84  C010  F009         	movff	___fladd@grs,??___fladd
  5875  001F88  0E7F               	movlw	127
  5876  001F8A  1609               	andwf	??___fladd^0,f,c
  5877  001F8C  B4D8               	btfsc	status,2,c
  5878  001F8E  EFCB  F00F         	goto	u3111
  5879  001F92  EFCD  F00F         	goto	u3110
  5880  001F96                     u3111:
  5881  001F96  EFD1  F00F         	goto	l635
  5882  001F9A                     u3110:
  5883  001F9A                     l3034:
  5884  001F9A  0E01               	movlw	1
  5885  001F9C  6E0E               	movwf	___fladd@aexp^0,c
  5886  001F9E  EFDA  F00F         	goto	l634
  5887  001FA2                     l635:
  5888  001FA2  A001               	btfss	___fladd@b^0,0,c
  5889  001FA4  EFD6  F00F         	goto	u3121
  5890  001FA8  EFD8  F00F         	goto	u3120
  5891  001FAC                     u3121:
  5892  001FAC  EFDA  F00F         	goto	l634
  5893  001FB0                     u3120:
  5894  001FB0  EFCD  F00F         	goto	l3034
  5895  001FB4                     l634:
  5896  001FB4  500E               	movf	___fladd@aexp^0,w,c
  5897  001FB6  B4D8               	btfsc	status,2,c
  5898  001FB8  EFE0  F00F         	goto	u3131
  5899  001FBC  EFE2  F00F         	goto	u3130
  5900  001FC0                     u3131:
  5901  001FC0  EF0D  F010         	goto	l3046
  5902  001FC4                     u3130:
  5903  001FC4  0E01               	movlw	1
  5904  001FC6  2601               	addwf	___fladd@b^0,f,c
  5905  001FC8  0E00               	movlw	0
  5906  001FCA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5907  001FCC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5908  001FCE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5909  001FD0  A004               	btfss	(___fladd@b+3)^0,0,c
  5910  001FD2  EFED  F00F         	goto	u3141
  5911  001FD6  EFEF  F00F         	goto	u3140
  5912  001FDA                     u3141:
  5913  001FDA  EF0D  F010         	goto	l3046
  5914  001FDE                     u3140:
  5915  001FDE  C001  F009         	movff	___fladd@b,??___fladd
  5916  001FE2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5917  001FE6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5918  001FEA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5919  001FEE  340C               	rlcf	(??___fladd+3)^0,w,c
  5920  001FF0  320C               	rrcf	(??___fladd+3)^0,f,c
  5921  001FF2  320B               	rrcf	(??___fladd+2)^0,f,c
  5922  001FF4  320A               	rrcf	(??___fladd+1)^0,f,c
  5923  001FF6  3209               	rrcf	??___fladd^0,f,c
  5924  001FF8  C009  F001         	movff	??___fladd,___fladd@b
  5925  001FFC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5926  002000  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5927  002004  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5928  002008  280F               	incf	___fladd@bexp^0,w,c
  5929  00200A  B4D8               	btfsc	status,2,c
  5930  00200C  EF0A  F010         	goto	u3151
  5931  002010  EF0C  F010         	goto	u3150
  5932  002014                     u3151:
  5933  002014  EF0D  F010         	goto	l3046
  5934  002018                     u3150:
  5935  002018  2A0F               	incf	___fladd@bexp^0,f,c
  5936  00201A                     l3046:
  5937  00201A  280F               	incf	___fladd@bexp^0,w,c
  5938  00201C  B4D8               	btfsc	status,2,c
  5939  00201E  EF13  F010         	goto	u3161
  5940  002022  EF15  F010         	goto	u3160
  5941  002026                     u3161:
  5942  002026  EF1D  F010         	goto	l3050
  5943  00202A                     u3160:
  5944  00202A  500F               	movf	___fladd@bexp^0,w,c
  5945  00202C  A4D8               	btfss	status,2,c
  5946  00202E  EF1B  F010         	goto	u3171
  5947  002032  EF1D  F010         	goto	u3170
  5948  002036                     u3171:
  5949  002036  EF2F  F010         	goto	l3054
  5950  00203A                     u3170:
  5951  00203A                     l3050:
  5952  00203A  0E00               	movlw	0
  5953  00203C  6E01               	movwf	___fladd@b^0,c
  5954  00203E  0E00               	movlw	0
  5955  002040  6E02               	movwf	(___fladd@b+1)^0,c
  5956  002042  0E00               	movlw	0
  5957  002044  6E03               	movwf	(___fladd@b+2)^0,c
  5958  002046  0E00               	movlw	0
  5959  002048  6E04               	movwf	(___fladd@b+3)^0,c
  5960  00204A  500F               	movf	___fladd@bexp^0,w,c
  5961  00204C  A4D8               	btfss	status,2,c
  5962  00204E  EF2B  F010         	goto	u3181
  5963  002052  EF2D  F010         	goto	u3180
  5964  002056                     u3181:
  5965  002056  EF2F  F010         	goto	l3054
  5966  00205A                     u3180:
  5967  00205A  0E00               	movlw	0
  5968  00205C  6E0D               	movwf	___fladd@signs^0,c
  5969  00205E                     l3054:
  5970  00205E  A00F               	btfss	___fladd@bexp^0,0,c
  5971  002060  EF34  F010         	goto	u3191
  5972  002064  EF36  F010         	goto	u3190
  5973  002068                     u3191:
  5974  002068  EF39  F010         	goto	l3058
  5975  00206C                     u3190:
  5976  00206C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5977  00206E  EF3A  F010         	goto	l3060
  5978  002072                     l3058:
  5979  002072  9E03               	bcf	(___fladd@b+2)^0,7,c
  5980  002074                     l3060:
  5981  002074  90D8               	bcf	status,0,c
  5982  002076  300F               	rrcf	___fladd@bexp^0,w,c
  5983  002078  6E04               	movwf	(___fladd@b+3)^0,c
  5984  00207A  AE0D               	btfss	___fladd@signs^0,7,c
  5985  00207C  EF42  F010         	goto	u3201
  5986  002080  EF44  F010         	goto	u3200
  5987  002084                     u3201:
  5988  002084  EF45  F010         	goto	l3066
  5989  002088                     u3200:
  5990  002088  8E04               	bsf	(___fladd@b+3)^0,7,c
  5991  00208A                     l3066:
  5992  00208A  C001  F001         	movff	___fladd@b,?___fladd
  5993  00208E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5994  002092  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5995  002096  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5996  00209A                     l617:
  5997  00209A  0012               	return		;funcret
  5998  00209C                     __end_of___fladd:
  5999                           	callstack 0
  6000                           
  6001 ;; *************** function ___flneg *****************
  6002 ;; Defined at:
  6003 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flneg.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  f1              4    0[COMRAM] unsigned char 
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;		None
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  4    0[COMRAM] unsigned char 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6017 ;;      Params:         4       0       0       0       0       0       0       0       0
  6018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6020 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6021 ;;Total ram usage:        4 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_efgtoa
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text14
  6031  00407E                     __ptext14:
  6032                           	callstack 0
  6033  00407E                     ___flneg:
  6034                           	callstack 26
  6035  00407E  5001               	movf	___flneg@f1^0,w,c
  6036  004080  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6037  004082  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6038  004084  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6039  004086  B4D8               	btfsc	status,2,c
  6040  004088  EF48  F020         	goto	u4001
  6041  00408C  EF4A  F020         	goto	u4000
  6042  004090                     u4001:
  6043  004090  EF52  F020         	goto	l3574
  6044  004094                     u4000:
  6045  004094  0E00               	movlw	0
  6046  004096  1A01               	xorwf	___flneg@f1^0,f,c
  6047  004098  0E00               	movlw	0
  6048  00409A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6049  00409C  0E00               	movlw	0
  6050  00409E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6051  0040A0  0E80               	movlw	128
  6052  0040A2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6053  0040A4                     l3574:
  6054  0040A4  C001  F001         	movff	___flneg@f1,?___flneg
  6055  0040A8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6056  0040AC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6057  0040B0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6058  0040B4  0012               	return		;funcret
  6059  0040B6                     __end_of___flneg:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function ___flmul *****************
  6063 ;; Defined at:
  6064 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  b               4    0[COMRAM] unsigned char 
  6067 ;;  a               4    4[COMRAM] unsigned char 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  prod            4   19[COMRAM] struct .
  6070 ;;  grs             4   13[COMRAM] unsigned long 
  6071 ;;  temp            2   23[COMRAM] struct .
  6072 ;;  bexp            1   18[COMRAM] unsigned char 
  6073 ;;  aexp            1   17[COMRAM] unsigned char 
  6074 ;;  sign            1   12[COMRAM] unsigned char 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  4    0[COMRAM] unsigned char 
  6077 ;; Registers used:
  6078 ;;		wreg, status,2, status,0, prodl, prodh
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6084 ;;      Params:         8       0       0       0       0       0       0       0       0
  6085 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6086 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6087 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6088 ;;Total ram usage:       25 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_efgtoa
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text15
  6098  00209C                     __ptext15:
  6099                           	callstack 0
  6100  00209C                     ___flmul:
  6101                           	callstack 26
  6102  00209C  5004               	movf	(___flmul@b+3)^0,w,c
  6103  00209E  0B80               	andlw	128
  6104  0020A0  6E0D               	movwf	___flmul@sign^0,c
  6105  0020A2  5004               	movf	(___flmul@b+3)^0,w,c
  6106  0020A4  2404               	addwf	(___flmul@b+3)^0,w,c
  6107  0020A6  6E13               	movwf	___flmul@bexp^0,c
  6108  0020A8  AE03               	btfss	(___flmul@b+2)^0,7,c
  6109  0020AA  EF59  F010         	goto	u3611
  6110  0020AE  EF5B  F010         	goto	u3610
  6111  0020B2                     u3611:
  6112  0020B2  EF5C  F010         	goto	l3322
  6113  0020B6                     u3610:
  6114  0020B6  8013               	bsf	___flmul@bexp^0,0,c
  6115  0020B8                     l3322:
  6116  0020B8  5013               	movf	___flmul@bexp^0,w,c
  6117  0020BA  B4D8               	btfsc	status,2,c
  6118  0020BC  EF62  F010         	goto	u3621
  6119  0020C0  EF64  F010         	goto	u3620
  6120  0020C4                     u3621:
  6121  0020C4  EF77  F010         	goto	l3330
  6122  0020C8                     u3620:
  6123  0020C8  2813               	incf	___flmul@bexp^0,w,c
  6124  0020CA  A4D8               	btfss	status,2,c
  6125  0020CC  EF6A  F010         	goto	u3631
  6126  0020D0  EF6C  F010         	goto	u3630
  6127  0020D4                     u3631:
  6128  0020D4  EF74  F010         	goto	l3328
  6129  0020D8                     u3630:
  6130  0020D8  0E00               	movlw	0
  6131  0020DA  6E01               	movwf	___flmul@b^0,c
  6132  0020DC  0E00               	movlw	0
  6133  0020DE  6E02               	movwf	(___flmul@b+1)^0,c
  6134  0020E0  0E00               	movlw	0
  6135  0020E2  6E03               	movwf	(___flmul@b+2)^0,c
  6136  0020E4  0E00               	movlw	0
  6137  0020E6  6E04               	movwf	(___flmul@b+3)^0,c
  6138  0020E8                     l3328:
  6139  0020E8  8E03               	bsf	(___flmul@b+2)^0,7,c
  6140  0020EA  EF7F  F010         	goto	l3332
  6141  0020EE                     l3330:
  6142  0020EE  0E00               	movlw	0
  6143  0020F0  6E01               	movwf	___flmul@b^0,c
  6144  0020F2  0E00               	movlw	0
  6145  0020F4  6E02               	movwf	(___flmul@b+1)^0,c
  6146  0020F6  0E00               	movlw	0
  6147  0020F8  6E03               	movwf	(___flmul@b+2)^0,c
  6148  0020FA  0E00               	movlw	0
  6149  0020FC  6E04               	movwf	(___flmul@b+3)^0,c
  6150  0020FE                     l3332:
  6151  0020FE  5008               	movf	(___flmul@a+3)^0,w,c
  6152  002100  0B80               	andlw	128
  6153  002102  1A0D               	xorwf	___flmul@sign^0,f,c
  6154  002104  5008               	movf	(___flmul@a+3)^0,w,c
  6155  002106  2408               	addwf	(___flmul@a+3)^0,w,c
  6156  002108  6E12               	movwf	___flmul@aexp^0,c
  6157  00210A  AE07               	btfss	(___flmul@a+2)^0,7,c
  6158  00210C  EF8A  F010         	goto	u3641
  6159  002110  EF8C  F010         	goto	u3640
  6160  002114                     u3641:
  6161  002114  EF8D  F010         	goto	l3340
  6162  002118                     u3640:
  6163  002118  8012               	bsf	___flmul@aexp^0,0,c
  6164  00211A                     l3340:
  6165  00211A  5012               	movf	___flmul@aexp^0,w,c
  6166  00211C  B4D8               	btfsc	status,2,c
  6167  00211E  EF93  F010         	goto	u3651
  6168  002122  EF95  F010         	goto	u3650
  6169  002126                     u3651:
  6170  002126  EFA8  F010         	goto	l3348
  6171  00212A                     u3650:
  6172  00212A  2812               	incf	___flmul@aexp^0,w,c
  6173  00212C  A4D8               	btfss	status,2,c
  6174  00212E  EF9B  F010         	goto	u3661
  6175  002132  EF9D  F010         	goto	u3660
  6176  002136                     u3661:
  6177  002136  EFA5  F010         	goto	l3346
  6178  00213A                     u3660:
  6179  00213A  0E00               	movlw	0
  6180  00213C  6E05               	movwf	___flmul@a^0,c
  6181  00213E  0E00               	movlw	0
  6182  002140  6E06               	movwf	(___flmul@a+1)^0,c
  6183  002142  0E00               	movlw	0
  6184  002144  6E07               	movwf	(___flmul@a+2)^0,c
  6185  002146  0E00               	movlw	0
  6186  002148  6E08               	movwf	(___flmul@a+3)^0,c
  6187  00214A                     l3346:
  6188  00214A  8E07               	bsf	(___flmul@a+2)^0,7,c
  6189  00214C  EFB0  F010         	goto	l694
  6190  002150                     l3348:
  6191  002150  0E00               	movlw	0
  6192  002152  6E05               	movwf	___flmul@a^0,c
  6193  002154  0E00               	movlw	0
  6194  002156  6E06               	movwf	(___flmul@a+1)^0,c
  6195  002158  0E00               	movlw	0
  6196  00215A  6E07               	movwf	(___flmul@a+2)^0,c
  6197  00215C  0E00               	movlw	0
  6198  00215E  6E08               	movwf	(___flmul@a+3)^0,c
  6199  002160                     l694:
  6200  002160  5012               	movf	___flmul@aexp^0,w,c
  6201  002162  B4D8               	btfsc	status,2,c
  6202  002164  EFB6  F010         	goto	u3671
  6203  002168  EFB8  F010         	goto	u3670
  6204  00216C                     u3671:
  6205  00216C  EFC0  F010         	goto	l3352
  6206  002170                     u3670:
  6207  002170  5013               	movf	___flmul@bexp^0,w,c
  6208  002172  A4D8               	btfss	status,2,c
  6209  002174  EFBE  F010         	goto	u3681
  6210  002178  EFC0  F010         	goto	u3680
  6211  00217C                     u3681:
  6212  00217C  EFCA  F010         	goto	l3356
  6213  002180                     u3680:
  6214  002180                     l3352:
  6215  002180  0E00               	movlw	0
  6216  002182  6E01               	movwf	?___flmul^0,c
  6217  002184  0E00               	movlw	0
  6218  002186  6E02               	movwf	(?___flmul+1)^0,c
  6219  002188  0E00               	movlw	0
  6220  00218A  6E03               	movwf	(?___flmul+2)^0,c
  6221  00218C  0E00               	movlw	0
  6222  00218E  6E04               	movwf	(?___flmul+3)^0,c
  6223  002190  EF62  F012         	goto	l698
  6224  002194                     l3356:
  6225  002194  5007               	movf	(___flmul@a+2)^0,w,c
  6226  002196  0201               	mulwf	___flmul@b^0,c
  6227  002198  CFF3 F018          	movff	prodl,___flmul@temp
  6228  00219C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6229  0021A0  5018               	movf	___flmul@temp^0,w,c
  6230  0021A2  6E0E               	movwf	___flmul@grs^0,c
  6231  0021A4  6A0F               	clrf	(___flmul@grs+1)^0,c
  6232  0021A6  6A10               	clrf	(___flmul@grs+2)^0,c
  6233  0021A8  6A11               	clrf	(___flmul@grs+3)^0,c
  6234  0021AA  5019               	movf	(___flmul@temp+1)^0,w,c
  6235  0021AC  6E14               	movwf	___flmul@prod^0,c
  6236  0021AE  6A15               	clrf	(___flmul@prod+1)^0,c
  6237  0021B0  6A16               	clrf	(___flmul@prod+2)^0,c
  6238  0021B2  6A17               	clrf	(___flmul@prod+3)^0,c
  6239  0021B4  5006               	movf	(___flmul@a+1)^0,w,c
  6240  0021B6  0202               	mulwf	(___flmul@b+1)^0,c
  6241  0021B8  CFF3 F018          	movff	prodl,___flmul@temp
  6242  0021BC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6243  0021C0  5018               	movf	___flmul@temp^0,w,c
  6244  0021C2  260E               	addwf	___flmul@grs^0,f,c
  6245  0021C4  0E00               	movlw	0
  6246  0021C6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6247  0021C8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6248  0021CA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6249  0021CC  5019               	movf	(___flmul@temp+1)^0,w,c
  6250  0021CE  2614               	addwf	___flmul@prod^0,f,c
  6251  0021D0  0E00               	movlw	0
  6252  0021D2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6253  0021D4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6254  0021D6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6255  0021D8  5005               	movf	___flmul@a^0,w,c
  6256  0021DA  0203               	mulwf	(___flmul@b+2)^0,c
  6257  0021DC  CFF3 F018          	movff	prodl,___flmul@temp
  6258  0021E0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6259  0021E4  5018               	movf	___flmul@temp^0,w,c
  6260  0021E6  260E               	addwf	___flmul@grs^0,f,c
  6261  0021E8  0E00               	movlw	0
  6262  0021EA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6263  0021EC  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6264  0021EE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6265  0021F0  5019               	movf	(___flmul@temp+1)^0,w,c
  6266  0021F2  2614               	addwf	___flmul@prod^0,f,c
  6267  0021F4  0E00               	movlw	0
  6268  0021F6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6269  0021F8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6270  0021FA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6271  0021FC  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6272  002200  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6273  002204  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6274  002208  6A0E               	clrf	___flmul@grs^0,c
  6275  00220A  5005               	movf	___flmul@a^0,w,c
  6276  00220C  0202               	mulwf	(___flmul@b+1)^0,c
  6277  00220E  CFF3 F018          	movff	prodl,___flmul@temp
  6278  002212  CFF4 F019          	movff	prodh,___flmul@temp+1
  6279  002216  5018               	movf	___flmul@temp^0,w,c
  6280  002218  260E               	addwf	___flmul@grs^0,f,c
  6281  00221A  5019               	movf	(___flmul@temp+1)^0,w,c
  6282  00221C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6283  00221E  0E00               	movlw	0
  6284  002220  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6285  002222  0E00               	movlw	0
  6286  002224  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6287  002226  5006               	movf	(___flmul@a+1)^0,w,c
  6288  002228  0201               	mulwf	___flmul@b^0,c
  6289  00222A  CFF3 F018          	movff	prodl,___flmul@temp
  6290  00222E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6291  002232  5018               	movf	___flmul@temp^0,w,c
  6292  002234  260E               	addwf	___flmul@grs^0,f,c
  6293  002236  5019               	movf	(___flmul@temp+1)^0,w,c
  6294  002238  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6295  00223A  0E00               	movlw	0
  6296  00223C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6297  00223E  0E00               	movlw	0
  6298  002240  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6299  002242  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6300  002246  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6301  00224A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6302  00224E  6A0E               	clrf	___flmul@grs^0,c
  6303  002250  5005               	movf	___flmul@a^0,w,c
  6304  002252  0201               	mulwf	___flmul@b^0,c
  6305  002254  CFF3 F018          	movff	prodl,___flmul@temp
  6306  002258  CFF4 F019          	movff	prodh,___flmul@temp+1
  6307  00225C  5018               	movf	___flmul@temp^0,w,c
  6308  00225E  260E               	addwf	___flmul@grs^0,f,c
  6309  002260  5019               	movf	(___flmul@temp+1)^0,w,c
  6310  002262  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6311  002264  0E00               	movlw	0
  6312  002266  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6313  002268  0E00               	movlw	0
  6314  00226A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6315  00226C  5007               	movf	(___flmul@a+2)^0,w,c
  6316  00226E  0202               	mulwf	(___flmul@b+1)^0,c
  6317  002270  CFF3 F018          	movff	prodl,___flmul@temp
  6318  002274  CFF4 F019          	movff	prodh,___flmul@temp+1
  6319  002278  5018               	movf	___flmul@temp^0,w,c
  6320  00227A  2614               	addwf	___flmul@prod^0,f,c
  6321  00227C  5019               	movf	(___flmul@temp+1)^0,w,c
  6322  00227E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6323  002280  0E00               	movlw	0
  6324  002282  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6325  002284  0E00               	movlw	0
  6326  002286  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6327  002288  5006               	movf	(___flmul@a+1)^0,w,c
  6328  00228A  0203               	mulwf	(___flmul@b+2)^0,c
  6329  00228C  CFF3 F018          	movff	prodl,___flmul@temp
  6330  002290  CFF4 F019          	movff	prodh,___flmul@temp+1
  6331  002294  5018               	movf	___flmul@temp^0,w,c
  6332  002296  2614               	addwf	___flmul@prod^0,f,c
  6333  002298  5019               	movf	(___flmul@temp+1)^0,w,c
  6334  00229A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6335  00229C  0E00               	movlw	0
  6336  00229E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6337  0022A0  0E00               	movlw	0
  6338  0022A2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6339  0022A4  5007               	movf	(___flmul@a+2)^0,w,c
  6340  0022A6  0203               	mulwf	(___flmul@b+2)^0,c
  6341  0022A8  CFF3 F018          	movff	prodl,___flmul@temp
  6342  0022AC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6343  0022B0  5018               	movf	___flmul@temp^0,w,c
  6344  0022B2  6E09               	movwf	??___flmul^0,c
  6345  0022B4  5019               	movf	(___flmul@temp+1)^0,w,c
  6346  0022B6  6E0A               	movwf	(??___flmul+1)^0,c
  6347  0022B8  6A0B               	clrf	(??___flmul+2)^0,c
  6348  0022BA  6A0C               	clrf	(??___flmul+3)^0,c
  6349  0022BC  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6350  0022C0  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6351  0022C4  C009  F00A         	movff	??___flmul,??___flmul+1
  6352  0022C8  6A09               	clrf	??___flmul^0,c
  6353  0022CA  5009               	movf	??___flmul^0,w,c
  6354  0022CC  2614               	addwf	___flmul@prod^0,f,c
  6355  0022CE  500A               	movf	(??___flmul+1)^0,w,c
  6356  0022D0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6357  0022D2  500B               	movf	(??___flmul+2)^0,w,c
  6358  0022D4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6359  0022D6  500C               	movf	(??___flmul+3)^0,w,c
  6360  0022D8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6361  0022DA  C00E  F009         	movff	___flmul@grs,??___flmul
  6362  0022DE  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6363  0022E2  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6364  0022E6  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6365  0022EA  0E19               	movlw	25
  6366  0022EC  EF7D  F011         	goto	u3690
  6367  0022F0                     u3695:
  6368  0022F0  90D8               	bcf	status,0,c
  6369  0022F2  320C               	rrcf	(??___flmul+3)^0,f,c
  6370  0022F4  320B               	rrcf	(??___flmul+2)^0,f,c
  6371  0022F6  320A               	rrcf	(??___flmul+1)^0,f,c
  6372  0022F8  3209               	rrcf	??___flmul^0,f,c
  6373  0022FA                     u3690:
  6374  0022FA  2EE8               	decfsz	wreg,f,c
  6375  0022FC  EF78  F011         	goto	u3695
  6376  002300  5009               	movf	??___flmul^0,w,c
  6377  002302  2614               	addwf	___flmul@prod^0,f,c
  6378  002304  500A               	movf	(??___flmul+1)^0,w,c
  6379  002306  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6380  002308  500B               	movf	(??___flmul+2)^0,w,c
  6381  00230A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6382  00230C  500C               	movf	(??___flmul+3)^0,w,c
  6383  00230E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6384  002310  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6385  002314  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6386  002318  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6387  00231C  6A0E               	clrf	___flmul@grs^0,c
  6388  00231E  5012               	movf	___flmul@aexp^0,w,c
  6389  002320  C013  F009         	movff	___flmul@bexp,??___flmul
  6390  002324  6A0A               	clrf	(??___flmul+1)^0,c
  6391  002326  2609               	addwf	??___flmul^0,f,c
  6392  002328  0E00               	movlw	0
  6393  00232A  220A               	addwfc	(??___flmul+1)^0,f,c
  6394  00232C  0E82               	movlw	130
  6395  00232E  2409               	addwf	??___flmul^0,w,c
  6396  002330  6E18               	movwf	___flmul@temp^0,c
  6397  002332  0EFF               	movlw	255
  6398  002334  200A               	addwfc	(??___flmul+1)^0,w,c
  6399  002336  6E19               	movwf	(___flmul@temp+1)^0,c
  6400  002338  EFB3  F011         	goto	l3404
  6401  00233C                     l3398:
  6402  00233C  90D8               	bcf	status,0,c
  6403  00233E  3614               	rlcf	___flmul@prod^0,f,c
  6404  002340  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6405  002342  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6406  002344  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6407  002346  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6408  002348  EFA8  F011         	goto	u3701
  6409  00234C  EFAA  F011         	goto	u3700
  6410  002350                     u3701:
  6411  002350  EFAB  F011         	goto	l701
  6412  002354                     u3700:
  6413  002354  8014               	bsf	___flmul@prod^0,0,c
  6414  002356                     l701:
  6415  002356  90D8               	bcf	status,0,c
  6416  002358  360E               	rlcf	___flmul@grs^0,f,c
  6417  00235A  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6418  00235C  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6419  00235E  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6420  002360  0618               	decf	___flmul@temp^0,f,c
  6421  002362  A0D8               	btfss	status,0,c
  6422  002364  0619               	decf	(___flmul@temp+1)^0,f,c
  6423  002366                     l3404:
  6424  002366  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6425  002368  EFB8  F011         	goto	u3711
  6426  00236C  EFBA  F011         	goto	u3710
  6427  002370                     u3711:
  6428  002370  EF9E  F011         	goto	l3398
  6429  002374                     u3710:
  6430  002374  0E00               	movlw	0
  6431  002376  6E12               	movwf	___flmul@aexp^0,c
  6432  002378  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6433  00237A  EFC1  F011         	goto	u3721
  6434  00237E  EFC3  F011         	goto	u3720
  6435  002382                     u3721:
  6436  002382  EFE7  F011         	goto	l703
  6437  002386                     u3720:
  6438  002386  0EFF               	movlw	255
  6439  002388  140E               	andwf	___flmul@grs^0,w,c
  6440  00238A  6E09               	movwf	??___flmul^0,c
  6441  00238C  0EFF               	movlw	255
  6442  00238E  140F               	andwf	(___flmul@grs+1)^0,w,c
  6443  002390  6E0A               	movwf	(??___flmul+1)^0,c
  6444  002392  0EFF               	movlw	255
  6445  002394  1410               	andwf	(___flmul@grs+2)^0,w,c
  6446  002396  6E0B               	movwf	(??___flmul+2)^0,c
  6447  002398  0E7F               	movlw	127
  6448  00239A  1411               	andwf	(___flmul@grs+3)^0,w,c
  6449  00239C  6E0C               	movwf	(??___flmul+3)^0,c
  6450  00239E  5009               	movf	??___flmul^0,w,c
  6451  0023A0  100A               	iorwf	(??___flmul+1)^0,w,c
  6452  0023A2  100B               	iorwf	(??___flmul+2)^0,w,c
  6453  0023A4  100C               	iorwf	(??___flmul+3)^0,w,c
  6454  0023A6  B4D8               	btfsc	status,2,c
  6455  0023A8  EFD8  F011         	goto	u3731
  6456  0023AC  EFDA  F011         	goto	u3730
  6457  0023B0                     u3731:
  6458  0023B0  EFDE  F011         	goto	l704
  6459  0023B4                     u3730:
  6460  0023B4                     l3412:
  6461  0023B4  0E01               	movlw	1
  6462  0023B6  6E12               	movwf	___flmul@aexp^0,c
  6463  0023B8  EFE7  F011         	goto	l703
  6464  0023BC                     l704:
  6465  0023BC  A014               	btfss	___flmul@prod^0,0,c
  6466  0023BE  EFE3  F011         	goto	u3741
  6467  0023C2  EFE5  F011         	goto	u3740
  6468  0023C6                     u3741:
  6469  0023C6  EFE7  F011         	goto	l703
  6470  0023CA                     u3740:
  6471  0023CA  EFDA  F011         	goto	l3412
  6472  0023CE                     l703:
  6473  0023CE  5012               	movf	___flmul@aexp^0,w,c
  6474  0023D0  B4D8               	btfsc	status,2,c
  6475  0023D2  EFED  F011         	goto	u3751
  6476  0023D6  EFEF  F011         	goto	u3750
  6477  0023DA                     u3751:
  6478  0023DA  EF13  F012         	goto	l3424
  6479  0023DE                     u3750:
  6480  0023DE  0E01               	movlw	1
  6481  0023E0  2614               	addwf	___flmul@prod^0,f,c
  6482  0023E2  0E00               	movlw	0
  6483  0023E4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6484  0023E6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6485  0023E8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6486  0023EA  A017               	btfss	(___flmul@prod+3)^0,0,c
  6487  0023EC  EFFA  F011         	goto	u3761
  6488  0023F0  EFFC  F011         	goto	u3760
  6489  0023F4                     u3761:
  6490  0023F4  EF13  F012         	goto	l3424
  6491  0023F8                     u3760:
  6492  0023F8  C014  F009         	movff	___flmul@prod,??___flmul
  6493  0023FC  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6494  002400  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6495  002404  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6496  002408  340C               	rlcf	(??___flmul+3)^0,w,c
  6497  00240A  320C               	rrcf	(??___flmul+3)^0,f,c
  6498  00240C  320B               	rrcf	(??___flmul+2)^0,f,c
  6499  00240E  320A               	rrcf	(??___flmul+1)^0,f,c
  6500  002410  3209               	rrcf	??___flmul^0,f,c
  6501  002412  C009  F014         	movff	??___flmul,___flmul@prod
  6502  002416  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6503  00241A  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6504  00241E  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6505  002422  4A18               	infsnz	___flmul@temp^0,f,c
  6506  002424  2A19               	incf	(___flmul@temp+1)^0,f,c
  6507  002426                     l3424:
  6508  002426  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6509  002428  EF1E  F012         	goto	u3771
  6510  00242C  5019               	movf	(___flmul@temp+1)^0,w,c
  6511  00242E  E108               	bnz	u3770
  6512  002430  2818               	incf	___flmul@temp^0,w,c
  6513  002432  A0D8               	btfss	status,0,c
  6514  002434  EF1E  F012         	goto	u3771
  6515  002438  EF20  F012         	goto	u3770
  6516  00243C                     u3771:
  6517  00243C  EF2A  F012         	goto	l3428
  6518  002440                     u3770:
  6519  002440  0E00               	movlw	0
  6520  002442  6E14               	movwf	___flmul@prod^0,c
  6521  002444  0E00               	movlw	0
  6522  002446  6E15               	movwf	(___flmul@prod+1)^0,c
  6523  002448  0E80               	movlw	128
  6524  00244A  6E16               	movwf	(___flmul@prod+2)^0,c
  6525  00244C  0E7F               	movlw	127
  6526  00244E  6E17               	movwf	(___flmul@prod+3)^0,c
  6527  002450  EF58  F012         	goto	l3440
  6528  002454                     l3428:
  6529  002454  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6530  002456  EF37  F012         	goto	u3780
  6531  00245A  5019               	movf	(___flmul@temp+1)^0,w,c
  6532  00245C  E106               	bnz	u3781
  6533  00245E  0418               	decf	___flmul@temp^0,w,c
  6534  002460  B0D8               	btfsc	status,0,c
  6535  002462  EF35  F012         	goto	u3781
  6536  002466  EF37  F012         	goto	u3780
  6537  00246A                     u3781:
  6538  00246A  EF43  F012         	goto	l711
  6539  00246E                     u3780:
  6540  00246E  0E00               	movlw	0
  6541  002470  6E14               	movwf	___flmul@prod^0,c
  6542  002472  0E00               	movlw	0
  6543  002474  6E15               	movwf	(___flmul@prod+1)^0,c
  6544  002476  0E00               	movlw	0
  6545  002478  6E16               	movwf	(___flmul@prod+2)^0,c
  6546  00247A  0E00               	movlw	0
  6547  00247C  6E17               	movwf	(___flmul@prod+3)^0,c
  6548  00247E  0E00               	movlw	0
  6549  002480  6E0D               	movwf	___flmul@sign^0,c
  6550  002482  EF58  F012         	goto	l3440
  6551  002486                     l711:
  6552  002486  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6553  00248A  0EFF               	movlw	255
  6554  00248C  1614               	andwf	___flmul@prod^0,f,c
  6555  00248E  0EFF               	movlw	255
  6556  002490  1615               	andwf	(___flmul@prod+1)^0,f,c
  6557  002492  0E7F               	movlw	127
  6558  002494  1616               	andwf	(___flmul@prod+2)^0,f,c
  6559  002496  0E00               	movlw	0
  6560  002498  1617               	andwf	(___flmul@prod+3)^0,f,c
  6561  00249A  A013               	btfss	___flmul@bexp^0,0,c
  6562  00249C  EF52  F012         	goto	u3791
  6563  0024A0  EF54  F012         	goto	u3790
  6564  0024A4                     u3791:
  6565  0024A4  EF55  F012         	goto	l3438
  6566  0024A8                     u3790:
  6567  0024A8  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6568  0024AA                     l3438:
  6569  0024AA  90D8               	bcf	status,0,c
  6570  0024AC  3013               	rrcf	___flmul@bexp^0,w,c
  6571  0024AE  6E17               	movwf	(___flmul@prod+3)^0,c
  6572  0024B0                     l3440:
  6573  0024B0  500D               	movf	___flmul@sign^0,w,c
  6574  0024B2  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6575  0024B4  C014  F001         	movff	___flmul@prod,?___flmul
  6576  0024B8  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6577  0024BC  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6578  0024C0  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6579  0024C4                     l698:
  6580  0024C4  0012               	return		;funcret
  6581  0024C6                     __end_of___flmul:
  6582                           	callstack 0
  6583                           
  6584 ;; *************** function ___flge *****************
  6585 ;; Defined at:
  6586 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  ff1             4   25[COMRAM] unsigned char 
  6589 ;;  ff2             4   29[COMRAM] unsigned char 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;		None               void
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6601 ;;      Params:         8       0       0       0       0       0       0       0       0
  6602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6603 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6604 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6605 ;;Total ram usage:       12 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_efgtoa
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text16
  6615  003544                     __ptext16:
  6616                           	callstack 0
  6617  003544                     ___flge:
  6618                           	callstack 26
  6619  003544  0E00               	movlw	0
  6620  003546  141A               	andwf	___flge@ff1^0,w,c
  6621  003548  6E22               	movwf	??___flge^0,c
  6622  00354A  0E00               	movlw	0
  6623  00354C  141B               	andwf	(___flge@ff1+1)^0,w,c
  6624  00354E  6E23               	movwf	(??___flge+1)^0,c
  6625  003550  0E80               	movlw	128
  6626  003552  141C               	andwf	(___flge@ff1+2)^0,w,c
  6627  003554  6E24               	movwf	(??___flge+2)^0,c
  6628  003556  0E7F               	movlw	127
  6629  003558  141D               	andwf	(___flge@ff1+3)^0,w,c
  6630  00355A  6E25               	movwf	(??___flge+3)^0,c
  6631  00355C  5022               	movf	??___flge^0,w,c
  6632  00355E  1023               	iorwf	(??___flge+1)^0,w,c
  6633  003560  1024               	iorwf	(??___flge+2)^0,w,c
  6634  003562  1025               	iorwf	(??___flge+3)^0,w,c
  6635  003564  A4D8               	btfss	status,2,c
  6636  003566  EFB7  F01A         	goto	u3951
  6637  00356A  EFB9  F01A         	goto	u3950
  6638  00356E                     u3951:
  6639  00356E  EFC1  F01A         	goto	l3552
  6640  003572                     u3950:
  6641  003572  0E00               	movlw	0
  6642  003574  6E1A               	movwf	___flge@ff1^0,c
  6643  003576  0E00               	movlw	0
  6644  003578  6E1B               	movwf	(___flge@ff1+1)^0,c
  6645  00357A  0E00               	movlw	0
  6646  00357C  6E1C               	movwf	(___flge@ff1+2)^0,c
  6647  00357E  0E00               	movlw	0
  6648  003580  6E1D               	movwf	(___flge@ff1+3)^0,c
  6649  003582                     l3552:
  6650  003582  0E00               	movlw	0
  6651  003584  141E               	andwf	___flge@ff2^0,w,c
  6652  003586  6E22               	movwf	??___flge^0,c
  6653  003588  0E00               	movlw	0
  6654  00358A  141F               	andwf	(___flge@ff2+1)^0,w,c
  6655  00358C  6E23               	movwf	(??___flge+1)^0,c
  6656  00358E  0E80               	movlw	128
  6657  003590  1420               	andwf	(___flge@ff2+2)^0,w,c
  6658  003592  6E24               	movwf	(??___flge+2)^0,c
  6659  003594  0E7F               	movlw	127
  6660  003596  1421               	andwf	(___flge@ff2+3)^0,w,c
  6661  003598  6E25               	movwf	(??___flge+3)^0,c
  6662  00359A  5022               	movf	??___flge^0,w,c
  6663  00359C  1023               	iorwf	(??___flge+1)^0,w,c
  6664  00359E  1024               	iorwf	(??___flge+2)^0,w,c
  6665  0035A0  1025               	iorwf	(??___flge+3)^0,w,c
  6666  0035A2  A4D8               	btfss	status,2,c
  6667  0035A4  EFD6  F01A         	goto	u3961
  6668  0035A8  EFD8  F01A         	goto	u3960
  6669  0035AC                     u3961:
  6670  0035AC  EFE0  F01A         	goto	l3556
  6671  0035B0                     u3960:
  6672  0035B0  0E00               	movlw	0
  6673  0035B2  6E1E               	movwf	___flge@ff2^0,c
  6674  0035B4  0E00               	movlw	0
  6675  0035B6  6E1F               	movwf	(___flge@ff2+1)^0,c
  6676  0035B8  0E00               	movlw	0
  6677  0035BA  6E20               	movwf	(___flge@ff2+2)^0,c
  6678  0035BC  0E00               	movlw	0
  6679  0035BE  6E21               	movwf	(___flge@ff2+3)^0,c
  6680  0035C0                     l3556:
  6681  0035C0  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6682  0035C2  EFE5  F01A         	goto	u3971
  6683  0035C6  EFE7  F01A         	goto	u3970
  6684  0035CA                     u3971:
  6685  0035CA  EFF0  F01A         	goto	l3560
  6686  0035CE                     u3970:
  6687  0035CE  6C1A               	negf	___flge@ff1^0,c
  6688  0035D0  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6689  0035D2  B0D8               	btfsc	status,0,c
  6690  0035D4  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6691  0035D6  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6692  0035D8  B0D8               	btfsc	status,0,c
  6693  0035DA  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6694  0035DC  0E80               	movlw	128
  6695  0035DE  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6696  0035E0                     l3560:
  6697  0035E0  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6698  0035E2  EFF5  F01A         	goto	u3981
  6699  0035E6  EFF7  F01A         	goto	u3980
  6700  0035EA                     u3981:
  6701  0035EA  EF00  F01B         	goto	l345
  6702  0035EE                     u3980:
  6703  0035EE  6C1E               	negf	___flge@ff2^0,c
  6704  0035F0  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6705  0035F2  B0D8               	btfsc	status,0,c
  6706  0035F4  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6707  0035F6  1E20               	comf	(___flge@ff2+2)^0,f,c
  6708  0035F8  B0D8               	btfsc	status,0,c
  6709  0035FA  2A20               	incf	(___flge@ff2+2)^0,f,c
  6710  0035FC  0E80               	movlw	128
  6711  0035FE  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6712  003600                     l345:
  6713  003600  0E00               	movlw	0
  6714  003602  1A1A               	xorwf	___flge@ff1^0,f,c
  6715  003604  0E00               	movlw	0
  6716  003606  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6717  003608  0E00               	movlw	0
  6718  00360A  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6719  00360C  0E80               	movlw	128
  6720  00360E  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6721  003610  0E00               	movlw	0
  6722  003612  1A1E               	xorwf	___flge@ff2^0,f,c
  6723  003614  0E00               	movlw	0
  6724  003616  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6725  003618  0E00               	movlw	0
  6726  00361A  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6727  00361C  0E80               	movlw	128
  6728  00361E  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6729  003620  501E               	movf	___flge@ff2^0,w,c
  6730  003622  5C1A               	subwf	___flge@ff1^0,w,c
  6731  003624  501F               	movf	(___flge@ff2+1)^0,w,c
  6732  003626  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6733  003628  5020               	movf	(___flge@ff2+2)^0,w,c
  6734  00362A  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6735  00362C  5021               	movf	(___flge@ff2+3)^0,w,c
  6736  00362E  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6737  003630  B0D8               	btfsc	status,0,c
  6738  003632  EF1D  F01B         	goto	u3991
  6739  003636  EF1F  F01B         	goto	u3990
  6740  00363A                     u3991:
  6741  00363A  EF22  F01B         	goto	l3566
  6742  00363E                     u3990:
  6743  00363E  90D8               	bcf	status,0,c
  6744  003640  EF23  F01B         	goto	l350
  6745  003644                     l3566:
  6746  003644  80D8               	bsf	status,0,c
  6747  003646                     l350:
  6748  003646  0012               	return		;funcret
  6749  003648                     __end_of___flge:
  6750                           	callstack 0
  6751                           
  6752 ;; *************** function ___fleq *****************
  6753 ;; Defined at:
  6754 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fleq.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  ff1             4    0[COMRAM] unsigned char 
  6757 ;;  ff2             4    4[COMRAM] unsigned char 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;		None
  6760 ;; Return value:  Size  Location     Type
  6761 ;;		None               void
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6769 ;;      Params:         8       0       0       0       0       0       0       0       0
  6770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6771 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6772 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6773 ;;Total ram usage:       12 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; This function calls:
  6776 ;;		Nothing
  6777 ;; This function is called by:
  6778 ;;		_efgtoa
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text17
  6783  003B20                     __ptext17:
  6784                           	callstack 0
  6785  003B20                     ___fleq:
  6786                           	callstack 26
  6787  003B20  0E00               	movlw	0
  6788  003B22  1401               	andwf	___fleq@ff1^0,w,c
  6789  003B24  6E09               	movwf	??___fleq^0,c
  6790  003B26  0E00               	movlw	0
  6791  003B28  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6792  003B2A  6E0A               	movwf	(??___fleq+1)^0,c
  6793  003B2C  0E80               	movlw	128
  6794  003B2E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6795  003B30  6E0B               	movwf	(??___fleq+2)^0,c
  6796  003B32  0E7F               	movlw	127
  6797  003B34  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6798  003B36  6E0C               	movwf	(??___fleq+3)^0,c
  6799  003B38  5009               	movf	??___fleq^0,w,c
  6800  003B3A  100A               	iorwf	(??___fleq+1)^0,w,c
  6801  003B3C  100B               	iorwf	(??___fleq+2)^0,w,c
  6802  003B3E  100C               	iorwf	(??___fleq+3)^0,w,c
  6803  003B40  A4D8               	btfss	status,2,c
  6804  003B42  EFA5  F01D         	goto	u3921
  6805  003B46  EFA7  F01D         	goto	u3920
  6806  003B4A                     u3921:
  6807  003B4A  EFAF  F01D         	goto	l3536
  6808  003B4E                     u3920:
  6809  003B4E  0E00               	movlw	0
  6810  003B50  6E01               	movwf	___fleq@ff1^0,c
  6811  003B52  0E00               	movlw	0
  6812  003B54  6E02               	movwf	(___fleq@ff1+1)^0,c
  6813  003B56  0E00               	movlw	0
  6814  003B58  6E03               	movwf	(___fleq@ff1+2)^0,c
  6815  003B5A  0E00               	movlw	0
  6816  003B5C  6E04               	movwf	(___fleq@ff1+3)^0,c
  6817  003B5E                     l3536:
  6818  003B5E  0E00               	movlw	0
  6819  003B60  1405               	andwf	___fleq@ff2^0,w,c
  6820  003B62  6E09               	movwf	??___fleq^0,c
  6821  003B64  0E00               	movlw	0
  6822  003B66  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6823  003B68  6E0A               	movwf	(??___fleq+1)^0,c
  6824  003B6A  0E80               	movlw	128
  6825  003B6C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6826  003B6E  6E0B               	movwf	(??___fleq+2)^0,c
  6827  003B70  0E7F               	movlw	127
  6828  003B72  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6829  003B74  6E0C               	movwf	(??___fleq+3)^0,c
  6830  003B76  5009               	movf	??___fleq^0,w,c
  6831  003B78  100A               	iorwf	(??___fleq+1)^0,w,c
  6832  003B7A  100B               	iorwf	(??___fleq+2)^0,w,c
  6833  003B7C  100C               	iorwf	(??___fleq+3)^0,w,c
  6834  003B7E  A4D8               	btfss	status,2,c
  6835  003B80  EFC4  F01D         	goto	u3931
  6836  003B84  EFC6  F01D         	goto	u3930
  6837  003B88                     u3931:
  6838  003B88  EFCE  F01D         	goto	l3540
  6839  003B8C                     u3930:
  6840  003B8C  0E00               	movlw	0
  6841  003B8E  6E05               	movwf	___fleq@ff2^0,c
  6842  003B90  0E00               	movlw	0
  6843  003B92  6E06               	movwf	(___fleq@ff2+1)^0,c
  6844  003B94  0E00               	movlw	0
  6845  003B96  6E07               	movwf	(___fleq@ff2+2)^0,c
  6846  003B98  0E00               	movlw	0
  6847  003B9A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6848  003B9C                     l3540:
  6849  003B9C  5005               	movf	___fleq@ff2^0,w,c
  6850  003B9E  1801               	xorwf	___fleq@ff1^0,w,c
  6851  003BA0  E10F               	bnz	u3940
  6852  003BA2  5006               	movf	(___fleq@ff2+1)^0,w,c
  6853  003BA4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6854  003BA6  E10C               	bnz	u3940
  6855  003BA8  5007               	movf	(___fleq@ff2+2)^0,w,c
  6856  003BAA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6857  003BAC  E109               	bnz	u3940
  6858  003BAE  5008               	movf	(___fleq@ff2+3)^0,w,c
  6859  003BB0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6860  003BB2  B4D8               	btfsc	status,2,c
  6861  003BB4  EFDE  F01D         	goto	u3941
  6862  003BB8  EFE0  F01D         	goto	u3940
  6863  003BBC                     u3941:
  6864  003BBC  EFE3  F01D         	goto	l3544
  6865  003BC0                     u3940:
  6866  003BC0  90D8               	bcf	status,0,c
  6867  003BC2  EFE4  F01D         	goto	l339
  6868  003BC6                     l3544:
  6869  003BC6  80D8               	bsf	status,0,c
  6870  003BC8                     l339:
  6871  003BC8  0012               	return		;funcret
  6872  003BCA                     __end_of___fleq:
  6873                           	callstack 0
  6874                           
  6875 ;; *************** function ___fldiv *****************
  6876 ;; Defined at:
  6877 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  b               4    0[COMRAM] unsigned char 
  6880 ;;  a               4    4[COMRAM] unsigned char 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  grs             4   19[COMRAM] unsigned long 
  6883 ;;  rem             4   12[COMRAM] unsigned long 
  6884 ;;  new_exp         2   17[COMRAM] short 
  6885 ;;  aexp            1   24[COMRAM] unsigned char 
  6886 ;;  bexp            1   23[COMRAM] unsigned char 
  6887 ;;  sign            1   16[COMRAM] unsigned char 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  4    0[COMRAM] unsigned char 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6897 ;;      Params:         8       0       0       0       0       0       0       0       0
  6898 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6899 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6900 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6901 ;;Total ram usage:       25 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_efgtoa
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text18
  6911  0024C6                     __ptext18:
  6912                           	callstack 0
  6913  0024C6                     ___fldiv:
  6914                           	callstack 26
  6915  0024C6  5004               	movf	(___fldiv@b+3)^0,w,c
  6916  0024C8  0B80               	andlw	128
  6917  0024CA  6E11               	movwf	___fldiv@sign^0,c
  6918  0024CC  5004               	movf	(___fldiv@b+3)^0,w,c
  6919  0024CE  2404               	addwf	(___fldiv@b+3)^0,w,c
  6920  0024D0  6E18               	movwf	___fldiv@bexp^0,c
  6921  0024D2  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6922  0024D4  EF6E  F012         	goto	u3381
  6923  0024D8  EF70  F012         	goto	u3380
  6924  0024DC                     u3381:
  6925  0024DC  EF71  F012         	goto	l3184
  6926  0024E0                     u3380:
  6927  0024E0  8018               	bsf	___fldiv@bexp^0,0,c
  6928  0024E2                     l3184:
  6929  0024E2  5018               	movf	___fldiv@bexp^0,w,c
  6930  0024E4  B4D8               	btfsc	status,2,c
  6931  0024E6  EF77  F012         	goto	u3391
  6932  0024EA  EF79  F012         	goto	u3390
  6933  0024EE                     u3391:
  6934  0024EE  EF8E  F012         	goto	l3194
  6935  0024F2                     u3390:
  6936  0024F2  2818               	incf	___fldiv@bexp^0,w,c
  6937  0024F4  A4D8               	btfss	status,2,c
  6938  0024F6  EF7F  F012         	goto	u3401
  6939  0024FA  EF81  F012         	goto	u3400
  6940  0024FE                     u3401:
  6941  0024FE  EF89  F012         	goto	l3190
  6942  002502                     u3400:
  6943  002502  0E00               	movlw	0
  6944  002504  6E01               	movwf	___fldiv@b^0,c
  6945  002506  0E00               	movlw	0
  6946  002508  6E02               	movwf	(___fldiv@b+1)^0,c
  6947  00250A  0E00               	movlw	0
  6948  00250C  6E03               	movwf	(___fldiv@b+2)^0,c
  6949  00250E  0E00               	movlw	0
  6950  002510  6E04               	movwf	(___fldiv@b+3)^0,c
  6951  002512                     l3190:
  6952  002512  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6953  002514  0E00               	movlw	0
  6954  002516  6E04               	movwf	(___fldiv@b+3)^0,c
  6955  002518  EF96  F012         	goto	l3196
  6956  00251C                     l3194:
  6957  00251C  0E00               	movlw	0
  6958  00251E  6E01               	movwf	___fldiv@b^0,c
  6959  002520  0E00               	movlw	0
  6960  002522  6E02               	movwf	(___fldiv@b+1)^0,c
  6961  002524  0E00               	movlw	0
  6962  002526  6E03               	movwf	(___fldiv@b+2)^0,c
  6963  002528  0E00               	movlw	0
  6964  00252A  6E04               	movwf	(___fldiv@b+3)^0,c
  6965  00252C                     l3196:
  6966  00252C  5008               	movf	(___fldiv@a+3)^0,w,c
  6967  00252E  0B80               	andlw	128
  6968  002530  1A11               	xorwf	___fldiv@sign^0,f,c
  6969  002532  5008               	movf	(___fldiv@a+3)^0,w,c
  6970  002534  2408               	addwf	(___fldiv@a+3)^0,w,c
  6971  002536  6E19               	movwf	___fldiv@aexp^0,c
  6972  002538  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6973  00253A  EFA1  F012         	goto	u3411
  6974  00253E  EFA3  F012         	goto	u3410
  6975  002542                     u3411:
  6976  002542  EFA4  F012         	goto	l3204
  6977  002546                     u3410:
  6978  002546  8019               	bsf	___fldiv@aexp^0,0,c
  6979  002548                     l3204:
  6980  002548  5019               	movf	___fldiv@aexp^0,w,c
  6981  00254A  B4D8               	btfsc	status,2,c
  6982  00254C  EFAA  F012         	goto	u3421
  6983  002550  EFAC  F012         	goto	u3420
  6984  002554                     u3421:
  6985  002554  EFC1  F012         	goto	l3214
  6986  002558                     u3420:
  6987  002558  2819               	incf	___fldiv@aexp^0,w,c
  6988  00255A  A4D8               	btfss	status,2,c
  6989  00255C  EFB2  F012         	goto	u3431
  6990  002560  EFB4  F012         	goto	u3430
  6991  002564                     u3431:
  6992  002564  EFBC  F012         	goto	l3210
  6993  002568                     u3430:
  6994  002568  0E00               	movlw	0
  6995  00256A  6E05               	movwf	___fldiv@a^0,c
  6996  00256C  0E00               	movlw	0
  6997  00256E  6E06               	movwf	(___fldiv@a+1)^0,c
  6998  002570  0E00               	movlw	0
  6999  002572  6E07               	movwf	(___fldiv@a+2)^0,c
  7000  002574  0E00               	movlw	0
  7001  002576  6E08               	movwf	(___fldiv@a+3)^0,c
  7002  002578                     l3210:
  7003  002578  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7004  00257A  0E00               	movlw	0
  7005  00257C  6E08               	movwf	(___fldiv@a+3)^0,c
  7006  00257E  EFC9  F012         	goto	l3216
  7007  002582                     l3214:
  7008  002582  0E00               	movlw	0
  7009  002584  6E05               	movwf	___fldiv@a^0,c
  7010  002586  0E00               	movlw	0
  7011  002588  6E06               	movwf	(___fldiv@a+1)^0,c
  7012  00258A  0E00               	movlw	0
  7013  00258C  6E07               	movwf	(___fldiv@a+2)^0,c
  7014  00258E  0E00               	movlw	0
  7015  002590  6E08               	movwf	(___fldiv@a+3)^0,c
  7016  002592                     l3216:
  7017  002592  5005               	movf	___fldiv@a^0,w,c
  7018  002594  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7019  002596  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7020  002598  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7021  00259A  A4D8               	btfss	status,2,c
  7022  00259C  EFD2  F012         	goto	u3441
  7023  0025A0  EFD4  F012         	goto	u3440
  7024  0025A4                     u3441:
  7025  0025A4  EFEC  F012         	goto	l3228
  7026  0025A8                     u3440:
  7027  0025A8  0E00               	movlw	0
  7028  0025AA  6E01               	movwf	___fldiv@b^0,c
  7029  0025AC  0E00               	movlw	0
  7030  0025AE  6E02               	movwf	(___fldiv@b+1)^0,c
  7031  0025B0  0E00               	movlw	0
  7032  0025B2  6E03               	movwf	(___fldiv@b+2)^0,c
  7033  0025B4  0E00               	movlw	0
  7034  0025B6  6E04               	movwf	(___fldiv@b+3)^0,c
  7035  0025B8  0E80               	movlw	128
  7036  0025BA  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7037  0025BC  0E7F               	movlw	127
  7038  0025BE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7039  0025C0                     l3222:
  7040  0025C0  5011               	movf	___fldiv@sign^0,w,c
  7041  0025C2  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7042  0025C4  C001  F001         	movff	___fldiv@b,?___fldiv
  7043  0025C8  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7044  0025CC  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7045  0025D0  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7046  0025D4  EF2F  F014         	goto	l662
  7047  0025D8                     l3228:
  7048  0025D8  5018               	movf	___fldiv@bexp^0,w,c
  7049  0025DA  A4D8               	btfss	status,2,c
  7050  0025DC  EFF2  F012         	goto	u3451
  7051  0025E0  EFF4  F012         	goto	u3450
  7052  0025E4                     u3451:
  7053  0025E4  EFFE  F012         	goto	l3236
  7054  0025E8                     u3450:
  7055  0025E8  0E00               	movlw	0
  7056  0025EA  6E01               	movwf	?___fldiv^0,c
  7057  0025EC  0E00               	movlw	0
  7058  0025EE  6E02               	movwf	(?___fldiv+1)^0,c
  7059  0025F0  0E00               	movlw	0
  7060  0025F2  6E03               	movwf	(?___fldiv+2)^0,c
  7061  0025F4  0E00               	movlw	0
  7062  0025F6  6E04               	movwf	(?___fldiv+3)^0,c
  7063  0025F8  EF2F  F014         	goto	l662
  7064  0025FC                     l3236:
  7065  0025FC  5019               	movf	___fldiv@aexp^0,w,c
  7066  0025FE  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7067  002602  6A0A               	clrf	(??___fldiv+1)^0,c
  7068  002604  5E09               	subwf	??___fldiv^0,f,c
  7069  002606  0E00               	movlw	0
  7070  002608  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7071  00260A  0E7F               	movlw	127
  7072  00260C  2409               	addwf	??___fldiv^0,w,c
  7073  00260E  6E12               	movwf	___fldiv@new_exp^0,c
  7074  002610  0E00               	movlw	0
  7075  002612  200A               	addwfc	(??___fldiv+1)^0,w,c
  7076  002614  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7077  002616  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7078  00261A  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7079  00261E  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7080  002622  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7081  002626  0E00               	movlw	0
  7082  002628  6E01               	movwf	___fldiv@b^0,c
  7083  00262A  0E00               	movlw	0
  7084  00262C  6E02               	movwf	(___fldiv@b+1)^0,c
  7085  00262E  0E00               	movlw	0
  7086  002630  6E03               	movwf	(___fldiv@b+2)^0,c
  7087  002632  0E00               	movlw	0
  7088  002634  6E04               	movwf	(___fldiv@b+3)^0,c
  7089  002636  0E00               	movlw	0
  7090  002638  6E14               	movwf	___fldiv@grs^0,c
  7091  00263A  0E00               	movlw	0
  7092  00263C  6E15               	movwf	(___fldiv@grs+1)^0,c
  7093  00263E  0E00               	movlw	0
  7094  002640  6E16               	movwf	(___fldiv@grs+2)^0,c
  7095  002642  0E00               	movlw	0
  7096  002644  6E17               	movwf	(___fldiv@grs+3)^0,c
  7097  002646  0E00               	movlw	0
  7098  002648  6E19               	movwf	___fldiv@aexp^0,c
  7099  00264A  EF5F  F013         	goto	l664
  7100  00264E                     l3246:
  7101  00264E  5019               	movf	___fldiv@aexp^0,w,c
  7102  002650  B4D8               	btfsc	status,2,c
  7103  002652  EF2D  F013         	goto	u3461
  7104  002656  EF2F  F013         	goto	u3460
  7105  00265A                     u3461:
  7106  00265A  EF46  F013         	goto	l3254
  7107  00265E                     u3460:
  7108  00265E  90D8               	bcf	status,0,c
  7109  002660  360D               	rlcf	___fldiv@rem^0,f,c
  7110  002662  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7111  002664  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7112  002666  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7113  002668  90D8               	bcf	status,0,c
  7114  00266A  3601               	rlcf	___fldiv@b^0,f,c
  7115  00266C  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7116  00266E  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7117  002670  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7118  002672  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7119  002674  EF3E  F013         	goto	u3471
  7120  002678  EF40  F013         	goto	u3470
  7121  00267C                     u3471:
  7122  00267C  EF41  F013         	goto	l667
  7123  002680                     u3470:
  7124  002680  8001               	bsf	___fldiv@b^0,0,c
  7125  002682                     l667:
  7126  002682  90D8               	bcf	status,0,c
  7127  002684  3614               	rlcf	___fldiv@grs^0,f,c
  7128  002686  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7129  002688  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7130  00268A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7131  00268C                     l3254:
  7132  00268C  5005               	movf	___fldiv@a^0,w,c
  7133  00268E  5C0D               	subwf	___fldiv@rem^0,w,c
  7134  002690  5006               	movf	(___fldiv@a+1)^0,w,c
  7135  002692  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7136  002694  5007               	movf	(___fldiv@a+2)^0,w,c
  7137  002696  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7138  002698  5008               	movf	(___fldiv@a+3)^0,w,c
  7139  00269A  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7140  00269C  A0D8               	btfss	status,0,c
  7141  00269E  EF53  F013         	goto	u3481
  7142  0026A2  EF55  F013         	goto	u3480
  7143  0026A6                     u3481:
  7144  0026A6  EF5E  F013         	goto	l3260
  7145  0026AA                     u3480:
  7146  0026AA  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7147  0026AC  5005               	movf	___fldiv@a^0,w,c
  7148  0026AE  5E0D               	subwf	___fldiv@rem^0,f,c
  7149  0026B0  5006               	movf	(___fldiv@a+1)^0,w,c
  7150  0026B2  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7151  0026B4  5007               	movf	(___fldiv@a+2)^0,w,c
  7152  0026B6  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7153  0026B8  5008               	movf	(___fldiv@a+3)^0,w,c
  7154  0026BA  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7155  0026BC                     l3260:
  7156  0026BC  2A19               	incf	___fldiv@aexp^0,f,c
  7157  0026BE                     l664:
  7158  0026BE  0E19               	movlw	25
  7159  0026C0  6419               	cpfsgt	___fldiv@aexp^0,c
  7160  0026C2  EF65  F013         	goto	u3491
  7161  0026C6  EF67  F013         	goto	u3490
  7162  0026CA                     u3491:
  7163  0026CA  EF27  F013         	goto	l3246
  7164  0026CE                     u3490:
  7165  0026CE  500D               	movf	___fldiv@rem^0,w,c
  7166  0026D0  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7167  0026D2  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7168  0026D4  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7169  0026D6  B4D8               	btfsc	status,2,c
  7170  0026D8  EF70  F013         	goto	u3501
  7171  0026DC  EF72  F013         	goto	u3500
  7172  0026E0                     u3501:
  7173  0026E0  EF8A  F013         	goto	l3272
  7174  0026E4                     u3500:
  7175  0026E4  8014               	bsf	___fldiv@grs^0,0,c
  7176  0026E6  EF8A  F013         	goto	l3272
  7177  0026EA                     l3266:
  7178  0026EA  90D8               	bcf	status,0,c
  7179  0026EC  3601               	rlcf	___fldiv@b^0,f,c
  7180  0026EE  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7181  0026F0  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7182  0026F2  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7183  0026F4  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7184  0026F6  EF7F  F013         	goto	u3511
  7185  0026FA  EF81  F013         	goto	u3510
  7186  0026FE                     u3511:
  7187  0026FE  EF82  F013         	goto	l673
  7188  002702                     u3510:
  7189  002702  8001               	bsf	___fldiv@b^0,0,c
  7190  002704                     l673:
  7191  002704  90D8               	bcf	status,0,c
  7192  002706  3614               	rlcf	___fldiv@grs^0,f,c
  7193  002708  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7194  00270A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7195  00270C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7196  00270E  0612               	decf	___fldiv@new_exp^0,f,c
  7197  002710  A0D8               	btfss	status,0,c
  7198  002712  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7199  002714                     l3272:
  7200  002714  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7201  002716  EF8F  F013         	goto	u3521
  7202  00271A  EF91  F013         	goto	u3520
  7203  00271E                     u3521:
  7204  00271E  EF75  F013         	goto	l3266
  7205  002722                     u3520:
  7206  002722  0E00               	movlw	0
  7207  002724  6E19               	movwf	___fldiv@aexp^0,c
  7208  002726  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7209  002728  EF98  F013         	goto	u3531
  7210  00272C  EF9A  F013         	goto	u3530
  7211  002730                     u3531:
  7212  002730  EFBE  F013         	goto	l675
  7213  002734                     u3530:
  7214  002734  0EFF               	movlw	255
  7215  002736  1414               	andwf	___fldiv@grs^0,w,c
  7216  002738  6E09               	movwf	??___fldiv^0,c
  7217  00273A  0EFF               	movlw	255
  7218  00273C  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7219  00273E  6E0A               	movwf	(??___fldiv+1)^0,c
  7220  002740  0EFF               	movlw	255
  7221  002742  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7222  002744  6E0B               	movwf	(??___fldiv+2)^0,c
  7223  002746  0E7F               	movlw	127
  7224  002748  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7225  00274A  6E0C               	movwf	(??___fldiv+3)^0,c
  7226  00274C  5009               	movf	??___fldiv^0,w,c
  7227  00274E  100A               	iorwf	(??___fldiv+1)^0,w,c
  7228  002750  100B               	iorwf	(??___fldiv+2)^0,w,c
  7229  002752  100C               	iorwf	(??___fldiv+3)^0,w,c
  7230  002754  B4D8               	btfsc	status,2,c
  7231  002756  EFAF  F013         	goto	u3541
  7232  00275A  EFB1  F013         	goto	u3540
  7233  00275E                     u3541:
  7234  00275E  EFB5  F013         	goto	l676
  7235  002762                     u3540:
  7236  002762                     l3280:
  7237  002762  0E01               	movlw	1
  7238  002764  6E19               	movwf	___fldiv@aexp^0,c
  7239  002766  EFBE  F013         	goto	l675
  7240  00276A                     l676:
  7241  00276A  A001               	btfss	___fldiv@b^0,0,c
  7242  00276C  EFBA  F013         	goto	u3551
  7243  002770  EFBC  F013         	goto	u3550
  7244  002774                     u3551:
  7245  002774  EFBE  F013         	goto	l675
  7246  002778                     u3550:
  7247  002778  EFB1  F013         	goto	l3280
  7248  00277C                     l675:
  7249  00277C  5019               	movf	___fldiv@aexp^0,w,c
  7250  00277E  B4D8               	btfsc	status,2,c
  7251  002780  EFC4  F013         	goto	u3561
  7252  002784  EFC6  F013         	goto	u3560
  7253  002788                     u3561:
  7254  002788  EFEA  F013         	goto	l3292
  7255  00278C                     u3560:
  7256  00278C  0E01               	movlw	1
  7257  00278E  2601               	addwf	___fldiv@b^0,f,c
  7258  002790  0E00               	movlw	0
  7259  002792  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7260  002794  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7261  002796  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7262  002798  A004               	btfss	(___fldiv@b+3)^0,0,c
  7263  00279A  EFD1  F013         	goto	u3571
  7264  00279E  EFD3  F013         	goto	u3570
  7265  0027A2                     u3571:
  7266  0027A2  EFEA  F013         	goto	l3292
  7267  0027A6                     u3570:
  7268  0027A6  C001  F009         	movff	___fldiv@b,??___fldiv
  7269  0027AA  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7270  0027AE  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7271  0027B2  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7272  0027B6  340C               	rlcf	(??___fldiv+3)^0,w,c
  7273  0027B8  320C               	rrcf	(??___fldiv+3)^0,f,c
  7274  0027BA  320B               	rrcf	(??___fldiv+2)^0,f,c
  7275  0027BC  320A               	rrcf	(??___fldiv+1)^0,f,c
  7276  0027BE  3209               	rrcf	??___fldiv^0,f,c
  7277  0027C0  C009  F001         	movff	??___fldiv,___fldiv@b
  7278  0027C4  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7279  0027C8  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7280  0027CC  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7281  0027D0  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7282  0027D2  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7283  0027D4                     l3292:
  7284  0027D4  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7285  0027D6  EFF5  F013         	goto	u3581
  7286  0027DA  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7287  0027DC  E108               	bnz	u3580
  7288  0027DE  2812               	incf	___fldiv@new_exp^0,w,c
  7289  0027E0  A0D8               	btfss	status,0,c
  7290  0027E2  EFF5  F013         	goto	u3581
  7291  0027E6  EFF7  F013         	goto	u3580
  7292  0027EA                     u3581:
  7293  0027EA  EF02  F014         	goto	l3296
  7294  0027EE                     u3580:
  7295  0027EE  0E00               	movlw	0
  7296  0027F0  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7297  0027F2  6812               	setf	___fldiv@new_exp^0,c
  7298  0027F4  0E00               	movlw	0
  7299  0027F6  6E01               	movwf	___fldiv@b^0,c
  7300  0027F8  0E00               	movlw	0
  7301  0027FA  6E02               	movwf	(___fldiv@b+1)^0,c
  7302  0027FC  0E00               	movlw	0
  7303  0027FE  6E03               	movwf	(___fldiv@b+2)^0,c
  7304  002800  0E00               	movlw	0
  7305  002802  6E04               	movwf	(___fldiv@b+3)^0,c
  7306  002804                     l3296:
  7307  002804  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7308  002806  EF0F  F014         	goto	u3590
  7309  00280A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7310  00280C  E106               	bnz	u3591
  7311  00280E  0412               	decf	___fldiv@new_exp^0,w,c
  7312  002810  B0D8               	btfsc	status,0,c
  7313  002812  EF0D  F014         	goto	u3591
  7314  002816  EF0F  F014         	goto	u3590
  7315  00281A                     u3591:
  7316  00281A  EF1D  F014         	goto	l3300
  7317  00281E                     u3590:
  7318  00281E  0E00               	movlw	0
  7319  002820  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7320  002822  0E00               	movlw	0
  7321  002824  6E12               	movwf	___fldiv@new_exp^0,c
  7322  002826  0E00               	movlw	0
  7323  002828  6E01               	movwf	___fldiv@b^0,c
  7324  00282A  0E00               	movlw	0
  7325  00282C  6E02               	movwf	(___fldiv@b+1)^0,c
  7326  00282E  0E00               	movlw	0
  7327  002830  6E03               	movwf	(___fldiv@b+2)^0,c
  7328  002832  0E00               	movlw	0
  7329  002834  6E04               	movwf	(___fldiv@b+3)^0,c
  7330  002836  0E00               	movlw	0
  7331  002838  6E11               	movwf	___fldiv@sign^0,c
  7332  00283A                     l3300:
  7333  00283A  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7334  00283E  A018               	btfss	___fldiv@bexp^0,0,c
  7335  002840  EF24  F014         	goto	u3601
  7336  002844  EF26  F014         	goto	u3600
  7337  002848                     u3601:
  7338  002848  EF29  F014         	goto	l3306
  7339  00284C                     u3600:
  7340  00284C  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7341  00284E  EF2A  F014         	goto	l3308
  7342  002852                     l3306:
  7343  002852  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7344  002854                     l3308:
  7345  002854  90D8               	bcf	status,0,c
  7346  002856  3018               	rrcf	___fldiv@bexp^0,w,c
  7347  002858  6E04               	movwf	(___fldiv@b+3)^0,c
  7348  00285A  EFE0  F012         	goto	l3222
  7349  00285E                     l662:
  7350  00285E  0012               	return		;funcret
  7351  002860                     __end_of___fldiv:
  7352                           	callstack 0
  7353                           
  7354 ;; *************** function ___awmod *****************
  7355 ;; Defined at:
  7356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  dividend        2    0[COMRAM] int 
  7359 ;;  divisor         2    2[COMRAM] int 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  sign            1    5[COMRAM] unsigned char 
  7362 ;;  counter         1    4[COMRAM] unsigned char 
  7363 ;; Return value:  Size  Location     Type
  7364 ;;                  2    0[COMRAM] int 
  7365 ;; Registers used:
  7366 ;;		wreg, status,2, status,0
  7367 ;; Tracked objects:
  7368 ;;		On entry : 0/0
  7369 ;;		On exit  : 0/0
  7370 ;;		Unchanged: 0/0
  7371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7372 ;;      Params:         4       0       0       0       0       0       0       0       0
  7373 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7375 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7376 ;;Total ram usage:        6 bytes
  7377 ;; Hardware stack levels used:    1
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_efgtoa
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text19
  7386  003A70                     __ptext19:
  7387                           	callstack 0
  7388  003A70                     ___awmod:
  7389                           	callstack 26
  7390  003A70  0E00               	movlw	0
  7391  003A72  6E06               	movwf	___awmod@sign^0,c
  7392  003A74  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7393  003A76  EF41  F01D         	goto	u3860
  7394  003A7A  EF3F  F01D         	goto	u3861
  7395  003A7E                     u3861:
  7396  003A7E  EF47  F01D         	goto	l3504
  7397  003A82                     u3860:
  7398  003A82  6C01               	negf	___awmod@dividend^0,c
  7399  003A84  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7400  003A86  B0D8               	btfsc	status,0,c
  7401  003A88  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7402  003A8A  0E01               	movlw	1
  7403  003A8C  6E06               	movwf	___awmod@sign^0,c
  7404  003A8E                     l3504:
  7405  003A8E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7406  003A90  EF4E  F01D         	goto	u3870
  7407  003A94  EF4C  F01D         	goto	u3871
  7408  003A98                     u3871:
  7409  003A98  EF52  F01D         	goto	l3508
  7410  003A9C                     u3870:
  7411  003A9C  6C03               	negf	___awmod@divisor^0,c
  7412  003A9E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7413  003AA0  B0D8               	btfsc	status,0,c
  7414  003AA2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7415  003AA4                     l3508:
  7416  003AA4  5003               	movf	___awmod@divisor^0,w,c
  7417  003AA6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7418  003AA8  B4D8               	btfsc	status,2,c
  7419  003AAA  EF59  F01D         	goto	u3881
  7420  003AAE  EF5B  F01D         	goto	u3880
  7421  003AB2                     u3881:
  7422  003AB2  EF7F  F01D         	goto	l3524
  7423  003AB6                     u3880:
  7424  003AB6  0E01               	movlw	1
  7425  003AB8  6E05               	movwf	___awmod@counter^0,c
  7426  003ABA  EF63  F01D         	goto	l3514
  7427  003ABE                     l3512:
  7428  003ABE  90D8               	bcf	status,0,c
  7429  003AC0  3603               	rlcf	___awmod@divisor^0,f,c
  7430  003AC2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7431  003AC4  2A05               	incf	___awmod@counter^0,f,c
  7432  003AC6                     l3514:
  7433  003AC6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7434  003AC8  EF68  F01D         	goto	u3891
  7435  003ACC  EF6A  F01D         	goto	u3890
  7436  003AD0                     u3891:
  7437  003AD0  EF5F  F01D         	goto	l3512
  7438  003AD4                     u3890:
  7439  003AD4                     l3516:
  7440  003AD4  5003               	movf	___awmod@divisor^0,w,c
  7441  003AD6  5C01               	subwf	___awmod@dividend^0,w,c
  7442  003AD8  5004               	movf	(___awmod@divisor+1)^0,w,c
  7443  003ADA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7444  003ADC  A0D8               	btfss	status,0,c
  7445  003ADE  EF73  F01D         	goto	u3901
  7446  003AE2  EF75  F01D         	goto	u3900
  7447  003AE6                     u3901:
  7448  003AE6  EF79  F01D         	goto	l3520
  7449  003AEA                     u3900:
  7450  003AEA  5003               	movf	___awmod@divisor^0,w,c
  7451  003AEC  5E01               	subwf	___awmod@dividend^0,f,c
  7452  003AEE  5004               	movf	(___awmod@divisor+1)^0,w,c
  7453  003AF0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7454  003AF2                     l3520:
  7455  003AF2  90D8               	bcf	status,0,c
  7456  003AF4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7457  003AF6  3203               	rrcf	___awmod@divisor^0,f,c
  7458  003AF8  2E05               	decfsz	___awmod@counter^0,f,c
  7459  003AFA  EF6A  F01D         	goto	l3516
  7460  003AFE                     l3524:
  7461  003AFE  5006               	movf	___awmod@sign^0,w,c
  7462  003B00  B4D8               	btfsc	status,2,c
  7463  003B02  EF85  F01D         	goto	u3911
  7464  003B06  EF87  F01D         	goto	u3910
  7465  003B0A                     u3911:
  7466  003B0A  EF8B  F01D         	goto	l3528
  7467  003B0E                     u3910:
  7468  003B0E  6C01               	negf	___awmod@dividend^0,c
  7469  003B10  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7470  003B12  B0D8               	btfsc	status,0,c
  7471  003B14  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7472  003B16                     l3528:
  7473  003B16  C001  F001         	movff	___awmod@dividend,?___awmod
  7474  003B1A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7475  003B1E  0012               	return		;funcret
  7476  003B20                     __end_of___awmod:
  7477                           	callstack 0
  7478                           
  7479 ;; *************** function ___awdiv *****************
  7480 ;; Defined at:
  7481 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  dividend        2    0[COMRAM] int 
  7484 ;;  divisor         2    2[COMRAM] int 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  quotient        2    6[COMRAM] int 
  7487 ;;  sign            1    5[COMRAM] unsigned char 
  7488 ;;  counter         1    4[COMRAM] unsigned char 
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  2    0[COMRAM] int 
  7491 ;; Registers used:
  7492 ;;		wreg, status,2, status,0
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7498 ;;      Params:         4       0       0       0       0       0       0       0       0
  7499 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7501 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7502 ;;Total ram usage:        8 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_efgtoa
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text20
  7512  0039AC                     __ptext20:
  7513                           	callstack 0
  7514  0039AC                     ___awdiv:
  7515                           	callstack 26
  7516  0039AC  0E00               	movlw	0
  7517  0039AE  6E06               	movwf	___awdiv@sign^0,c
  7518  0039B0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7519  0039B2  EFDF  F01C         	goto	u3800
  7520  0039B6  EFDD  F01C         	goto	u3801
  7521  0039BA                     u3801:
  7522  0039BA  EFE5  F01C         	goto	l3460
  7523  0039BE                     u3800:
  7524  0039BE  6C03               	negf	___awdiv@divisor^0,c
  7525  0039C0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7526  0039C2  B0D8               	btfsc	status,0,c
  7527  0039C4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7528  0039C6  0E01               	movlw	1
  7529  0039C8  6E06               	movwf	___awdiv@sign^0,c
  7530  0039CA                     l3460:
  7531  0039CA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7532  0039CC  EFEC  F01C         	goto	u3810
  7533  0039D0  EFEA  F01C         	goto	u3811
  7534  0039D4                     u3811:
  7535  0039D4  EFF2  F01C         	goto	l3466
  7536  0039D8                     u3810:
  7537  0039D8  6C01               	negf	___awdiv@dividend^0,c
  7538  0039DA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7539  0039DC  B0D8               	btfsc	status,0,c
  7540  0039DE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7541  0039E0  0E01               	movlw	1
  7542  0039E2  1A06               	xorwf	___awdiv@sign^0,f,c
  7543  0039E4                     l3466:
  7544  0039E4  0E00               	movlw	0
  7545  0039E6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7546  0039E8  0E00               	movlw	0
  7547  0039EA  6E07               	movwf	___awdiv@quotient^0,c
  7548  0039EC  5003               	movf	___awdiv@divisor^0,w,c
  7549  0039EE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7550  0039F0  B4D8               	btfsc	status,2,c
  7551  0039F2  EFFD  F01C         	goto	u3821
  7552  0039F6  EFFF  F01C         	goto	u3820
  7553  0039FA                     u3821:
  7554  0039FA  EF27  F01D         	goto	l3488
  7555  0039FE                     u3820:
  7556  0039FE  0E01               	movlw	1
  7557  003A00  6E05               	movwf	___awdiv@counter^0,c
  7558  003A02  EF07  F01D         	goto	l3474
  7559  003A06                     l3472:
  7560  003A06  90D8               	bcf	status,0,c
  7561  003A08  3603               	rlcf	___awdiv@divisor^0,f,c
  7562  003A0A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7563  003A0C  2A05               	incf	___awdiv@counter^0,f,c
  7564  003A0E                     l3474:
  7565  003A0E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7566  003A10  EF0C  F01D         	goto	u3831
  7567  003A14  EF0E  F01D         	goto	u3830
  7568  003A18                     u3831:
  7569  003A18  EF03  F01D         	goto	l3472
  7570  003A1C                     u3830:
  7571  003A1C                     l3476:
  7572  003A1C  90D8               	bcf	status,0,c
  7573  003A1E  3607               	rlcf	___awdiv@quotient^0,f,c
  7574  003A20  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7575  003A22  5003               	movf	___awdiv@divisor^0,w,c
  7576  003A24  5C01               	subwf	___awdiv@dividend^0,w,c
  7577  003A26  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7578  003A28  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7579  003A2A  A0D8               	btfss	status,0,c
  7580  003A2C  EF1A  F01D         	goto	u3841
  7581  003A30  EF1C  F01D         	goto	u3840
  7582  003A34                     u3841:
  7583  003A34  EF21  F01D         	goto	l3484
  7584  003A38                     u3840:
  7585  003A38  5003               	movf	___awdiv@divisor^0,w,c
  7586  003A3A  5E01               	subwf	___awdiv@dividend^0,f,c
  7587  003A3C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7588  003A3E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7589  003A40  8007               	bsf	___awdiv@quotient^0,0,c
  7590  003A42                     l3484:
  7591  003A42  90D8               	bcf	status,0,c
  7592  003A44  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7593  003A46  3203               	rrcf	___awdiv@divisor^0,f,c
  7594  003A48  2E05               	decfsz	___awdiv@counter^0,f,c
  7595  003A4A  EF0E  F01D         	goto	l3476
  7596  003A4E                     l3488:
  7597  003A4E  5006               	movf	___awdiv@sign^0,w,c
  7598  003A50  B4D8               	btfsc	status,2,c
  7599  003A52  EF2D  F01D         	goto	u3851
  7600  003A56  EF2F  F01D         	goto	u3850
  7601  003A5A                     u3851:
  7602  003A5A  EF33  F01D         	goto	l3492
  7603  003A5E                     u3850:
  7604  003A5E  6C07               	negf	___awdiv@quotient^0,c
  7605  003A60  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7606  003A62  B0D8               	btfsc	status,0,c
  7607  003A64  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7608  003A66                     l3492:
  7609  003A66  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7610  003A6A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7611  003A6E  0012               	return		;funcret
  7612  003A70                     __end_of___awdiv:
  7613                           	callstack 0
  7614                           
  7615 ;; *************** function _dtoa *****************
  7616 ;; Defined at:
  7617 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7620 ;;		 -> sprintf@f(6), 
  7621 ;;  d               8   29[COMRAM] long long 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  n               8   53[COMRAM] long long 
  7624 ;;  i               2   61[COMRAM] int 
  7625 ;;  s               2   51[COMRAM] int 
  7626 ;;  w               2   49[COMRAM] int 
  7627 ;;  p               2   47[COMRAM] int 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  2   27[COMRAM] int 
  7630 ;; Registers used:
  7631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7637 ;;      Params:        10       0       0       0       0       0       0       0       0
  7638 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7639 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7640 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7641 ;;Total ram usage:       36 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:    4
  7644 ;; This function calls:
  7645 ;;		___aodiv
  7646 ;;		___aomod
  7647 ;;		_abs
  7648 ;;		_pad
  7649 ;; This function is called by:
  7650 ;;		_vfpfcnvrt
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text21
  7655  002860                     __ptext21:
  7656                           	callstack 0
  7657  002860                     _dtoa:
  7658                           	callstack 23
  7659  002860                     
  7660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7661  002860  C01E  F036         	movff	dtoa@d,dtoa@n
  7662  002864  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7663  002868  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7664  00286C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7665  002870  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7666  002874  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7667  002878  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7668  00287C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7669  002880                     
  7670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7671  002880  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7672  002882  EF45  F014         	goto	u4391
  7673  002886  EF48  F014         	goto	u4390
  7674  00288A                     u4391:
  7675  00288A  0E01               	movlw	1
  7676  00288C  EF49  F014         	goto	u4400
  7677  002890                     u4390:
  7678  002890  0E00               	movlw	0
  7679  002892                     u4400:
  7680  002892  6E34               	movwf	dtoa@s^0,c
  7681  002894  6A35               	clrf	(dtoa@s+1)^0,c
  7682                           
  7683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7684  002896  5034               	movf	dtoa@s^0,w,c
  7685  002898  1035               	iorwf	(dtoa@s+1)^0,w,c
  7686  00289A  B4D8               	btfsc	status,2,c
  7687  00289C  EF52  F014         	goto	u4411
  7688  0028A0  EF54  F014         	goto	u4410
  7689  0028A4                     u4411:
  7690  0028A4  EF64  F014         	goto	l3734
  7691  0028A8                     u4410:
  7692  0028A8                     
  7693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7694  0028A8  1E3D               	comf	(dtoa@n+7)^0,f,c
  7695  0028AA  1E3C               	comf	(dtoa@n+6)^0,f,c
  7696  0028AC  1E3B               	comf	(dtoa@n+5)^0,f,c
  7697  0028AE  1E3A               	comf	(dtoa@n+4)^0,f,c
  7698  0028B0  1E39               	comf	(dtoa@n+3)^0,f,c
  7699  0028B2  1E38               	comf	(dtoa@n+2)^0,f,c
  7700  0028B4  1E37               	comf	(dtoa@n+1)^0,f,c
  7701  0028B6  6C36               	negf	dtoa@n^0,c
  7702  0028B8  0E00               	movlw	0
  7703  0028BA  2237               	addwfc	(dtoa@n+1)^0,f,c
  7704  0028BC  2238               	addwfc	(dtoa@n+2)^0,f,c
  7705  0028BE  2239               	addwfc	(dtoa@n+3)^0,f,c
  7706  0028C0  223A               	addwfc	(dtoa@n+4)^0,f,c
  7707  0028C2  223B               	addwfc	(dtoa@n+5)^0,f,c
  7708  0028C4  223C               	addwfc	(dtoa@n+6)^0,f,c
  7709  0028C6  223D               	addwfc	(dtoa@n+7)^0,f,c
  7710  0028C8                     l3734:
  7711                           
  7712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7713  0028C8  0100               	movlb	0	; () banked
  7714  0028CA  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  7715  0028CC  EF6A  F014         	goto	u4421
  7716  0028D0  EF6C  F014         	goto	u4420
  7717  0028D4                     u4421:
  7718  0028D4  EF6D  F014         	goto	l3738
  7719  0028D8                     u4420:
  7720  0028D8                     
  7721                           ; BSR set to: 0
  7722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7723  0028D8  93C6               	bcf	_flags& (0+255),1,b
  7724  0028DA                     l3738:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7728  0028DA  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  7729  0028DC  EF7A  F014         	goto	u4430
  7730  0028E0  51C5               	movf	(_prec+1)& (0+255),w,b
  7731  0028E2  E106               	bnz	u4431
  7732  0028E4  05C4               	decf	_prec& (0+255),w,b
  7733  0028E6  B0D8               	btfsc	status,0,c
  7734  0028E8  EF78  F014         	goto	u4431
  7735  0028EC  EF7A  F014         	goto	u4430
  7736  0028F0                     u4431:
  7737  0028F0  EF80  F014         	goto	l812
  7738  0028F4                     u4430:
  7739  0028F4                     
  7740                           ; BSR set to: 0
  7741  0028F4  0E00               	movlw	0
  7742  0028F6  6E31               	movwf	(dtoa@p+1)^0,c
  7743  0028F8  0E01               	movlw	1
  7744  0028FA  6E30               	movwf	dtoa@p^0,c
  7745  0028FC  EF84  F014         	goto	l814
  7746  002900                     l812:
  7747                           
  7748                           ; BSR set to: 0
  7749  002900  C0C4  F030         	movff	_prec,dtoa@p
  7750  002904  C0C5  F031         	movff	_prec+1,dtoa@p+1
  7751  002908                     l814:
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7755  002908  C0C2  F032         	movff	_width,dtoa@w
  7756  00290C  C0C3  F033         	movff	_width+1,dtoa@w+1
  7757  002910                     
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7760  002910  5034               	movf	dtoa@s^0,w,c
  7761  002912  1035               	iorwf	(dtoa@s+1)^0,w,c
  7762  002914  A4D8               	btfss	status,2,c
  7763  002916  EF8F  F014         	goto	u4441
  7764  00291A  EF91  F014         	goto	u4440
  7765  00291E                     u4441:
  7766  00291E  EF98  F014         	goto	l3746
  7767  002922                     u4440:
  7768  002922                     
  7769                           ; BSR set to: 0
  7770  002922  A5C6               	btfss	_flags& (0+255),2,b
  7771  002924  EF96  F014         	goto	u4451
  7772  002928  EF98  F014         	goto	u4450
  7773  00292C                     u4451:
  7774  00292C  EF9B  F014         	goto	l3748
  7775  002930                     u4450:
  7776  002930                     l3746:
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  7780  002930  0632               	decf	dtoa@w^0,f,c
  7781  002932  A0D8               	btfss	status,0,c
  7782  002934  0633               	decf	(dtoa@w+1)^0,f,c
  7783  002936                     l3748:
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7787  002936  0E00               	movlw	0
  7788  002938  6E3F               	movwf	(dtoa@i+1)^0,c
  7789  00293A  0E4F               	movlw	79
  7790  00293C  6E3E               	movwf	dtoa@i^0,c
  7791  00293E                     
  7792                           ; BSR set to: 0
  7793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7794  00293E  0E00               	movlw	0
  7795  002940  0101               	movlb	1	; () banked
  7796  002942  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7797                           
  7798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7799  002944  EF20  F015         	goto	l3762
  7800  002948                     l3752:
  7801                           
  7802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  7803  002948  063E               	decf	dtoa@i^0,f,c
  7804  00294A  A0D8               	btfss	status,0,c
  7805  00294C  063F               	decf	(dtoa@i+1)^0,f,c
  7806  00294E                     
  7807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7808  00294E  0E00               	movlw	low _dbuf
  7809  002950  243E               	addwf	dtoa@i^0,w,c
  7810  002952  6ED9               	movwf	fsr2l,c
  7811  002954  0E01               	movlw	high _dbuf
  7812  002956  203F               	addwfc	(dtoa@i+1)^0,w,c
  7813  002958  6EDA               	movwf	fsr2h,c
  7814  00295A  C036  F001         	movff	dtoa@n,___aomod@dividend
  7815  00295E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7816  002962  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7817  002966  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7818  00296A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7819  00296E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7820  002972  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7821  002976  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7822  00297A  0E0A               	movlw	10
  7823  00297C  6E09               	movwf	___aomod@divisor^0,c
  7824  00297E  0E00               	movlw	0
  7825  002980  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7826  002982  0E00               	movlw	0
  7827  002984  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7828  002986  0E00               	movlw	0
  7829  002988  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7830  00298A  0E00               	movlw	0
  7831  00298C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7832  00298E  0E00               	movlw	0
  7833  002990  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7834  002992  0E00               	movlw	0
  7835  002994  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7836  002996  0E00               	movlw	0
  7837  002998  6E10               	movwf	(___aomod@divisor+7)^0,c
  7838  00299A  EC6D  F019         	call	___aomod	;wreg free
  7839  00299E  C001  F026         	movff	?___aomod,??_dtoa
  7840  0029A2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7841  0029A6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7842  0029AA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7843  0029AE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7844  0029B2  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7845  0029B6  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7846  0029BA  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7847  0029BE  C026  F013         	movff	??_dtoa,abs@a
  7848  0029C2  C028  F014         	movff	??_dtoa+2,abs@a+1
  7849  0029C6  EC03  F020         	call	_abs	;wreg free
  7850  0029CA  5013               	movf	?_abs^0,w,c
  7851  0029CC  0F30               	addlw	48
  7852  0029CE  6EDF               	movwf	indf2,c
  7853  0029D0                     
  7854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  7855  0029D0  0630               	decf	dtoa@p^0,f,c
  7856  0029D2  A0D8               	btfss	status,0,c
  7857  0029D4  0631               	decf	(dtoa@p+1)^0,f,c
  7858  0029D6                     
  7859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  7860  0029D6  0632               	decf	dtoa@w^0,f,c
  7861  0029D8  A0D8               	btfss	status,0,c
  7862  0029DA  0633               	decf	(dtoa@w+1)^0,f,c
  7863  0029DC                     
  7864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7865  0029DC  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7866  0029E0  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7867  0029E4  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7868  0029E8  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7869  0029EC  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7870  0029F0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7871  0029F4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7872  0029F8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7873  0029FC  0E0A               	movlw	10
  7874  0029FE  6E09               	movwf	___aodiv@divisor^0,c
  7875  002A00  0E00               	movlw	0
  7876  002A02  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7877  002A04  0E00               	movlw	0
  7878  002A06  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7879  002A08  0E00               	movlw	0
  7880  002A0A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7881  002A0C  0E00               	movlw	0
  7882  002A0E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7883  002A10  0E00               	movlw	0
  7884  002A12  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7885  002A14  0E00               	movlw	0
  7886  002A16  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7887  002A18  0E00               	movlw	0
  7888  002A1A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7889  002A1C  ECA9  F018         	call	___aodiv	;wreg free
  7890  002A20  C001  F036         	movff	?___aodiv,dtoa@n
  7891  002A24  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7892  002A28  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7893  002A2C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7894  002A30  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7895  002A34  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7896  002A38  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7897  002A3C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7898  002A40                     l3762:
  7899                           
  7900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7901  002A40  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7902  002A42  EF2B  F015         	goto	u4461
  7903  002A46  503F               	movf	(dtoa@i+1)^0,w,c
  7904  002A48  E108               	bnz	u4460
  7905  002A4A  043E               	decf	dtoa@i^0,w,c
  7906  002A4C  A0D8               	btfss	status,0,c
  7907  002A4E  EF2B  F015         	goto	u4461
  7908  002A52  EF2D  F015         	goto	u4460
  7909  002A56                     u4461:
  7910  002A56  EF5E  F015         	goto	l3772
  7911  002A5A                     u4460:
  7912  002A5A  5036               	movf	dtoa@n^0,w,c
  7913  002A5C  1037               	iorwf	(dtoa@n+1)^0,w,c
  7914  002A5E  1038               	iorwf	(dtoa@n+2)^0,w,c
  7915  002A60  1039               	iorwf	(dtoa@n+3)^0,w,c
  7916  002A62  103A               	iorwf	(dtoa@n+4)^0,w,c
  7917  002A64  103B               	iorwf	(dtoa@n+5)^0,w,c
  7918  002A66  103C               	iorwf	(dtoa@n+6)^0,w,c
  7919  002A68  103D               	iorwf	(dtoa@n+7)^0,w,c
  7920  002A6A  A4D8               	btfss	status,2,c
  7921  002A6C  EF3A  F015         	goto	u4471
  7922  002A70  EF3C  F015         	goto	u4470
  7923  002A74                     u4471:
  7924  002A74  EFA4  F014         	goto	l3752
  7925  002A78                     u4470:
  7926  002A78  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7927  002A7A  EF49  F015         	goto	u4480
  7928  002A7E  5031               	movf	(dtoa@p+1)^0,w,c
  7929  002A80  E106               	bnz	u4481
  7930  002A82  0430               	decf	dtoa@p^0,w,c
  7931  002A84  B0D8               	btfsc	status,0,c
  7932  002A86  EF47  F015         	goto	u4481
  7933  002A8A  EF49  F015         	goto	u4480
  7934  002A8E                     u4481:
  7935  002A8E  EFA4  F014         	goto	l3752
  7936  002A92                     u4480:
  7937  002A92  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7938  002A94  EF54  F015         	goto	u4491
  7939  002A98  5033               	movf	(dtoa@w+1)^0,w,c
  7940  002A9A  E108               	bnz	u4490
  7941  002A9C  0432               	decf	dtoa@w^0,w,c
  7942  002A9E  A0D8               	btfss	status,0,c
  7943  002AA0  EF54  F015         	goto	u4491
  7944  002AA4  EF56  F015         	goto	u4490
  7945  002AA8                     u4491:
  7946  002AA8  EF5E  F015         	goto	l3772
  7947  002AAC                     u4490:
  7948  002AAC  0100               	movlb	0	; () banked
  7949  002AAE  B3C6               	btfsc	_flags& (0+255),1,b
  7950  002AB0  EF5C  F015         	goto	u4501
  7951  002AB4  EF5E  F015         	goto	u4500
  7952  002AB8                     u4501:
  7953  002AB8  EFA4  F014         	goto	l3752
  7954  002ABC                     u4500:
  7955  002ABC                     l3772:
  7956                           
  7957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7958  002ABC  5034               	movf	dtoa@s^0,w,c
  7959  002ABE  1035               	iorwf	(dtoa@s+1)^0,w,c
  7960  002AC0  A4D8               	btfss	status,2,c
  7961  002AC2  EF65  F015         	goto	u4511
  7962  002AC6  EF67  F015         	goto	u4510
  7963  002ACA                     u4511:
  7964  002ACA  EF6F  F015         	goto	l3776
  7965  002ACE                     u4510:
  7966  002ACE  0100               	movlb	0	; () banked
  7967  002AD0  A5C6               	btfss	_flags& (0+255),2,b
  7968  002AD2  EF6D  F015         	goto	u4521
  7969  002AD6  EF6F  F015         	goto	u4520
  7970  002ADA                     u4521:
  7971  002ADA  EF8D  F015         	goto	l3786
  7972  002ADE                     u4520:
  7973  002ADE                     l3776:
  7974                           
  7975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  7976  002ADE  063E               	decf	dtoa@i^0,f,c
  7977  002AE0  A0D8               	btfss	status,0,c
  7978  002AE2  063F               	decf	(dtoa@i+1)^0,f,c
  7979  002AE4                     
  7980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7981  002AE4  5034               	movf	dtoa@s^0,w,c
  7982  002AE6  1035               	iorwf	(dtoa@s+1)^0,w,c
  7983  002AE8  A4D8               	btfss	status,2,c
  7984  002AEA  EF79  F015         	goto	u4531
  7985  002AEE  EF7B  F015         	goto	u4530
  7986  002AF2                     u4531:
  7987  002AF2  EF81  F015         	goto	l3782
  7988  002AF6                     u4530:
  7989  002AF6  0E00               	movlw	0
  7990  002AF8  6E2F               	movwf	(_dtoa$644+1)^0,c
  7991  002AFA  0E2B               	movlw	43
  7992  002AFC  6E2E               	movwf	_dtoa$644^0,c
  7993  002AFE  EF85  F015         	goto	l3784
  7994  002B02                     l3782:
  7995  002B02  0E00               	movlw	0
  7996  002B04  6E2F               	movwf	(_dtoa$644+1)^0,c
  7997  002B06  0E2D               	movlw	45
  7998  002B08  6E2E               	movwf	_dtoa$644^0,c
  7999  002B0A                     l3784:
  8000  002B0A  0E00               	movlw	low _dbuf
  8001  002B0C  243E               	addwf	dtoa@i^0,w,c
  8002  002B0E  6ED9               	movwf	fsr2l,c
  8003  002B10  0E01               	movlw	high _dbuf
  8004  002B12  203F               	addwfc	(dtoa@i+1)^0,w,c
  8005  002B14  6EDA               	movwf	fsr2h,c
  8006  002B16  C02E  FFDF         	movff	_dtoa$644,indf2
  8007  002B1A                     l3786:
  8008                           
  8009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8010  002B1A  C01C  F011         	movff	dtoa@fp,pad@fp
  8011  002B1E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8012  002B22  0E00               	movlw	low _dbuf
  8013  002B24  243E               	addwf	dtoa@i^0,w,c
  8014  002B26  6E13               	movwf	pad@buf^0,c
  8015  002B28  0E01               	movlw	high _dbuf
  8016  002B2A  203F               	addwfc	(dtoa@i+1)^0,w,c
  8017  002B2C  6E14               	movwf	(pad@buf+1)^0,c
  8018  002B2E  C032  F015         	movff	dtoa@w,pad@p
  8019  002B32  C033  F016         	movff	dtoa@w+1,pad@p+1
  8020  002B36  EC73  F01C         	call	_pad	;wreg free
  8021  002B3A  C011  F01C         	movff	?_pad,?_dtoa
  8022  002B3E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8023  002B42  0012               	return		;funcret
  8024  002B44                     __end_of_dtoa:
  8025                           	callstack 0
  8026                           
  8027 ;; *************** function _pad *****************
  8028 ;; Defined at:
  8029 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8032 ;;		 -> sprintf@f(6), 
  8033 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8034 ;;		 -> dbuf(80), 
  8035 ;;  p               2   20[COMRAM] int 
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;  w               2   25[COMRAM] int 
  8038 ;;  i               2   23[COMRAM] int 
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  2   16[COMRAM] int 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8048 ;;      Params:         6       0       0       0       0       0       0       0       0
  8049 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8050 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8051 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8052 ;;Total ram usage:       11 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:    3
  8055 ;; This function calls:
  8056 ;;		_fputc
  8057 ;;		_fputs
  8058 ;;		_strlen
  8059 ;; This function is called by:
  8060 ;;		_dtoa
  8061 ;;		_efgtoa
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text22
  8066  0038E6                     __ptext22:
  8067                           	callstack 0
  8068  0038E6                     _pad:
  8069                           	callstack 23
  8070  0038E6                     
  8071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8072  0038E6  0100               	movlb	0	; () banked
  8073  0038E8  A1C6               	btfss	_flags& (0+255),0,b
  8074  0038EA  EF79  F01C         	goto	u4081
  8075  0038EE  EF7B  F01C         	goto	u4080
  8076  0038F2                     u4081:
  8077  0038F2  EF85  F01C         	goto	l3626
  8078  0038F6                     u4080:
  8079  0038F6                     
  8080                           ; BSR set to: 0
  8081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8082  0038F6  C013  F00A         	movff	pad@buf,fputs@s
  8083  0038FA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8084  0038FE  C011  F00C         	movff	pad@fp,fputs@fp
  8085  003902  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8086  003906  ECC0  F01F         	call	_fputs	;wreg free
  8087  00390A                     l3626:
  8088                           
  8089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8090  00390A  BE16               	btfsc	(pad@p+1)^0,7,c
  8091  00390C  EF8A  F01C         	goto	u4091
  8092  003910  EF8C  F01C         	goto	u4090
  8093  003914                     u4091:
  8094  003914  EF92  F01C         	goto	l3630
  8095  003918                     u4090:
  8096  003918  C015  F01A         	movff	pad@p,pad@w
  8097  00391C  C016  F01B         	movff	pad@p+1,pad@w+1
  8098  003920  EF96  F01C         	goto	l801
  8099  003924                     l3630:
  8100  003924  0E00               	movlw	0
  8101  003926  6E1B               	movwf	(pad@w+1)^0,c
  8102  003928  0E00               	movlw	0
  8103  00392A  6E1A               	movwf	pad@w^0,c
  8104  00392C                     l801:
  8105                           
  8106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8107  00392C  0E00               	movlw	0
  8108  00392E  6E19               	movwf	(pad@i+1)^0,c
  8109  003930  0E00               	movlw	0
  8110  003932  6E18               	movwf	pad@i^0,c
  8111                           
  8112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8113  003934  EFA8  F01C         	goto	l3636
  8114  003938                     l3632:
  8115                           
  8116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8117  003938  0E00               	movlw	0
  8118  00393A  6E02               	movwf	(fputc@c+1)^0,c
  8119  00393C  0E20               	movlw	32
  8120  00393E  6E01               	movwf	fputc@c^0,c
  8121  003940  C011  F003         	movff	pad@fp,fputc@fp
  8122  003944  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8123  003948  EC0E  F01C         	call	_fputc	;wreg free
  8124  00394C                     
  8125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8126  00394C  4A18               	infsnz	pad@i^0,f,c
  8127  00394E  2A19               	incf	(pad@i+1)^0,f,c
  8128  003950                     l3636:
  8129                           
  8130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8131  003950  501A               	movf	pad@w^0,w,c
  8132  003952  5C18               	subwf	pad@i^0,w,c
  8133  003954  5019               	movf	(pad@i+1)^0,w,c
  8134  003956  0A80               	xorlw	128
  8135  003958  6E17               	movwf	??_pad^0,c
  8136  00395A  501B               	movf	(pad@w+1)^0,w,c
  8137  00395C  0A80               	xorlw	128
  8138  00395E  5817               	subwfb	??_pad^0,w,c
  8139  003960  A0D8               	btfss	status,0,c
  8140  003962  EFB5  F01C         	goto	u4101
  8141  003966  EFB7  F01C         	goto	u4100
  8142  00396A                     u4101:
  8143  00396A  EF9C  F01C         	goto	l3632
  8144  00396E                     u4100:
  8145  00396E                     
  8146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8147  00396E  0100               	movlb	0	; () banked
  8148  003970  B1C6               	btfsc	_flags& (0+255),0,b
  8149  003972  EFBD  F01C         	goto	u4111
  8150  003976  EFBF  F01C         	goto	u4110
  8151  00397A                     u4111:
  8152  00397A  EFC9  F01C         	goto	l3640
  8153  00397E                     u4110:
  8154  00397E                     
  8155                           ; BSR set to: 0
  8156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8157  00397E  C013  F00A         	movff	pad@buf,fputs@s
  8158  003982  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8159  003986  C011  F00C         	movff	pad@fp,fputs@fp
  8160  00398A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8161  00398E  ECC0  F01F         	call	_fputs	;wreg free
  8162  003992                     l3640:
  8163                           
  8164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8165  003992  C013  F001         	movff	pad@buf,strlen@s
  8166  003996  C014  F002         	movff	pad@buf+1,strlen@s+1
  8167  00399A  EC93  F020         	call	_strlen	;wreg free
  8168  00399E  501A               	movf	pad@w^0,w,c
  8169  0039A0  2401               	addwf	?_strlen^0,w,c
  8170  0039A2  6E11               	movwf	?_pad^0,c
  8171  0039A4  501B               	movf	(pad@w+1)^0,w,c
  8172  0039A6  2002               	addwfc	(?_strlen+1)^0,w,c
  8173  0039A8  6E12               	movwf	(?_pad+1)^0,c
  8174  0039AA  0012               	return		;funcret
  8175  0039AC                     __end_of_pad:
  8176                           	callstack 0
  8177                           
  8178 ;; *************** function _strlen *****************
  8179 ;; Defined at:
  8180 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8183 ;;		 -> dbuf(80), 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8186 ;;		 -> dbuf(80), 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  2    0[COMRAM] unsigned int 
  8189 ;; Registers used:
  8190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8196 ;;      Params:         2       0       0       0       0       0       0       0       0
  8197 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8199 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8200 ;;Total ram usage:        4 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; This function calls:
  8203 ;;		Nothing
  8204 ;; This function is called by:
  8205 ;;		_pad
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text23
  8210  004126                     __ptext23:
  8211                           	callstack 0
  8212  004126                     _strlen:
  8213                           	callstack 25
  8214  004126  C001  F003         	movff	strlen@s,strlen@a
  8215  00412A  C002  F004         	movff	strlen@s+1,strlen@a+1
  8216  00412E  EF9B  F020         	goto	l3082
  8217  004132                     l3080:
  8218  004132  4A01               	infsnz	strlen@s^0,f,c
  8219  004134  2A02               	incf	(strlen@s+1)^0,f,c
  8220  004136                     l3082:
  8221  004136  C001  FFD9         	movff	strlen@s,fsr2l
  8222  00413A  C002  FFDA         	movff	strlen@s+1,fsr2h
  8223  00413E  50DF               	movf	indf2,w,c
  8224  004140  A4D8               	btfss	status,2,c
  8225  004142  EFA5  F020         	goto	u3221
  8226  004146  EFA7  F020         	goto	u3220
  8227  00414A                     u3221:
  8228  00414A  EF99  F020         	goto	l3080
  8229  00414E                     u3220:
  8230  00414E  5003               	movf	strlen@a^0,w,c
  8231  004150  5C01               	subwf	strlen@s^0,w,c
  8232  004152  6E01               	movwf	?_strlen^0,c
  8233  004154  5004               	movf	(strlen@a+1)^0,w,c
  8234  004156  5802               	subwfb	(strlen@s+1)^0,w,c
  8235  004158  6E02               	movwf	(?_strlen+1)^0,c
  8236  00415A  0012               	return		;funcret
  8237  00415C                     __end_of_strlen:
  8238                           	callstack 0
  8239                           
  8240 ;; *************** function _fputs *****************
  8241 ;; Defined at:
  8242 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8245 ;;		 -> dbuf(80), 
  8246 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8247 ;;		 -> sprintf@f(6), 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  i               2   14[COMRAM] int 
  8250 ;;  c               1   13[COMRAM] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  2    9[COMRAM] int 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8260 ;;      Params:         4       0       0       0       0       0       0       0       0
  8261 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8263 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8264 ;;Total ram usage:        7 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:    2
  8267 ;; This function calls:
  8268 ;;		_fputc
  8269 ;; This function is called by:
  8270 ;;		_pad
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text24
  8275  003F80                     __ptext24:
  8276                           	callstack 0
  8277  003F80                     _fputs:
  8278                           	callstack 23
  8279  003F80  0E00               	movlw	0
  8280  003F82  6E10               	movwf	(fputs@i+1)^0,c
  8281  003F84  0E00               	movlw	0
  8282  003F86  6E0F               	movwf	fputs@i^0,c
  8283  003F88  EFD1  F01F         	goto	l3076
  8284  003F8C                     l3072:
  8285  003F8C  C00E  F001         	movff	fputs@c,fputc@c
  8286  003F90  6A02               	clrf	(fputc@c+1)^0,c
  8287  003F92  C00C  F003         	movff	fputs@fp,fputc@fp
  8288  003F96  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8289  003F9A  EC0E  F01C         	call	_fputc	;wreg free
  8290  003F9E  4A0F               	infsnz	fputs@i^0,f,c
  8291  003FA0  2A10               	incf	(fputs@i+1)^0,f,c
  8292  003FA2                     l3076:
  8293  003FA2  500F               	movf	fputs@i^0,w,c
  8294  003FA4  240A               	addwf	fputs@s^0,w,c
  8295  003FA6  6ED9               	movwf	fsr2l,c
  8296  003FA8  5010               	movf	(fputs@i+1)^0,w,c
  8297  003FAA  200B               	addwfc	(fputs@s+1)^0,w,c
  8298  003FAC  6EDA               	movwf	fsr2h,c
  8299  003FAE  50DF               	movf	indf2,w,c
  8300  003FB0  6E0E               	movwf	fputs@c^0,c
  8301  003FB2  500E               	movf	fputs@c^0,w,c
  8302  003FB4  A4D8               	btfss	status,2,c
  8303  003FB6  EFDF  F01F         	goto	u3211
  8304  003FBA  EFE1  F01F         	goto	u3210
  8305  003FBE                     u3211:
  8306  003FBE  EFC6  F01F         	goto	l3072
  8307  003FC2                     u3210:
  8308  003FC2  0012               	return		;funcret
  8309  003FC4                     __end_of_fputs:
  8310                           	callstack 0
  8311                           
  8312 ;; *************** function _fputc *****************
  8313 ;; Defined at:
  8314 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  c               2    0[COMRAM] int 
  8317 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8318 ;;		 -> sprintf@f(6), 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;		None
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  2    0[COMRAM] int 
  8323 ;; Registers used:
  8324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8330 ;;      Params:         4       0       0       0       0       0       0       0       0
  8331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8332 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8333 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8334 ;;Total ram usage:        9 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:    1
  8337 ;; This function calls:
  8338 ;;		_putch
  8339 ;; This function is called by:
  8340 ;;		_pad
  8341 ;;		_vfpfcnvrt
  8342 ;;		_fputs
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text25
  8347  00381C                     __ptext25:
  8348                           	callstack 0
  8349  00381C                     _fputc:
  8350                           	callstack 26
  8351  00381C  5003               	movf	fputc@fp^0,w,c
  8352  00381E  1004               	iorwf	(fputc@fp+1)^0,w,c
  8353  003820  B4D8               	btfsc	status,2,c
  8354  003822  EF15  F01C         	goto	u2781
  8355  003826  EF17  F01C         	goto	u2780
  8356  00382A                     u2781:
  8357  00382A  EF20  F01C         	goto	l2858
  8358  00382E                     u2780:
  8359  00382E  5003               	movf	fputc@fp^0,w,c
  8360  003830  1004               	iorwf	(fputc@fp+1)^0,w,c
  8361  003832  A4D8               	btfss	status,2,c
  8362  003834  EF1E  F01C         	goto	u2791
  8363  003838  EF20  F01C         	goto	u2790
  8364  00383C                     u2791:
  8365  00383C  EF25  F01C         	goto	l2860
  8366  003840                     u2790:
  8367  003840                     l2858:
  8368  003840  5001               	movf	fputc@c^0,w,c
  8369  003842  ECE9  F020         	call	_putch
  8370  003846  EF72  F01C         	goto	l1075
  8371  00384A                     l2860:
  8372  00384A  EE20 F004          	lfsr	2,4
  8373  00384E  5003               	movf	fputc@fp^0,w,c
  8374  003850  26D9               	addwf	fsr2l,f,c
  8375  003852  5004               	movf	(fputc@fp+1)^0,w,c
  8376  003854  22DA               	addwfc	fsr2h,f,c
  8377  003856  50DE               	movf	postinc2,w,c
  8378  003858  10DE               	iorwf	postinc2,w,c
  8379  00385A  B4D8               	btfsc	status,2,c
  8380  00385C  EF32  F01C         	goto	u2801
  8381  003860  EF34  F01C         	goto	u2800
  8382  003864                     u2801:
  8383  003864  EF4F  F01C         	goto	l2864
  8384  003868                     u2800:
  8385  003868  EE20 F004          	lfsr	2,4
  8386  00386C  5003               	movf	fputc@fp^0,w,c
  8387  00386E  26D9               	addwf	fsr2l,f,c
  8388  003870  5004               	movf	(fputc@fp+1)^0,w,c
  8389  003872  22DA               	addwfc	fsr2h,f,c
  8390  003874  EE10 F002          	lfsr	1,2
  8391  003878  5003               	movf	fputc@fp^0,w,c
  8392  00387A  26E1               	addwf	fsr1l,f,c
  8393  00387C  5004               	movf	(fputc@fp+1)^0,w,c
  8394  00387E  22E2               	addwfc	fsr1h,f,c
  8395  003880  50DE               	movf	postinc2,w,c
  8396  003882  5CE6               	subwf	postinc1,w,c
  8397  003884  50E6               	movf	postinc1,w,c
  8398  003886  0A80               	xorlw	128
  8399  003888  6E09               	movwf	(??_fputc+4)^0,c
  8400  00388A  50DE               	movf	postinc2,w,c
  8401  00388C  0A80               	xorlw	128
  8402  00388E  5809               	subwfb	(??_fputc+4)^0,w,c
  8403  003890  B0D8               	btfsc	status,0,c
  8404  003892  EF4D  F01C         	goto	u2811
  8405  003896  EF4F  F01C         	goto	u2810
  8406  00389A                     u2811:
  8407  00389A  EF72  F01C         	goto	l1075
  8408  00389E                     u2810:
  8409  00389E                     l2864:
  8410  00389E  EE20 F002          	lfsr	2,2
  8411  0038A2  5003               	movf	fputc@fp^0,w,c
  8412  0038A4  26D9               	addwf	fsr2l,f,c
  8413  0038A6  5004               	movf	(fputc@fp+1)^0,w,c
  8414  0038A8  22DA               	addwfc	fsr2h,f,c
  8415  0038AA  CFDE F005          	movff	postinc2,??_fputc
  8416  0038AE  CFDD F006          	movff	postdec2,??_fputc+1
  8417  0038B2  C003  FFD9         	movff	fputc@fp,fsr2l
  8418  0038B6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8419  0038BA  CFDE F007          	movff	postinc2,??_fputc+2
  8420  0038BE  CFDD F008          	movff	postdec2,??_fputc+3
  8421  0038C2  5005               	movf	??_fputc^0,w,c
  8422  0038C4  2407               	addwf	(??_fputc+2)^0,w,c
  8423  0038C6  6ED9               	movwf	fsr2l,c
  8424  0038C8  5006               	movf	(??_fputc+1)^0,w,c
  8425  0038CA  2008               	addwfc	(??_fputc+3)^0,w,c
  8426  0038CC  6EDA               	movwf	fsr2h,c
  8427  0038CE  C001  FFDF         	movff	fputc@c,indf2
  8428  0038D2  EE20 F002          	lfsr	2,2
  8429  0038D6  5003               	movf	fputc@fp^0,w,c
  8430  0038D8  26D9               	addwf	fsr2l,f,c
  8431  0038DA  5004               	movf	(fputc@fp+1)^0,w,c
  8432  0038DC  22DA               	addwfc	fsr2h,f,c
  8433  0038DE  2ADE               	incf	postinc2,f,c
  8434  0038E0  0E00               	movlw	0
  8435  0038E2  22DD               	addwfc	postdec2,f,c
  8436  0038E4                     l1075:
  8437  0038E4  0012               	return		;funcret
  8438  0038E6                     __end_of_fputc:
  8439                           	callstack 0
  8440                           
  8441 ;; *************** function _putch *****************
  8442 ;; Defined at:
  8443 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;  c               1    wreg     unsigned char 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  c               1    0[COMRAM] unsigned char 
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      void 
  8450 ;; Registers used:
  8451 ;;		wreg
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8457 ;;      Params:         0       0       0       0       0       0       0       0       0
  8458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8461 ;;Total ram usage:        0 bytes
  8462 ;; Hardware stack levels used:    1
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		_fputc
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           	psect	text26
  8471  0041D2                     __ptext26:
  8472                           	callstack 0
  8473  0041D2                     _putch:
  8474                           	callstack 26
  8475  0041D2  0012               	return		;funcret
  8476  0041D4                     __end_of_putch:
  8477                           	callstack 0
  8478                           
  8479 ;; *************** function _abs *****************
  8480 ;; Defined at:
  8481 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  a               2   18[COMRAM] int 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  2   18[COMRAM] int 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8495 ;;      Params:         2       0       0       0       0       0       0       0       0
  8496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8497 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8498 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8499 ;;Total ram usage:        4 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; This function calls:
  8502 ;;		Nothing
  8503 ;; This function is called by:
  8504 ;;		_dtoa
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text27
  8509  004006                     __ptext27:
  8510                           	callstack 0
  8511  004006                     _abs:
  8512                           	callstack 26
  8513  004006  BE14               	btfsc	(abs@a+1)^0,7,c
  8514  004008  EF10  F020         	goto	u4120
  8515  00400C  5014               	movf	(abs@a+1)^0,w,c
  8516  00400E  E106               	bnz	u4121
  8517  004010  0413               	decf	abs@a^0,w,c
  8518  004012  B0D8               	btfsc	status,0,c
  8519  004014  EF0E  F020         	goto	u4121
  8520  004018  EF10  F020         	goto	u4120
  8521  00401C                     u4121:
  8522  00401C  EF1E  F020         	goto	l996
  8523  004020                     u4120:
  8524  004020  C013  F015         	movff	abs@a,??_abs
  8525  004024  C014  F016         	movff	abs@a+1,??_abs+1
  8526  004028  1E15               	comf	??_abs^0,f,c
  8527  00402A  1E16               	comf	(??_abs+1)^0,f,c
  8528  00402C  4A15               	infsnz	??_abs^0,f,c
  8529  00402E  2A16               	incf	(??_abs+1)^0,f,c
  8530  004030  C015  F013         	movff	??_abs,?_abs
  8531  004034  C016  F014         	movff	??_abs+1,?_abs+1
  8532  004038  EF22  F020         	goto	l999
  8533  00403C                     l996:
  8534  00403C  C013  F013         	movff	abs@a,?_abs
  8535  004040  C014  F014         	movff	abs@a+1,?_abs+1
  8536  004044                     l999:
  8537  004044  0012               	return		;funcret
  8538  004046                     __end_of_abs:
  8539                           	callstack 0
  8540                           
  8541 ;; *************** function ___aomod *****************
  8542 ;; Defined at:
  8543 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;  dividend        8    0[COMRAM] long long 
  8546 ;;  divisor         8    8[COMRAM] long long 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;  sign            1   17[COMRAM] unsigned char 
  8549 ;;  counter         1   16[COMRAM] unsigned char 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  8    0[COMRAM] long long 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8559 ;;      Params:        16       0       0       0       0       0       0       0       0
  8560 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8562 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8563 ;;Total ram usage:       18 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		_dtoa
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           	psect	text28
  8573  0032DA                     __ptext28:
  8574                           	callstack 0
  8575  0032DA                     ___aomod:
  8576                           	callstack 26
  8577  0032DA  0E00               	movlw	0
  8578  0032DC  6E12               	movwf	___aomod@sign^0,c
  8579  0032DE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8580  0032E0  EF76  F019         	goto	u3320
  8581  0032E4  EF74  F019         	goto	u3321
  8582  0032E8                     u3321:
  8583  0032E8  EF88  F019         	goto	l3150
  8584  0032EC                     u3320:
  8585  0032EC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8586  0032EE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8587  0032F0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8588  0032F2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8589  0032F4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8590  0032F6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8591  0032F8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8592  0032FA  6C01               	negf	___aomod@dividend^0,c
  8593  0032FC  0E00               	movlw	0
  8594  0032FE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8595  003300  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8596  003302  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8597  003304  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8598  003306  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8599  003308  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8600  00330A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8601  00330C  0E01               	movlw	1
  8602  00330E  6E12               	movwf	___aomod@sign^0,c
  8603  003310                     l3150:
  8604  003310  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8605  003312  EF8F  F019         	goto	u3330
  8606  003316  EF8D  F019         	goto	u3331
  8607  00331A                     u3331:
  8608  00331A  EF9F  F019         	goto	l3154
  8609  00331E                     u3330:
  8610  00331E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8611  003320  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8612  003322  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8613  003324  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8614  003326  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8615  003328  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8616  00332A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8617  00332C  6C09               	negf	___aomod@divisor^0,c
  8618  00332E  0E00               	movlw	0
  8619  003330  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8620  003332  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8621  003334  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8622  003336  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8623  003338  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8624  00333A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8625  00333C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8626  00333E                     l3154:
  8627  00333E  5009               	movf	___aomod@divisor^0,w,c
  8628  003340  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8629  003342  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8630  003344  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8631  003346  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8632  003348  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8633  00334A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8634  00334C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8635  00334E  B4D8               	btfsc	status,2,c
  8636  003350  EFAC  F019         	goto	u3341
  8637  003354  EFAE  F019         	goto	u3340
  8638  003358                     u3341:
  8639  003358  EFF6  F019         	goto	l3170
  8640  00335C                     u3340:
  8641  00335C  0E01               	movlw	1
  8642  00335E  6E11               	movwf	___aomod@counter^0,c
  8643  003360  EFBC  F019         	goto	l3160
  8644  003364                     l3158:
  8645  003364  90D8               	bcf	status,0,c
  8646  003366  3609               	rlcf	___aomod@divisor^0,f,c
  8647  003368  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8648  00336A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8649  00336C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8650  00336E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8651  003370  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8652  003372  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8653  003374  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8654  003376  2A11               	incf	___aomod@counter^0,f,c
  8655  003378                     l3160:
  8656  003378  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8657  00337A  EFC1  F019         	goto	u3351
  8658  00337E  EFC3  F019         	goto	u3350
  8659  003382                     u3351:
  8660  003382  EFB2  F019         	goto	l3158
  8661  003386                     u3350:
  8662  003386                     l3162:
  8663  003386  5009               	movf	___aomod@divisor^0,w,c
  8664  003388  5C01               	subwf	___aomod@dividend^0,w,c
  8665  00338A  500A               	movf	(___aomod@divisor+1)^0,w,c
  8666  00338C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8667  00338E  500B               	movf	(___aomod@divisor+2)^0,w,c
  8668  003390  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8669  003392  500C               	movf	(___aomod@divisor+3)^0,w,c
  8670  003394  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8671  003396  500D               	movf	(___aomod@divisor+4)^0,w,c
  8672  003398  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8673  00339A  500E               	movf	(___aomod@divisor+5)^0,w,c
  8674  00339C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8675  00339E  500F               	movf	(___aomod@divisor+6)^0,w,c
  8676  0033A0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8677  0033A2  5010               	movf	(___aomod@divisor+7)^0,w,c
  8678  0033A4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8679  0033A6  A0D8               	btfss	status,0,c
  8680  0033A8  EFD8  F019         	goto	u3361
  8681  0033AC  EFDA  F019         	goto	u3360
  8682  0033B0                     u3361:
  8683  0033B0  EFEA  F019         	goto	l3166
  8684  0033B4                     u3360:
  8685  0033B4  5009               	movf	___aomod@divisor^0,w,c
  8686  0033B6  5E01               	subwf	___aomod@dividend^0,f,c
  8687  0033B8  500A               	movf	(___aomod@divisor+1)^0,w,c
  8688  0033BA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8689  0033BC  500B               	movf	(___aomod@divisor+2)^0,w,c
  8690  0033BE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8691  0033C0  500C               	movf	(___aomod@divisor+3)^0,w,c
  8692  0033C2  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8693  0033C4  500D               	movf	(___aomod@divisor+4)^0,w,c
  8694  0033C6  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8695  0033C8  500E               	movf	(___aomod@divisor+5)^0,w,c
  8696  0033CA  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8697  0033CC  500F               	movf	(___aomod@divisor+6)^0,w,c
  8698  0033CE  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8699  0033D0  5010               	movf	(___aomod@divisor+7)^0,w,c
  8700  0033D2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8701  0033D4                     l3166:
  8702  0033D4  90D8               	bcf	status,0,c
  8703  0033D6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8704  0033D8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8705  0033DA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8706  0033DC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8707  0033DE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8708  0033E0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8709  0033E2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8710  0033E4  3209               	rrcf	___aomod@divisor^0,f,c
  8711  0033E6  2E11               	decfsz	___aomod@counter^0,f,c
  8712  0033E8  EFC3  F019         	goto	l3162
  8713  0033EC                     l3170:
  8714  0033EC  5012               	movf	___aomod@sign^0,w,c
  8715  0033EE  B4D8               	btfsc	status,2,c
  8716  0033F0  EFFC  F019         	goto	u3371
  8717  0033F4  EFFE  F019         	goto	u3370
  8718  0033F8                     u3371:
  8719  0033F8  EF0E  F01A         	goto	l3174
  8720  0033FC                     u3370:
  8721  0033FC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8722  0033FE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8723  003400  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8724  003402  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8725  003404  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8726  003406  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8727  003408  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8728  00340A  6C01               	negf	___aomod@dividend^0,c
  8729  00340C  0E00               	movlw	0
  8730  00340E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8731  003410  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8732  003412  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8733  003414  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8734  003416  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8735  003418  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8736  00341A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8737  00341C                     l3174:
  8738  00341C  C001  F001         	movff	___aomod@dividend,?___aomod
  8739  003420  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8740  003424  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8741  003428  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8742  00342C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8743  003430  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8744  003434  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8745  003438  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8746  00343C  0012               	return		;funcret
  8747  00343E                     __end_of___aomod:
  8748                           	callstack 0
  8749                           
  8750 ;; *************** function ___aodiv *****************
  8751 ;; Defined at:
  8752 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  dividend        8    0[COMRAM] long long 
  8755 ;;  divisor         8    8[COMRAM] long long 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  quotient        8   18[COMRAM] long long 
  8758 ;;  sign            1   17[COMRAM] unsigned char 
  8759 ;;  counter         1   16[COMRAM] unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  8    0[COMRAM] long long 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8769 ;;      Params:        16       0       0       0       0       0       0       0       0
  8770 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8772 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8773 ;;Total ram usage:       26 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; This function calls:
  8776 ;;		Nothing
  8777 ;; This function is called by:
  8778 ;;		_dtoa
  8779 ;; This function uses a non-reentrant model
  8780 ;;
  8781                           
  8782                           	psect	text29
  8783  003152                     __ptext29:
  8784                           	callstack 0
  8785  003152                     ___aodiv:
  8786                           	callstack 26
  8787  003152  0E00               	movlw	0
  8788  003154  6E12               	movwf	___aodiv@sign^0,c
  8789  003156  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8790  003158  EFB2  F018         	goto	u3250
  8791  00315C  EFB0  F018         	goto	u3251
  8792  003160                     u3251:
  8793  003160  EFC4  F018         	goto	l3106
  8794  003164                     u3250:
  8795  003164  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8796  003166  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8797  003168  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8798  00316A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8799  00316C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8800  00316E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8801  003170  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8802  003172  6C09               	negf	___aodiv@divisor^0,c
  8803  003174  0E00               	movlw	0
  8804  003176  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8805  003178  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8806  00317A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8807  00317C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8808  00317E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8809  003180  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8810  003182  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8811  003184  0E01               	movlw	1
  8812  003186  6E12               	movwf	___aodiv@sign^0,c
  8813  003188                     l3106:
  8814  003188  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8815  00318A  EFCB  F018         	goto	u3260
  8816  00318E  EFC9  F018         	goto	u3261
  8817  003192                     u3261:
  8818  003192  EFDD  F018         	goto	l3112
  8819  003196                     u3260:
  8820  003196  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8821  003198  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8822  00319A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8823  00319C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8824  00319E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8825  0031A0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8826  0031A2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8827  0031A4  6C01               	negf	___aodiv@dividend^0,c
  8828  0031A6  0E00               	movlw	0
  8829  0031A8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8830  0031AA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8831  0031AC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8832  0031AE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8833  0031B0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8834  0031B2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8835  0031B4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8836  0031B6  0E01               	movlw	1
  8837  0031B8  1A12               	xorwf	___aodiv@sign^0,f,c
  8838  0031BA                     l3112:
  8839  0031BA  EE20  F013         	lfsr	2,___aodiv@quotient
  8840  0031BE  0E07               	movlw	7
  8841  0031C0                     u3271:
  8842  0031C0  6ADE               	clrf	postinc2,c
  8843  0031C2  06E8               	decf	wreg,f,c
  8844  0031C4  E2FD               	bc	u3271
  8845  0031C6  5009               	movf	___aodiv@divisor^0,w,c
  8846  0031C8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8847  0031CA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8848  0031CC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8849  0031CE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8850  0031D0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8851  0031D2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8852  0031D4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8853  0031D6  B4D8               	btfsc	status,2,c
  8854  0031D8  EFF0  F018         	goto	u3281
  8855  0031DC  EFF2  F018         	goto	u3280
  8856  0031E0                     u3281:
  8857  0031E0  EF44  F019         	goto	l3134
  8858  0031E4                     u3280:
  8859  0031E4  0E01               	movlw	1
  8860  0031E6  6E11               	movwf	___aodiv@counter^0,c
  8861  0031E8  EF00  F019         	goto	l3120
  8862  0031EC                     l3118:
  8863  0031EC  90D8               	bcf	status,0,c
  8864  0031EE  3609               	rlcf	___aodiv@divisor^0,f,c
  8865  0031F0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8866  0031F2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8867  0031F4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8868  0031F6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8869  0031F8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8870  0031FA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8871  0031FC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8872  0031FE  2A11               	incf	___aodiv@counter^0,f,c
  8873  003200                     l3120:
  8874  003200  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8875  003202  EF05  F019         	goto	u3291
  8876  003206  EF07  F019         	goto	u3290
  8877  00320A                     u3291:
  8878  00320A  EFF6  F018         	goto	l3118
  8879  00320E                     u3290:
  8880  00320E                     l3122:
  8881  00320E  90D8               	bcf	status,0,c
  8882  003210  3613               	rlcf	___aodiv@quotient^0,f,c
  8883  003212  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8884  003214  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8885  003216  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8886  003218  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8887  00321A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8888  00321C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8889  00321E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8890  003220  5009               	movf	___aodiv@divisor^0,w,c
  8891  003222  5C01               	subwf	___aodiv@dividend^0,w,c
  8892  003224  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8893  003226  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8894  003228  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8895  00322A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8896  00322C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8897  00322E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8898  003230  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8899  003232  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8900  003234  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8901  003236  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8902  003238  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8903  00323A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8904  00323C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8905  00323E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8906  003240  A0D8               	btfss	status,0,c
  8907  003242  EF25  F019         	goto	u3301
  8908  003246  EF27  F019         	goto	u3300
  8909  00324A                     u3301:
  8910  00324A  EF38  F019         	goto	l3130
  8911  00324E                     u3300:
  8912  00324E  5009               	movf	___aodiv@divisor^0,w,c
  8913  003250  5E01               	subwf	___aodiv@dividend^0,f,c
  8914  003252  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8915  003254  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8916  003256  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8917  003258  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8918  00325A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8919  00325C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8920  00325E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8921  003260  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8922  003262  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8923  003264  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8924  003266  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8925  003268  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8926  00326A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8927  00326C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8928  00326E  8013               	bsf	___aodiv@quotient^0,0,c
  8929  003270                     l3130:
  8930  003270  90D8               	bcf	status,0,c
  8931  003272  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8932  003274  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8933  003276  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8934  003278  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8935  00327A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8936  00327C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8937  00327E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8938  003280  3209               	rrcf	___aodiv@divisor^0,f,c
  8939  003282  2E11               	decfsz	___aodiv@counter^0,f,c
  8940  003284  EF07  F019         	goto	l3122
  8941  003288                     l3134:
  8942  003288  5012               	movf	___aodiv@sign^0,w,c
  8943  00328A  B4D8               	btfsc	status,2,c
  8944  00328C  EF4A  F019         	goto	u3311
  8945  003290  EF4C  F019         	goto	u3310
  8946  003294                     u3311:
  8947  003294  EF5C  F019         	goto	l3138
  8948  003298                     u3310:
  8949  003298  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8950  00329A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8951  00329C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8952  00329E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8953  0032A0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8954  0032A2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8955  0032A4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8956  0032A6  6C13               	negf	___aodiv@quotient^0,c
  8957  0032A8  0E00               	movlw	0
  8958  0032AA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8959  0032AC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8960  0032AE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8961  0032B0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8962  0032B2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8963  0032B4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8964  0032B6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8965  0032B8                     l3138:
  8966  0032B8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8967  0032BC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8968  0032C0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8969  0032C4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8970  0032C8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8971  0032CC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8972  0032D0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8973  0032D4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8974  0032D8  0012               	return		;funcret
  8975  0032DA                     __end_of___aodiv:
  8976                           	callstack 0
  8977                           
  8978 ;; *************** function _atoi *****************
  8979 ;; Defined at:
  8980 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8983 ;;		 -> STR_9(8), STR_8(14), 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  n               2   20[COMRAM] int 
  8986 ;;  neg             2   13[COMRAM] int 
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  2    7[COMRAM] int 
  8989 ;; Registers used:
  8990 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8996 ;;      Params:         2       0       0       0       0       0       0       0       0
  8997 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8998 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8999 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9000 ;;Total ram usage:       15 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:    1
  9003 ;; This function calls:
  9004 ;;		___wmul
  9005 ;;		_isdigit
  9006 ;;		_isspace
  9007 ;; This function is called by:
  9008 ;;		_vfpfcnvrt
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text30
  9013  002FC2                     __ptext30:
  9014                           	callstack 0
  9015  002FC2                     _atoi:
  9016                           	callstack 26
  9017  002FC2  0E00               	movlw	0
  9018  002FC4  6E16               	movwf	(atoi@n+1)^0,c
  9019  002FC6  0E00               	movlw	0
  9020  002FC8  6E15               	movwf	atoi@n^0,c
  9021  002FCA  0E00               	movlw	0
  9022  002FCC  6E0F               	movwf	(atoi@neg+1)^0,c
  9023  002FCE  0E00               	movlw	0
  9024  002FD0  6E0E               	movwf	atoi@neg^0,c
  9025  002FD2  EFED  F017         	goto	l4102
  9026  002FD6                     l4100:
  9027  002FD6  4A08               	infsnz	atoi@s^0,f,c
  9028  002FD8  2A09               	incf	(atoi@s+1)^0,f,c
  9029  002FDA                     l4102:
  9030  002FDA  0E01               	movlw	1
  9031  002FDC  6E14               	movwf	_atoi$736^0,c
  9032  002FDE  C008  FFF6         	movff	atoi@s,tblptrl
  9033  002FE2  C009  FFF7         	movff	atoi@s+1,tblptrh
  9034  002FE6                     	if	0	;tblptru may be non-zero
  9035  002FE6                     	endif
  9036  002FE6                     	if	0	;tblptru may be non-zero
  9037  002FE6                     	endif
  9038  002FE6  0008               	tblrd		*
  9039  002FE8  50F5               	movf	tablat,w,c
  9040  002FEA  0A20               	xorlw	32
  9041  002FEC  B4D8               	btfsc	status,2,c
  9042  002FEE  EFFB  F017         	goto	u5081
  9043  002FF2  EFFD  F017         	goto	u5080
  9044  002FF6                     u5081:
  9045  002FF6  EF1A  F018         	goto	l4110
  9046  002FFA                     u5080:
  9047  002FFA  0EF7               	movlw	247
  9048  002FFC  6E0A               	movwf	??_atoi^0,c
  9049  002FFE  0EFF               	movlw	255
  9050  003000  6E0B               	movwf	(??_atoi+1)^0,c
  9051  003002  C008  FFF6         	movff	atoi@s,tblptrl
  9052  003006  C009  FFF7         	movff	atoi@s+1,tblptrh
  9053  00300A                     	if	0	;tblptru may be non-zero
  9054  00300A                     	endif
  9055  00300A                     	if	0	;tblptru may be non-zero
  9056  00300A                     	endif
  9057  00300A  0008               	tblrd		*
  9058  00300C  50F5               	movf	tablat,w,c
  9059  00300E  6E0C               	movwf	(??_atoi+2)^0,c
  9060  003010  6A0D               	clrf	(??_atoi+3)^0,c
  9061  003012  500A               	movf	??_atoi^0,w,c
  9062  003014  260C               	addwf	(??_atoi+2)^0,f,c
  9063  003016  500B               	movf	(??_atoi+1)^0,w,c
  9064  003018  220D               	addwfc	(??_atoi+3)^0,f,c
  9065  00301A  500D               	movf	(??_atoi+3)^0,w,c
  9066  00301C  E109               	bnz	u5090
  9067  00301E  0E05               	movlw	5
  9068  003020  5C0C               	subwf	(??_atoi+2)^0,w,c
  9069  003022  A0D8               	btfss	status,0,c
  9070  003024  EF16  F018         	goto	u5091
  9071  003028  EF18  F018         	goto	u5090
  9072  00302C                     u5091:
  9073  00302C  EF1A  F018         	goto	l4110
  9074  003030                     u5090:
  9075  003030  0E00               	movlw	0
  9076  003032  6E14               	movwf	_atoi$736^0,c
  9077  003034                     l4110:
  9078  003034  C014  F010         	movff	_atoi$736,_atoi$735
  9079  003038  6A11               	clrf	(_atoi$735+1)^0,c
  9080  00303A  5010               	movf	_atoi$735^0,w,c
  9081  00303C  1011               	iorwf	(_atoi$735+1)^0,w,c
  9082  00303E  A4D8               	btfss	status,2,c
  9083  003040  EF24  F018         	goto	u5101
  9084  003044  EF26  F018         	goto	u5100
  9085  003048                     u5101:
  9086  003048  EFEB  F017         	goto	l4100
  9087  00304C                     u5100:
  9088  00304C  EF30  F018         	goto	l4120
  9089  003050                     l4116:
  9090  003050  0E00               	movlw	0
  9091  003052  6E0F               	movwf	(atoi@neg+1)^0,c
  9092  003054  0E01               	movlw	1
  9093  003056  6E0E               	movwf	atoi@neg^0,c
  9094  003058                     l4118:
  9095  003058  4A08               	infsnz	atoi@s^0,f,c
  9096  00305A  2A09               	incf	(atoi@s+1)^0,f,c
  9097  00305C  EF65  F018         	goto	l4126
  9098  003060                     l4120:
  9099  003060  C008  FFF6         	movff	atoi@s,tblptrl
  9100  003064  C009  FFF7         	movff	atoi@s+1,tblptrh
  9101  003068                     	if	0	;tblptru may be non-zero
  9102  003068                     	endif
  9103  003068                     	if	0	;tblptru may be non-zero
  9104  003068                     	endif
  9105  003068  0008               	tblrd		*
  9106  00306A  50F5               	movf	tablat,w,c
  9107  00306C  6E0A               	movwf	??_atoi^0,c
  9108  00306E  6A0B               	clrf	(??_atoi+1)^0,c
  9109                           
  9110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9111                           ; Switch size 1, requested type "simple"
  9112                           ; Number of cases is 1, Range of values is 0 to 0
  9113                           ; switch strategies available:
  9114                           ; Name         Instructions Cycles
  9115                           ; simple_byte            4     3 (average)
  9116                           ;	Chosen strategy is simple_byte
  9117  003070  500B               	movf	(??_atoi+1)^0,w,c
  9118  003072  0A00               	xorlw	0	; case 0
  9119  003074  B4D8               	btfsc	status,2,c
  9120  003076  EF3F  F018         	goto	l4600
  9121  00307A  EF65  F018         	goto	l4126
  9122  00307E                     l4600:
  9123                           
  9124                           ; Switch size 1, requested type "simple"
  9125                           ; Number of cases is 2, Range of values is 43 to 45
  9126                           ; switch strategies available:
  9127                           ; Name         Instructions Cycles
  9128                           ; simple_byte            7     4 (average)
  9129                           ;	Chosen strategy is simple_byte
  9130  00307E  500A               	movf	??_atoi^0,w,c
  9131  003080  0A2B               	xorlw	43	; case 43
  9132  003082  B4D8               	btfsc	status,2,c
  9133  003084  EF2C  F018         	goto	l4118
  9134  003088  0A06               	xorlw	6	; case 45
  9135  00308A  B4D8               	btfsc	status,2,c
  9136  00308C  EF28  F018         	goto	l4116
  9137  003090  EF65  F018         	goto	l4126
  9138  003094                     l4122:
  9139  003094  C015  F001         	movff	atoi@n,___wmul@multiplier
  9140  003098  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9141  00309C  0E00               	movlw	0
  9142  00309E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9143  0030A0  0E0A               	movlw	10
  9144  0030A2  6E03               	movwf	___wmul@multiplicand^0,c
  9145  0030A4  ECAE  F020         	call	___wmul	;wreg free
  9146  0030A8  C008  FFF6         	movff	atoi@s,tblptrl
  9147  0030AC  C009  FFF7         	movff	atoi@s+1,tblptrh
  9148  0030B0                     	if	0	;tblptru may be non-zero
  9149  0030B0                     	endif
  9150  0030B0                     	if	0	;tblptru may be non-zero
  9151  0030B0                     	endif
  9152  0030B0  0008               	tblrd		*
  9153  0030B2  50F5               	movf	tablat,w,c
  9154  0030B4  5E01               	subwf	?___wmul^0,f,c
  9155  0030B6  0E00               	movlw	0
  9156  0030B8  5A02               	subwfb	(?___wmul+1)^0,f,c
  9157  0030BA  0E30               	movlw	48
  9158  0030BC  2401               	addwf	?___wmul^0,w,c
  9159  0030BE  6E15               	movwf	atoi@n^0,c
  9160  0030C0  0E00               	movlw	0
  9161  0030C2  2002               	addwfc	(?___wmul+1)^0,w,c
  9162  0030C4  6E16               	movwf	(atoi@n+1)^0,c
  9163  0030C6  EF2C  F018         	goto	l4118
  9164  0030CA                     l4126:
  9165  0030CA  0ED0               	movlw	208
  9166  0030CC  6E0A               	movwf	??_atoi^0,c
  9167  0030CE  0EFF               	movlw	255
  9168  0030D0  6E0B               	movwf	(??_atoi+1)^0,c
  9169  0030D2  C008  FFF6         	movff	atoi@s,tblptrl
  9170  0030D6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9171  0030DA                     	if	0	;tblptru may be non-zero
  9172  0030DA                     	endif
  9173  0030DA                     	if	0	;tblptru may be non-zero
  9174  0030DA                     	endif
  9175  0030DA  0008               	tblrd		*
  9176  0030DC  50F5               	movf	tablat,w,c
  9177  0030DE  6E0C               	movwf	(??_atoi+2)^0,c
  9178  0030E0  6A0D               	clrf	(??_atoi+3)^0,c
  9179  0030E2  500A               	movf	??_atoi^0,w,c
  9180  0030E4  260C               	addwf	(??_atoi+2)^0,f,c
  9181  0030E6  500B               	movf	(??_atoi+1)^0,w,c
  9182  0030E8  220D               	addwfc	(??_atoi+3)^0,f,c
  9183  0030EA  500D               	movf	(??_atoi+3)^0,w,c
  9184  0030EC  E10A               	bnz	u5110
  9185  0030EE  0E0A               	movlw	10
  9186  0030F0  5C0C               	subwf	(??_atoi+2)^0,w,c
  9187  0030F2  A0D8               	btfss	status,0,c
  9188  0030F4  EF7E  F018         	goto	u5111
  9189  0030F8  EF81  F018         	goto	u5110
  9190  0030FC                     u5111:
  9191  0030FC  0E01               	movlw	1
  9192  0030FE  EF82  F018         	goto	u5120
  9193  003102                     u5110:
  9194  003102  0E00               	movlw	0
  9195  003104                     u5120:
  9196  003104  6E12               	movwf	_atoi$737^0,c
  9197  003106  6A13               	clrf	(_atoi$737+1)^0,c
  9198  003108  5012               	movf	_atoi$737^0,w,c
  9199  00310A  1013               	iorwf	(_atoi$737+1)^0,w,c
  9200  00310C  A4D8               	btfss	status,2,c
  9201  00310E  EF8B  F018         	goto	u5131
  9202  003112  EF8D  F018         	goto	u5130
  9203  003116                     u5131:
  9204  003116  EF4A  F018         	goto	l4122
  9205  00311A                     u5130:
  9206  00311A  500E               	movf	atoi@neg^0,w,c
  9207  00311C  100F               	iorwf	(atoi@neg+1)^0,w,c
  9208  00311E  A4D8               	btfss	status,2,c
  9209  003120  EF94  F018         	goto	u5141
  9210  003124  EF96  F018         	goto	u5140
  9211  003128                     u5141:
  9212  003128  EFA4  F018         	goto	l1027
  9213  00312C                     u5140:
  9214  00312C  C015  F00A         	movff	atoi@n,??_atoi
  9215  003130  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9216  003134  1E0A               	comf	??_atoi^0,f,c
  9217  003136  1E0B               	comf	(??_atoi+1)^0,f,c
  9218  003138  4A0A               	infsnz	??_atoi^0,f,c
  9219  00313A  2A0B               	incf	(??_atoi+1)^0,f,c
  9220  00313C  C00A  F008         	movff	??_atoi,?_atoi
  9221  003140  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9222  003144  EFA8  F018         	goto	l1030
  9223  003148                     l1027:
  9224  003148  C015  F008         	movff	atoi@n,?_atoi
  9225  00314C  C016  F009         	movff	atoi@n+1,?_atoi+1
  9226  003150                     l1030:
  9227  003150  0012               	return		;funcret
  9228  003152                     __end_of_atoi:
  9229                           	callstack 0
  9230                           
  9231 ;; *************** function _isspace *****************
  9232 ;; Defined at:
  9233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  c               2    0[COMRAM] int 
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  2    0[COMRAM] int 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9247 ;;      Params:         2       0       0       0       0       0       0       0       0
  9248 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9249 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9250 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9251 ;;Total ram usage:        7 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_atoi
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text31
  9261  003E98                     __ptext31:
  9262                           	callstack 0
  9263  003E98                     _isspace:
  9264                           	callstack 26
  9265  003E98  0E01               	movlw	1
  9266  003E9A  6E07               	movwf	_isspace$766^0,c
  9267  003E9C  0E20               	movlw	32
  9268  003E9E  1801               	xorwf	isspace@c^0,w,c
  9269  003EA0  1002               	iorwf	(isspace@c+1)^0,w,c
  9270  003EA2  B4D8               	btfsc	status,2,c
  9271  003EA4  EF56  F01F         	goto	u4371
  9272  003EA8  EF58  F01F         	goto	u4370
  9273  003EAC                     u4371:
  9274  003EAC  EF71  F01F         	goto	l3724
  9275  003EB0                     u4370:
  9276  003EB0  0EF7               	movlw	247
  9277  003EB2  6E03               	movwf	??_isspace^0,c
  9278  003EB4  0EFF               	movlw	255
  9279  003EB6  6E04               	movwf	(??_isspace+1)^0,c
  9280  003EB8  C001  F005         	movff	isspace@c,??_isspace+2
  9281  003EBC  C002  F006         	movff	isspace@c+1,??_isspace+3
  9282  003EC0  5003               	movf	??_isspace^0,w,c
  9283  003EC2  2605               	addwf	(??_isspace+2)^0,f,c
  9284  003EC4  5004               	movf	(??_isspace+1)^0,w,c
  9285  003EC6  2206               	addwfc	(??_isspace+3)^0,f,c
  9286  003EC8  5006               	movf	(??_isspace+3)^0,w,c
  9287  003ECA  E109               	bnz	u4380
  9288  003ECC  0E05               	movlw	5
  9289  003ECE  5C05               	subwf	(??_isspace+2)^0,w,c
  9290  003ED0  A0D8               	btfss	status,0,c
  9291  003ED2  EF6D  F01F         	goto	u4381
  9292  003ED6  EF6F  F01F         	goto	u4380
  9293  003EDA                     u4381:
  9294  003EDA  EF71  F01F         	goto	l3724
  9295  003EDE                     u4380:
  9296  003EDE  0E00               	movlw	0
  9297  003EE0  6E07               	movwf	_isspace$766^0,c
  9298  003EE2                     l3724:
  9299  003EE2  C007  F001         	movff	_isspace$766,?_isspace
  9300  003EE6  6A02               	clrf	(?_isspace+1)^0,c
  9301  003EE8  0012               	return		;funcret
  9302  003EEA                     __end_of_isspace:
  9303                           	callstack 0
  9304                           
  9305 ;; *************** function _isdigit *****************
  9306 ;; Defined at:
  9307 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  c               2    0[COMRAM] int 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;		None
  9312 ;; Return value:  Size  Location     Type
  9313 ;;                  2    0[COMRAM] int 
  9314 ;; Registers used:
  9315 ;;		wreg, status,2, status,0
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9321 ;;      Params:         2       0       0       0       0       0       0       0       0
  9322 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9323 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9324 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9325 ;;Total ram usage:        6 bytes
  9326 ;; Hardware stack levels used:    1
  9327 ;; This function calls:
  9328 ;;		Nothing
  9329 ;; This function is called by:
  9330 ;;		_vfpfcnvrt
  9331 ;;		_atoi
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text32
  9336  0040B6                     __ptext32:
  9337                           	callstack 0
  9338  0040B6                     _isdigit:
  9339                           	callstack 27
  9340  0040B6  0ED0               	movlw	208
  9341  0040B8  6E03               	movwf	??_isdigit^0,c
  9342  0040BA  0EFF               	movlw	255
  9343  0040BC  6E04               	movwf	(??_isdigit+1)^0,c
  9344  0040BE  C001  F005         	movff	isdigit@c,??_isdigit+2
  9345  0040C2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9346  0040C6  5003               	movf	??_isdigit^0,w,c
  9347  0040C8  2605               	addwf	(??_isdigit+2)^0,f,c
  9348  0040CA  5004               	movf	(??_isdigit+1)^0,w,c
  9349  0040CC  2206               	addwfc	(??_isdigit+3)^0,f,c
  9350  0040CE  5006               	movf	(??_isdigit+3)^0,w,c
  9351  0040D0  E10A               	bnz	u4350
  9352  0040D2  0E0A               	movlw	10
  9353  0040D4  5C05               	subwf	(??_isdigit+2)^0,w,c
  9354  0040D6  A0D8               	btfss	status,0,c
  9355  0040D8  EF70  F020         	goto	u4351
  9356  0040DC  EF73  F020         	goto	u4350
  9357  0040E0                     u4351:
  9358  0040E0  0E01               	movlw	1
  9359  0040E2  EF74  F020         	goto	u4360
  9360  0040E6                     u4350:
  9361  0040E6  0E00               	movlw	0
  9362  0040E8                     u4360:
  9363  0040E8  6E01               	movwf	?_isdigit^0,c
  9364  0040EA  6A02               	clrf	(?_isdigit+1)^0,c
  9365  0040EC  0012               	return		;funcret
  9366  0040EE                     __end_of_isdigit:
  9367                           	callstack 0
  9368                           
  9369 ;; *************** function ___wmul *****************
  9370 ;; Defined at:
  9371 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  multiplier      2    0[COMRAM] unsigned int 
  9374 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;  product         2    4[COMRAM] unsigned int 
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  2    0[COMRAM] unsigned int 
  9379 ;; Registers used:
  9380 ;;		wreg, status,2, status,0, prodl, prodh
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9386 ;;      Params:         4       0       0       0       0       0       0       0       0
  9387 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9389 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9390 ;;Total ram usage:        6 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; This function calls:
  9393 ;;		Nothing
  9394 ;; This function is called by:
  9395 ;;		_atoi
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           	psect	text33
  9400  00415C                     __ptext33:
  9401                           	callstack 0
  9402  00415C                     ___wmul:
  9403                           	callstack 26
  9404  00415C  5001               	movf	___wmul@multiplier^0,w,c
  9405  00415E  0203               	mulwf	___wmul@multiplicand^0,c
  9406  004160  CFF3 F005          	movff	prodl,___wmul@product
  9407  004164  CFF4 F006          	movff	prodh,___wmul@product+1
  9408  004168  5001               	movf	___wmul@multiplier^0,w,c
  9409  00416A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9410  00416C  50F3               	movf	243,w,c
  9411  00416E  2606               	addwf	(___wmul@product+1)^0,f,c
  9412  004170  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9413  004172  0203               	mulwf	___wmul@multiplicand^0,c
  9414  004174  50F3               	movf	243,w,c
  9415  004176  2606               	addwf	(___wmul@product+1)^0,f,c
  9416  004178  C005  F001         	movff	___wmul@product,?___wmul
  9417  00417C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9418  004180  0012               	return		;funcret
  9419  004182                     __end_of___wmul:
  9420                           	callstack 0
  9421                           
  9422 ;; *************** function _lcd_shift_right *****************
  9423 ;; Defined at:
  9424 ;;		line 124 in file "./lcd.h"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;		None
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;		None
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      void 
  9431 ;; Registers used:
  9432 ;;		wreg, status,2, cstack
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9438 ;;      Params:         0       0       0       0       0       0       0       0       0
  9439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9442 ;;Total ram usage:        0 bytes
  9443 ;; Hardware stack levels used:    1
  9444 ;; Hardware stack levels required when called:    2
  9445 ;; This function calls:
  9446 ;;		_Lcd_Cmd
  9447 ;; This function is called by:
  9448 ;;		_main
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text34
  9453  0041A2                     __ptext34:
  9454                           	callstack 0
  9455  0041A2                     _lcd_shift_right:
  9456                           	callstack 28
  9457  0041A2                     
  9458                           ;./lcd.h: 126:    Lcd_Cmd(0x01);
  9459  0041A2  0E01               	movlw	1
  9460  0041A4  ECC1  F020         	call	_Lcd_Cmd
  9461                           
  9462                           ;./lcd.h: 127:    Lcd_Cmd(0x0C);
  9463  0041A8  0E0C               	movlw	12
  9464  0041AA  ECC1  F020         	call	_Lcd_Cmd
  9465  0041AE  0012               	return		;funcret
  9466  0041B0                     __end_of_lcd_shift_right:
  9467                           	callstack 0
  9468                           
  9469 ;; *************** function _lcd_shift_left *****************
  9470 ;; Defined at:
  9471 ;;		line 130 in file "./lcd.h"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, status,2, cstack
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0
  9486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9489 ;;Total ram usage:        0 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:    2
  9492 ;; This function calls:
  9493 ;;		_Lcd_Cmd
  9494 ;; This function is called by:
  9495 ;;		_main
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           	psect	text35
  9500  0041B0                     __ptext35:
  9501                           	callstack 0
  9502  0041B0                     _lcd_shift_left:
  9503                           	callstack 28
  9504  0041B0                     
  9505                           ;./lcd.h: 132:    Lcd_Cmd(0x01);
  9506  0041B0  0E01               	movlw	1
  9507  0041B2  ECC1  F020         	call	_Lcd_Cmd
  9508                           
  9509                           ;./lcd.h: 133:    Lcd_Cmd(0x08);
  9510  0041B6  0E08               	movlw	8
  9511  0041B8  ECC1  F020         	call	_Lcd_Cmd
  9512  0041BC  0012               	return		;funcret
  9513  0041BE                     __end_of_lcd_shift_left:
  9514                           	callstack 0
  9515                           
  9516 ;; *************** function _lcd_putc *****************
  9517 ;; Defined at:
  9518 ;;		line 117 in file "./lcd.h"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  a               2    4[COMRAM] PTR unsigned char 
  9521 ;;		 -> buffer_lcd(20), STR_7(17), STR_6(17), STR_5(17), 
  9522 ;;		 -> STR_4(15), STR_3(13), STR_2(16), STR_1(16), 
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;  i               2    8[COMRAM] int 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  1    wreg      void 
  9527 ;; Registers used:
  9528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9534 ;;      Params:         2       0       0       0       0       0       0       0       0
  9535 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9536 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9537 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9538 ;;Total ram usage:        6 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; Hardware stack levels required when called:    2
  9541 ;; This function calls:
  9542 ;;		_lcd_write_char
  9543 ;; This function is called by:
  9544 ;;		_main
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           	psect	text36
  9549  003BCA                     __ptext36:
  9550                           	callstack 0
  9551  003BCA                     _lcd_putc:
  9552                           	callstack 28
  9553  003BCA                     
  9554                           ;./lcd.h: 117: void lcd_putc(char *a);./lcd.h: 118: {;./lcd.h: 119:    int i;;./lcd.h: 1
      +                          20:    for(i=0;a[i]!='\0';i++)
  9555  003BCA  0E00               	movlw	0
  9556  003BCC  6E0A               	movwf	(lcd_putc@i+1)^0,c
  9557  003BCE  0E00               	movlw	0
  9558  003BD0  6E09               	movwf	lcd_putc@i^0,c
  9559  003BD2  EF05  F01E         	goto	l4422
  9560  003BD6                     l4418:
  9561                           
  9562                           ;./lcd.h: 121:       lcd_write_char(a[i]);
  9563  003BD6  5009               	movf	lcd_putc@i^0,w,c
  9564  003BD8  2405               	addwf	lcd_putc@a^0,w,c
  9565  003BDA  6E07               	movwf	??_lcd_putc^0,c
  9566  003BDC  500A               	movf	(lcd_putc@i+1)^0,w,c
  9567  003BDE  2006               	addwfc	(lcd_putc@a+1)^0,w,c
  9568  003BE0  6E08               	movwf	(??_lcd_putc+1)^0,c
  9569  003BE2  C007  FFF6         	movff	??_lcd_putc,tblptrl
  9570  003BE6  C008  FFF7         	movff	??_lcd_putc+1,tblptrh
  9571  003BEA  6AF8               	clrf	tblptru,c
  9572  003BEC  0E07               	movlw	(high __ramtop+-1)
  9573  003BEE  64F7               	cpfsgt	tblptrh,c
  9574  003BF0  D003               	bra	u5507
  9575  003BF2  0008               	tblrd		*
  9576  003BF4  50F5               	movf	tablat,w,c
  9577  003BF6  D005               	bra	u5500
  9578  003BF8                     u5507:
  9579  003BF8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9580  003BFC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9581  003C00  50E7               	movf	indf1,w,c
  9582  003C02                     u5500:
  9583  003C02  EC77  F020         	call	_lcd_write_char
  9584  003C06  4A09               	infsnz	lcd_putc@i^0,f,c
  9585  003C08  2A0A               	incf	(lcd_putc@i+1)^0,f,c
  9586  003C0A                     l4422:
  9587  003C0A  5009               	movf	lcd_putc@i^0,w,c
  9588  003C0C  2405               	addwf	lcd_putc@a^0,w,c
  9589  003C0E  6E07               	movwf	??_lcd_putc^0,c
  9590  003C10  500A               	movf	(lcd_putc@i+1)^0,w,c
  9591  003C12  2006               	addwfc	(lcd_putc@a+1)^0,w,c
  9592  003C14  6E08               	movwf	(??_lcd_putc+1)^0,c
  9593  003C16  C007  FFF6         	movff	??_lcd_putc,tblptrl
  9594  003C1A  C008  FFF7         	movff	??_lcd_putc+1,tblptrh
  9595  003C1E  6AF8               	clrf	tblptru,c
  9596  003C20  0E07               	movlw	(high __ramtop+-1)
  9597  003C22  64F7               	cpfsgt	tblptrh,c
  9598  003C24  D003               	bra	u5517
  9599  003C26  0008               	tblrd		*
  9600  003C28  50F5               	movf	tablat,w,c
  9601  003C2A  D005               	bra	u5510
  9602  003C2C                     u5517:
  9603  003C2C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9604  003C30  CFF7 FFE2          	movff	tblptrh,fsr1h
  9605  003C34  50E7               	movf	indf1,w,c
  9606  003C36                     u5510:
  9607  003C36  0900               	iorlw	0
  9608  003C38  A4D8               	btfss	status,2,c
  9609  003C3A  EF21  F01E         	goto	u5521
  9610  003C3E  EF23  F01E         	goto	u5520
  9611  003C42                     u5521:
  9612  003C42  EFEB  F01D         	goto	l4418
  9613  003C46                     u5520:
  9614  003C46  0012               	return		;funcret
  9615  003C48                     __end_of_lcd_putc:
  9616                           	callstack 0
  9617                           
  9618 ;; *************** function _lcd_write_char *****************
  9619 ;; Defined at:
  9620 ;;		line 101 in file "./lcd.h"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;  a               1    wreg     unsigned char 
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;  a               1    3[COMRAM] unsigned char 
  9625 ;;  y               1    2[COMRAM] unsigned char 
  9626 ;;  temp            1    1[COMRAM] unsigned char 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  1    wreg      void 
  9629 ;; Registers used:
  9630 ;;		wreg, status,2, status,0, cstack
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9636 ;;      Params:         0       0       0       0       0       0       0       0       0
  9637 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9639 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9640 ;;Total ram usage:        3 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; Hardware stack levels required when called:    1
  9643 ;; This function calls:
  9644 ;;		_Lcd_Port
  9645 ;; This function is called by:
  9646 ;;		_lcd_putc
  9647 ;;		_main
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text37
  9652  0040EE                     __ptext37:
  9653                           	callstack 0
  9654  0040EE                     _lcd_write_char:
  9655                           	callstack 29
  9656                           
  9657                           ;incstack = 0
  9658                           ;lcd_write_char@a stored from wreg
  9659  0040EE  6E04               	movwf	lcd_write_char@a^0,c
  9660  0040F0                     
  9661                           ;./lcd.h: 101: void lcd_write_char(char a);./lcd.h: 102: {;./lcd.h: 103:    char temp,y;
      +                          ;./lcd.h: 104:    temp = a&0x0F;
  9662  0040F0  5004               	movf	lcd_write_char@a^0,w,c
  9663  0040F2  0B0F               	andlw	15
  9664  0040F4  6E02               	movwf	lcd_write_char@temp^0,c
  9665                           
  9666                           ;./lcd.h: 105:    y = a&0xF0;
  9667  0040F6  5004               	movf	lcd_write_char@a^0,w,c
  9668  0040F8  0BF0               	andlw	240
  9669  0040FA  6E03               	movwf	lcd_write_char@y^0,c
  9670  0040FC                     
  9671                           ;./lcd.h: 106:    RC0 = 1;
  9672  0040FC  8082               	bsf	3970,0,c	;volatile
  9673  0040FE                     
  9674                           ;./lcd.h: 107:    Lcd_Port(y>>4);
  9675  0040FE  3803               	swapf	lcd_write_char@y^0,w,c
  9676  004100  0B0F               	andlw	15
  9677  004102  EC1E  F01F         	call	_Lcd_Port
  9678  004106                     
  9679                           ;./lcd.h: 108:    RC1 = 1;
  9680  004106  8282               	bsf	3970,1,c	;volatile
  9681  004108                     
  9682                           ;./lcd.h: 109:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9683  004108  0E1A               	movlw	26
  9684  00410A                     u5657:
  9685  00410A  2EE8               	decfsz	wreg,f,c
  9686  00410C  D7FE               	bra	u5657
  9687  00410E  D000               	nop2	
  9688  004110                     
  9689                           ;./lcd.h: 110:    RC1 = 0;
  9690  004110  9282               	bcf	3970,1,c	;volatile
  9691  004112                     
  9692                           ;./lcd.h: 111:    Lcd_Port(temp);
  9693  004112  5002               	movf	lcd_write_char@temp^0,w,c
  9694  004114  EC1E  F01F         	call	_Lcd_Port
  9695  004118                     
  9696                           ;./lcd.h: 112:    RC1 = 1;
  9697  004118  8282               	bsf	3970,1,c	;volatile
  9698  00411A                     
  9699                           ;./lcd.h: 113:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9700  00411A  0E1A               	movlw	26
  9701  00411C                     u5667:
  9702  00411C  2EE8               	decfsz	wreg,f,c
  9703  00411E  D7FE               	bra	u5667
  9704  004120  D000               	nop2	
  9705  004122                     
  9706                           ;./lcd.h: 114:    RC1 = 0;
  9707  004122  9282               	bcf	3970,1,c	;volatile
  9708  004124  0012               	return		;funcret
  9709  004126                     __end_of_lcd_write_char:
  9710                           	callstack 0
  9711                           
  9712 ;; *************** function _lcd_init *****************
  9713 ;; Defined at:
  9714 ;;		line 82 in file "./lcd.h"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;		None
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;		None
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1    wreg      void 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2, cstack
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9728 ;;      Params:         0       0       0       0       0       0       0       0       0
  9729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9730 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9731 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9732 ;;Total ram usage:        1 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    2
  9735 ;; This function calls:
  9736 ;;		_Lcd_Cmd
  9737 ;;		_Lcd_Port
  9738 ;; This function is called by:
  9739 ;;		_main
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           	psect	text38
  9744  003C48                     __ptext38:
  9745                           	callstack 0
  9746  003C48                     _lcd_init:
  9747                           	callstack 28
  9748  003C48                     
  9749                           ;./lcd.h: 84:   Lcd_Port(0x00);
  9750  003C48  0E00               	movlw	0
  9751  003C4A  EC1E  F01F         	call	_Lcd_Port
  9752  003C4E                     
  9753                           ;./lcd.h: 85:    _delay((unsigned long)((20)*(8000000/4000.0)));
  9754  003C4E  0E34               	movlw	52
  9755  003C50  6E04               	movwf	??_lcd_init^0,c
  9756  003C52  0EF2               	movlw	242
  9757  003C54                     u5677:
  9758  003C54  2EE8               	decfsz	wreg,f,c
  9759  003C56  D7FE               	bra	u5677
  9760  003C58  2E04               	decfsz	??_lcd_init^0,f,c
  9761  003C5A  D7FC               	bra	u5677
  9762  003C5C                     
  9763                           ;./lcd.h: 86:   Lcd_Cmd(0x03);
  9764  003C5C  0E03               	movlw	3
  9765  003C5E  ECC1  F020         	call	_Lcd_Cmd
  9766  003C62                     
  9767                           ;./lcd.h: 87:    _delay((unsigned long)((5)*(8000000/4000.0)));
  9768  003C62  0E0D               	movlw	13
  9769  003C64  6E04               	movwf	??_lcd_init^0,c
  9770  003C66  0EFC               	movlw	252
  9771  003C68                     u5687:
  9772  003C68  2EE8               	decfsz	wreg,f,c
  9773  003C6A  D7FE               	bra	u5687
  9774  003C6C  2E04               	decfsz	??_lcd_init^0,f,c
  9775  003C6E  D7FC               	bra	u5687
  9776  003C70                     
  9777                           ;./lcd.h: 88:   Lcd_Cmd(0x03);
  9778  003C70  0E03               	movlw	3
  9779  003C72  ECC1  F020         	call	_Lcd_Cmd
  9780  003C76                     
  9781                           ;./lcd.h: 89:    _delay((unsigned long)((11)*(8000000/4000.0)));
  9782  003C76  0E1D               	movlw	29
  9783  003C78  6E04               	movwf	??_lcd_init^0,c
  9784  003C7A  0E91               	movlw	145
  9785  003C7C                     u5697:
  9786  003C7C  2EE8               	decfsz	wreg,f,c
  9787  003C7E  D7FE               	bra	u5697
  9788  003C80  2E04               	decfsz	??_lcd_init^0,f,c
  9789  003C82  D7FC               	bra	u5697
  9790  003C84  F000               	nop	
  9791  003C86                     
  9792                           ;./lcd.h: 90:   Lcd_Cmd(0x03);
  9793  003C86  0E03               	movlw	3
  9794  003C88  ECC1  F020         	call	_Lcd_Cmd
  9795  003C8C                     
  9796                           ;./lcd.h: 92:   Lcd_Cmd(0x02);
  9797  003C8C  0E02               	movlw	2
  9798  003C8E  ECC1  F020         	call	_Lcd_Cmd
  9799  003C92                     
  9800                           ;./lcd.h: 93:   Lcd_Cmd(0x02);
  9801  003C92  0E02               	movlw	2
  9802  003C94  ECC1  F020         	call	_Lcd_Cmd
  9803  003C98                     
  9804                           ;./lcd.h: 94:   Lcd_Cmd(0x08);
  9805  003C98  0E08               	movlw	8
  9806  003C9A  ECC1  F020         	call	_Lcd_Cmd
  9807  003C9E                     
  9808                           ;./lcd.h: 95:   Lcd_Cmd(0x00);
  9809  003C9E  0E00               	movlw	0
  9810  003CA0  ECC1  F020         	call	_Lcd_Cmd
  9811  003CA4                     
  9812                           ;./lcd.h: 96:   Lcd_Cmd(0x0C);
  9813  003CA4  0E0C               	movlw	12
  9814  003CA6  ECC1  F020         	call	_Lcd_Cmd
  9815  003CAA                     
  9816                           ;./lcd.h: 97:   Lcd_Cmd(0x00);
  9817  003CAA  0E00               	movlw	0
  9818  003CAC  ECC1  F020         	call	_Lcd_Cmd
  9819  003CB0                     
  9820                           ;./lcd.h: 98:   Lcd_Cmd(0x06);
  9821  003CB0  0E06               	movlw	6
  9822  003CB2  ECC1  F020         	call	_Lcd_Cmd
  9823  003CB6  0012               	return		;funcret
  9824  003CB8                     __end_of_lcd_init:
  9825                           	callstack 0
  9826                           
  9827 ;; *************** function _lcd_gotoxy *****************
  9828 ;; Defined at:
  9829 ;;		line 61 in file "./lcd.h"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  a               1    wreg     unsigned char 
  9832 ;;  b               1    3[COMRAM] unsigned char 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  a               1    4[COMRAM] unsigned char 
  9835 ;;  temp            1    7[COMRAM] unsigned char 
  9836 ;;  y               1    6[COMRAM] unsigned char 
  9837 ;;  z               1    5[COMRAM] unsigned char 
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0, cstack
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9847 ;;      Params:         1       0       0       0       0       0       0       0       0
  9848 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9850 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9851 ;;Total ram usage:        5 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:    2
  9854 ;; This function calls:
  9855 ;;		_Lcd_Cmd
  9856 ;; This function is called by:
  9857 ;;		_main
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           	psect	text39
  9862  003CB8                     __ptext39:
  9863                           	callstack 0
  9864  003CB8                     _lcd_gotoxy:
  9865                           	callstack 28
  9866                           
  9867                           ;incstack = 0
  9868                           ;lcd_gotoxy@a stored from wreg
  9869  003CB8  6E05               	movwf	lcd_gotoxy@a^0,c
  9870  003CBA                     
  9871                           ;./lcd.h: 61: void lcd_gotoxy(char a, char b);./lcd.h: 62: {;./lcd.h: 63:    char temp,z
      +                          ,y;;./lcd.h: 64:    if(a == 1)
  9872  003CBA  0405               	decf	lcd_gotoxy@a^0,w,c
  9873  003CBC  A4D8               	btfss	status,2,c
  9874  003CBE  EF63  F01E         	goto	u5481
  9875  003CC2  EF65  F01E         	goto	u5480
  9876  003CC6                     u5481:
  9877  003CC6  EF76  F01E         	goto	l4380
  9878  003CCA                     u5480:
  9879  003CCA                     
  9880                           ;./lcd.h: 65:    {;./lcd.h: 66:      temp = 0x80 + b - 1;
  9881  003CCA  5004               	movf	lcd_gotoxy@b^0,w,c
  9882  003CCC  0F7F               	addlw	127
  9883  003CCE  6E08               	movwf	lcd_gotoxy@temp^0,c
  9884                           
  9885                           ;./lcd.h: 67:       z = temp>>4;
  9886  003CD0  3808               	swapf	lcd_gotoxy@temp^0,w,c
  9887  003CD2  0B0F               	andlw	15
  9888  003CD4  6E06               	movwf	lcd_gotoxy@z^0,c
  9889                           
  9890                           ;./lcd.h: 68:       y = temp & 0x0F;
  9891  003CD6  5008               	movf	lcd_gotoxy@temp^0,w,c
  9892  003CD8  0B0F               	andlw	15
  9893  003CDA  6E07               	movwf	lcd_gotoxy@y^0,c
  9894  003CDC                     
  9895                           ;./lcd.h: 69:       Lcd_Cmd(z);
  9896  003CDC  5006               	movf	lcd_gotoxy@z^0,w,c
  9897  003CDE  ECC1  F020         	call	_Lcd_Cmd
  9898  003CE2                     
  9899                           ;./lcd.h: 70:       Lcd_Cmd(y);
  9900  003CE2  5007               	movf	lcd_gotoxy@y^0,w,c
  9901  003CE4  ECC1  F020         	call	_Lcd_Cmd
  9902                           
  9903                           ;./lcd.h: 71:    }
  9904  003CE8  EF8E  F01E         	goto	l41
  9905  003CEC                     l4380:
  9906  003CEC  0E02               	movlw	2
  9907  003CEE  1805               	xorwf	lcd_gotoxy@a^0,w,c
  9908  003CF0  A4D8               	btfss	status,2,c
  9909  003CF2  EF7D  F01E         	goto	u5491
  9910  003CF6  EF7F  F01E         	goto	u5490
  9911  003CFA                     u5491:
  9912  003CFA  EF8E  F01E         	goto	l41
  9913  003CFE                     u5490:
  9914  003CFE                     
  9915                           ;./lcd.h: 73:    {;./lcd.h: 74:       temp = 0xC0 + b - 1;
  9916  003CFE  5004               	movf	lcd_gotoxy@b^0,w,c
  9917  003D00  0FBF               	addlw	191
  9918  003D02  6E08               	movwf	lcd_gotoxy@temp^0,c
  9919                           
  9920                           ;./lcd.h: 75:       z = temp>>4;
  9921  003D04  3808               	swapf	lcd_gotoxy@temp^0,w,c
  9922  003D06  0B0F               	andlw	15
  9923  003D08  6E06               	movwf	lcd_gotoxy@z^0,c
  9924                           
  9925                           ;./lcd.h: 76:       y = temp & 0x0F;
  9926  003D0A  5008               	movf	lcd_gotoxy@temp^0,w,c
  9927  003D0C  0B0F               	andlw	15
  9928  003D0E  6E07               	movwf	lcd_gotoxy@y^0,c
  9929  003D10                     
  9930                           ;./lcd.h: 77:       Lcd_Cmd(z);
  9931  003D10  5006               	movf	lcd_gotoxy@z^0,w,c
  9932  003D12  ECC1  F020         	call	_Lcd_Cmd
  9933  003D16                     
  9934                           ;./lcd.h: 78:       Lcd_Cmd(y);
  9935  003D16  5007               	movf	lcd_gotoxy@y^0,w,c
  9936  003D18  ECC1  F020         	call	_Lcd_Cmd
  9937  003D1C                     l41:
  9938  003D1C  0012               	return		;funcret
  9939  003D1E                     __end_of_lcd_gotoxy:
  9940                           	callstack 0
  9941                           
  9942 ;; *************** function _lcd_clear *****************
  9943 ;; Defined at:
  9944 ;;		line 55 in file "./lcd.h"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;		None
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;		None
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  2   34[None  ] int 
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, cstack
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9958 ;;      Params:         0       0       0       0       0       0       0       0       0
  9959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9961 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9962 ;;Total ram usage:        0 bytes
  9963 ;; Hardware stack levels used:    1
  9964 ;; Hardware stack levels required when called:    2
  9965 ;; This function calls:
  9966 ;;		_Lcd_Cmd
  9967 ;; This function is called by:
  9968 ;;		_main
  9969 ;; This function uses a non-reentrant model
  9970 ;;
  9971                           
  9972                           	psect	text40
  9973  0041BE                     __ptext40:
  9974                           	callstack 0
  9975  0041BE                     _lcd_clear:
  9976                           	callstack 28
  9977  0041BE                     
  9978                           ;./lcd.h: 57:    Lcd_Cmd(0);
  9979  0041BE  0E00               	movlw	0
  9980  0041C0  ECC1  F020         	call	_Lcd_Cmd
  9981                           
  9982                           ;./lcd.h: 58:    Lcd_Cmd(1);
  9983  0041C4  0E01               	movlw	1
  9984  0041C6  ECC1  F020         	call	_Lcd_Cmd
  9985  0041CA  0012               	return		;funcret
  9986  0041CC                     __end_of_lcd_clear:
  9987                           	callstack 0
  9988                           
  9989 ;; *************** function _Lcd_Cmd *****************
  9990 ;; Defined at:
  9991 ;;		line 46 in file "./lcd.h"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;  a               1    wreg     unsigned char 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  a               1    2[COMRAM] unsigned char 
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, status,2, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0
 10006 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10007 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10008 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10009 ;;Total ram usage:        2 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:    1
 10012 ;; This function calls:
 10013 ;;		_Lcd_Port
 10014 ;; This function is called by:
 10015 ;;		_lcd_clear
 10016 ;;		_lcd_gotoxy
 10017 ;;		_lcd_init
 10018 ;;		_lcd_shift_right
 10019 ;;		_lcd_shift_left
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           	psect	text41
 10024  004182                     __ptext41:
 10025                           	callstack 0
 10026  004182                     _Lcd_Cmd:
 10027                           	callstack 28
 10028                           
 10029                           ;incstack = 0
 10030                           ;Lcd_Cmd@a stored from wreg
 10031  004182  6E03               	movwf	Lcd_Cmd@a^0,c
 10032  004184                     
 10033                           ;./lcd.h: 46: void Lcd_Cmd(char a);./lcd.h: 47: {;./lcd.h: 48:    RC0 = 0;
 10034  004184  9082               	bcf	3970,0,c	;volatile
 10035  004186                     
 10036                           ;./lcd.h: 49:    Lcd_Port(a);
 10037  004186  5003               	movf	Lcd_Cmd@a^0,w,c
 10038  004188  EC1E  F01F         	call	_Lcd_Port
 10039  00418C                     
 10040                           ;./lcd.h: 50:    RC1 = 1;
 10041  00418C  8282               	bsf	3970,1,c	;volatile
 10042  00418E                     
 10043                           ;./lcd.h: 51:         _delay((unsigned long)((4)*(8000000/4000.0)));
 10044  00418E  0E0B               	movlw	11
 10045  004190  6E02               	movwf	??_Lcd_Cmd^0,c
 10046  004192  0E62               	movlw	98
 10047  004194                     u5707:
 10048  004194  2EE8               	decfsz	wreg,f,c
 10049  004196  D7FE               	bra	u5707
 10050  004198  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 10051  00419A  D7FC               	bra	u5707
 10052  00419C  D000               	nop2	
 10053  00419E                     
 10054                           ;./lcd.h: 52:         RC1 = 0;
 10055  00419E  9282               	bcf	3970,1,c	;volatile
 10056  0041A0  0012               	return		;funcret
 10057  0041A2                     __end_of_Lcd_Cmd:
 10058                           	callstack 0
 10059                           
 10060 ;; *************** function _Lcd_Port *****************
 10061 ;; Defined at:
 10062 ;;		line 24 in file "./lcd.h"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  a               1    wreg     unsigned char 
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;  a               1    0[COMRAM] unsigned char 
 10067 ;; Return value:  Size  Location     Type
 10068 ;;                  1    wreg      void 
 10069 ;; Registers used:
 10070 ;;		wreg
 10071 ;; Tracked objects:
 10072 ;;		On entry : 0/0
 10073 ;;		On exit  : 0/0
 10074 ;;		Unchanged: 0/0
 10075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10076 ;;      Params:         0       0       0       0       0       0       0       0       0
 10077 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10078 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10079 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10080 ;;Total ram usage:        1 bytes
 10081 ;; Hardware stack levels used:    1
 10082 ;; This function calls:
 10083 ;;		Nothing
 10084 ;; This function is called by:
 10085 ;;		_Lcd_Cmd
 10086 ;;		_lcd_init
 10087 ;;		_lcd_write_char
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           	psect	text42
 10092  003E3C                     __ptext42:
 10093                           	callstack 0
 10094  003E3C                     _Lcd_Port:
 10095                           	callstack 29
 10096                           
 10097                           ;incstack = 0
 10098                           ;Lcd_Port@a stored from wreg
 10099  003E3C  6E01               	movwf	Lcd_Port@a^0,c
 10100  003E3E                     
 10101                           ;./lcd.h: 24: void Lcd_Port(char a);./lcd.h: 25: {;./lcd.h: 26:    if(a & 1)
 10102  003E3E  A001               	btfss	Lcd_Port@a^0,0,c
 10103  003E40  EF24  F01F         	goto	u5201
 10104  003E44  EF26  F01F         	goto	u5200
 10105  003E48                     u5201:
 10106  003E48  EF29  F01F         	goto	l21
 10107  003E4C                     u5200:
 10108  003E4C                     
 10109                           ;./lcd.h: 27:       RC2 = 1;
 10110  003E4C  8482               	bsf	3970,2,c	;volatile
 10111  003E4E  EF2A  F01F         	goto	l4164
 10112  003E52                     l21:
 10113                           
 10114                           ;./lcd.h: 29:       RC2 = 0;
 10115  003E52  9482               	bcf	3970,2,c	;volatile
 10116  003E54                     l4164:
 10117                           
 10118                           ;./lcd.h: 31:    if(a & 2)
 10119  003E54  A201               	btfss	Lcd_Port@a^0,1,c
 10120  003E56  EF2F  F01F         	goto	u5211
 10121  003E5A  EF31  F01F         	goto	u5210
 10122  003E5E                     u5211:
 10123  003E5E  EF34  F01F         	goto	l23
 10124  003E62                     u5210:
 10125  003E62                     
 10126                           ;./lcd.h: 32:       RC4 = 1;
 10127  003E62  8882               	bsf	3970,4,c	;volatile
 10128  003E64  EF35  F01F         	goto	l4168
 10129  003E68                     l23:
 10130                           
 10131                           ;./lcd.h: 34:       RC4 = 0;
 10132  003E68  9882               	bcf	3970,4,c	;volatile
 10133  003E6A                     l4168:
 10134                           
 10135                           ;./lcd.h: 36:    if(a & 4)
 10136  003E6A  A401               	btfss	Lcd_Port@a^0,2,c
 10137  003E6C  EF3A  F01F         	goto	u5221
 10138  003E70  EF3C  F01F         	goto	u5220
 10139  003E74                     u5221:
 10140  003E74  EF3F  F01F         	goto	l25
 10141  003E78                     u5220:
 10142  003E78                     
 10143                           ;./lcd.h: 37:       RC5 = 1;
 10144  003E78  8A82               	bsf	3970,5,c	;volatile
 10145  003E7A  EF40  F01F         	goto	l4172
 10146  003E7E                     l25:
 10147                           
 10148                           ;./lcd.h: 39:       RC5 = 0;
 10149  003E7E  9A82               	bcf	3970,5,c	;volatile
 10150  003E80                     l4172:
 10151                           
 10152                           ;./lcd.h: 41:    if(a & 8)
 10153  003E80  A601               	btfss	Lcd_Port@a^0,3,c
 10154  003E82  EF45  F01F         	goto	u5231
 10155  003E86  EF47  F01F         	goto	u5230
 10156  003E8A                     u5231:
 10157  003E8A  EF4A  F01F         	goto	l27
 10158  003E8E                     u5230:
 10159  003E8E                     
 10160                           ;./lcd.h: 42:       RC6 = 1;
 10161  003E8E  8C82               	bsf	3970,6,c	;volatile
 10162  003E90  EF4B  F01F         	goto	l29
 10163  003E94                     l27:
 10164                           
 10165                           ;./lcd.h: 44:       RC6 = 0;
 10166  003E94  9C82               	bcf	3970,6,c	;volatile
 10167  003E96                     l29:
 10168  003E96  0012               	return		;funcret
 10169  003E98                     __end_of_Lcd_Port:
 10170                           	callstack 0
 10171                           
 10172                           	psect	rparam
 10173  0000                     
 10174                           	psect	idloc
 10175                           
 10176                           ;Config register IDLOC0 @ 0x200000
 10177                           ;	unspecified, using default values
 10178  200000                     	org	2097152
 10179  200000  FF                 	db	255
 10180                           
 10181                           ;Config register IDLOC1 @ 0x200001
 10182                           ;	unspecified, using default values
 10183  200001                     	org	2097153
 10184  200001  FF                 	db	255
 10185                           
 10186                           ;Config register IDLOC2 @ 0x200002
 10187                           ;	unspecified, using default values
 10188  200002                     	org	2097154
 10189  200002  FF                 	db	255
 10190                           
 10191                           ;Config register IDLOC3 @ 0x200003
 10192                           ;	unspecified, using default values
 10193  200003                     	org	2097155
 10194  200003  FF                 	db	255
 10195                           
 10196                           ;Config register IDLOC4 @ 0x200004
 10197                           ;	unspecified, using default values
 10198  200004                     	org	2097156
 10199  200004  FF                 	db	255
 10200                           
 10201                           ;Config register IDLOC5 @ 0x200005
 10202                           ;	unspecified, using default values
 10203  200005                     	org	2097157
 10204  200005  FF                 	db	255
 10205                           
 10206                           ;Config register IDLOC6 @ 0x200006
 10207                           ;	unspecified, using default values
 10208  200006                     	org	2097158
 10209  200006  FF                 	db	255
 10210                           
 10211                           ;Config register IDLOC7 @ 0x200007
 10212                           ;	unspecified, using default values
 10213  200007                     	org	2097159
 10214  200007  FF                 	db	255
 10215                           
 10216                           	psect	config
 10217                           
 10218                           ;Config register CONFIG1L @ 0x300000
 10219                           ;	PLL Prescaler Selection bits
 10220                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10221                           ;	System Clock Postscaler Selection bits
 10222                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10223                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10224                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10225  300000                     	org	3145728
 10226  300000  00                 	db	0
 10227                           
 10228                           ;Config register CONFIG1H @ 0x300001
 10229                           ;	Oscillator Selection bits
 10230                           ;	FOSC = HS, HS oscillator (HS)
 10231                           ;	Fail-Safe Clock Monitor Enable bit
 10232                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10233                           ;	Internal/External Oscillator Switchover bit
 10234                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10235  300001                     	org	3145729
 10236  300001  0C                 	db	12
 10237                           
 10238                           ;Config register CONFIG2L @ 0x300002
 10239                           ;	Power-up Timer Enable bit
 10240                           ;	PWRT = ON, PWRT enabled
 10241                           ;	Brown-out Reset Enable bits
 10242                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10243                           ;	Brown-out Reset Voltage bits
 10244                           ;	BORV = 3, Minimum setting 2.05V
 10245                           ;	USB Voltage Regulator Enable bit
 10246                           ;	VREGEN = OFF, USB voltage regulator disabled
 10247  300002                     	org	3145730
 10248  300002  1E                 	db	30
 10249                           
 10250                           ;Config register CONFIG2H @ 0x300003
 10251                           ;	Watchdog Timer Enable bit
 10252                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10253                           ;	Watchdog Timer Postscale Select bits
 10254                           ;	WDTPS = 32768, 1:32768
 10255  300003                     	org	3145731
 10256  300003  1E                 	db	30
 10257                           
 10258                           ; Padding undefined space
 10259  300004                     	org	3145732
 10260  300004  FF                 	db	255
 10261                           
 10262                           ;Config register CONFIG3H @ 0x300005
 10263                           ;	CCP2 MUX bit
 10264                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10265                           ;	PORTB A/D Enable bit
 10266                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10267                           ;	Low-Power Timer 1 Oscillator Enable bit
 10268                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10269                           ;	MCLR Pin Enable bit
 10270                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10271  300005                     	org	3145733
 10272  300005  83                 	db	131
 10273                           
 10274                           ;Config register CONFIG4L @ 0x300006
 10275                           ;	Stack Full/Underflow Reset Enable bit
 10276                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10277                           ;	Single-Supply ICSP Enable bit
 10278                           ;	LVP = OFF, Single-Supply ICSP disabled
 10279                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10280                           ;	ICPRT = OFF, ICPORT disabled
 10281                           ;	Extended Instruction Set Enable bit
 10282                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10283                           ;	Background Debugger Enable bit
 10284                           ;	DEBUG = 0x1, unprogrammed default
 10285  300006                     	org	3145734
 10286  300006  81                 	db	129
 10287                           
 10288                           ; Padding undefined space
 10289  300007                     	org	3145735
 10290  300007  FF                 	db	255
 10291                           
 10292                           ;Config register CONFIG5L @ 0x300008
 10293                           ;	Code Protection bit
 10294                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10295                           ;	Code Protection bit
 10296                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10297                           ;	Code Protection bit
 10298                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10299                           ;	Code Protection bit
 10300                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10301  300008                     	org	3145736
 10302  300008  0F                 	db	15
 10303                           
 10304                           ;Config register CONFIG5H @ 0x300009
 10305                           ;	Boot Block Code Protection bit
 10306                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10307                           ;	Data EEPROM Code Protection bit
 10308                           ;	CPD = OFF, Data EEPROM is not code-protected
 10309  300009                     	org	3145737
 10310  300009  C0                 	db	192
 10311                           
 10312                           ;Config register CONFIG6L @ 0x30000A
 10313                           ;	Write Protection bit
 10314                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10315                           ;	Write Protection bit
 10316                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10317                           ;	Write Protection bit
 10318                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10319                           ;	Write Protection bit
 10320                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10321  30000A                     	org	3145738
 10322  30000A  0F                 	db	15
 10323                           
 10324                           ;Config register CONFIG6H @ 0x30000B
 10325                           ;	Configuration Register Write Protection bit
 10326                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10327                           ;	Boot Block Write Protection bit
 10328                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10329                           ;	Data EEPROM Write Protection bit
 10330                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10331  30000B                     	org	3145739
 10332  30000B  E0                 	db	224
 10333                           
 10334                           ;Config register CONFIG7L @ 0x30000C
 10335                           ;	Table Read Protection bit
 10336                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10337                           ;	Table Read Protection bit
 10338                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10339                           ;	Table Read Protection bit
 10340                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10341                           ;	Table Read Protection bit
 10342                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10343  30000C                     	org	3145740
 10344  30000C  0F                 	db	15
 10345                           
 10346                           ;Config register CONFIG7H @ 0x30000D
 10347                           ;	Boot Block Table Read Protection bit
 10348                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10349  30000D                     	org	3145741
 10350  30000D  40                 	db	64
 10351                           tosu	equ	0xFFF
 10352                           tosh	equ	0xFFE
 10353                           tosl	equ	0xFFD
 10354                           stkptr	equ	0xFFC
 10355                           pclatu	equ	0xFFB
 10356                           pclath	equ	0xFFA
 10357                           pcl	equ	0xFF9
 10358                           tblptru	equ	0xFF8
 10359                           tblptrh	equ	0xFF7
 10360                           tblptrl	equ	0xFF6
 10361                           tablat	equ	0xFF5
 10362                           prodh	equ	0xFF4
 10363                           prodl	equ	0xFF3
 10364                           indf0	equ	0xFEF
 10365                           postinc0	equ	0xFEE
 10366                           postdec0	equ	0xFED
 10367                           preinc0	equ	0xFEC
 10368                           plusw0	equ	0xFEB
 10369                           fsr0h	equ	0xFEA
 10370                           fsr0l	equ	0xFE9
 10371                           wreg	equ	0xFE8
 10372                           indf1	equ	0xFE7
 10373                           postinc1	equ	0xFE6
 10374                           postdec1	equ	0xFE5
 10375                           preinc1	equ	0xFE4
 10376                           plusw1	equ	0xFE3
 10377                           fsr1h	equ	0xFE2
 10378                           fsr1l	equ	0xFE1
 10379                           bsr	equ	0xFE0
 10380                           indf2	equ	0xFDF
 10381                           postinc2	equ	0xFDE
 10382                           postdec2	equ	0xFDD
 10383                           preinc2	equ	0xFDC
 10384                           plusw2	equ	0xFDB
 10385                           fsr2h	equ	0xFDA
 10386                           fsr2l	equ	0xFD9
 10387                           status	equ	0xFD8

Data Sizes:
    Strings     152
    Constant    0
    Data        6
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     88     130
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer_lcd(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[8]), STR_8(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[8]), STR_8(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[8]), STR_8(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[8]), STR_8(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> buffer_lcd(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S528_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer_lcd(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer_lcd(BANK0[20]), 

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer_lcd(BANK0[20]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[15]), STR_3(CODE[13]), STR_2(CODE[16]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _lcd_shift_right->_Lcd_Cmd
    _lcd_shift_left->_Lcd_Cmd
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_init->_Lcd_Cmd
    _lcd_gotoxy->_Lcd_Cmd
    _lcd_clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   37242
                                             91 COMRAM     3     3      0
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                     _lcd_shift_left
                    _lcd_shift_right
                     _lcd_write_char
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   34352
                                             81 COMRAM    10    10      0
                                             80 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   33839
                                             73 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   33444
                                             63 COMRAM    10     4      6
                                             56 BANK0     24    24      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22316
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_shift_right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_shift_left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             6     4      2     952
                                              4 COMRAM     6     4      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (1) _lcd_write_char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           5     4      1    1140
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_clear
     _Lcd_Cmd
       _Lcd_Port
   _lcd_gotoxy
     _Lcd_Cmd
       _Lcd_Port
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _lcd_putc
     _lcd_write_char
       _Lcd_Port
   _lcd_shift_left
     _Lcd_Cmd
       _Lcd_Port
   _lcd_shift_right
     _Lcd_Cmd
       _Lcd_Port
   _lcd_write_char
     _Lcd_Port
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      82       5       81.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     130      20        0.0%
DATA                 0      0     130       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Dec 12 21:56:40 2020

            ___fldiv@aexp 0019              ___fldiv@bexp 0018              ___fldiv@sign 0011  
                      l21 3E52                        l23 3E68                        l32 41A0  
                      l25 3E7E                        l41 3D1C                        l27 3E94  
                      l35 41CA                        l44 3CB6                        l29 3E96  
                      l53 3C46                        l47 4124                        l56 41AE  
                      l80 4180                        l59 41BC              ___awdiv@sign 0006  
     ___wmul@multiplicand 0003                       l207 343C                       l311 3A6E  
                     l324 3B1E                       l350 3646                       l345 3600  
                     l194 32D8                       l354 40B4                       l610 1D7E  
                     l339 3BC8                       l701 2356                       l711 2486  
                     l703 23CE                       l704 23BC                       l608 1DCA  
                     l801 392C                       l625 1EE4                       l617 209A  
                     l609 1DB8                       l377 3542                       l634 1FB4  
                     l650 3F7E                       l635 1FA2                       l804 396E  
                     l812 2900                       l806 39AA                       l814 2908  
                     l662 285E                       l832 2B42                       l664 26BE  
                     l673 2704                       l850 14F0                       l675 277C  
                     l667 2682                       l676 276A                       l694 2160  
                     l758 3F38                       l698 24C4                       l939 15E4  
                     l868 0C86                       l980 3D76                       l981 3D7E  
                     l974 1B24                       l966 1BDA                       l991 3744  
                     l896 10C6                       l996 403C                       l999 4044  
                     _RC0 007C10                       _RC1 007C11                       _RC2 007C12  
                     _RC4 007C14                       _RC5 007C15                       _RC6 007C16  
                     _abs 4006                       _pad 38E6              ___awmod@sign 0006  
                     wreg 000FE8              ___flmul@aexp 0012              ___flmul@bexp 0013  
             _tolower$830 000D              ___flmul@sign 000D              ___flmul@temp 0018  
            ___flmul@prod 0014               lcd_gotoxy@a 0005               lcd_gotoxy@b 0004  
         ?_lcd_shift_left 0001               lcd_gotoxy@y 0007               lcd_gotoxy@z 0006  
            ___fltol@exp1 000A                      l1030 3150                      l1102 381A  
                    l1112 3DD6                      l1027 3148                      ?_abs 0013  
                    l1036 2FC0                      l1060 407C                      l1117 3DDE  
                    l1046 40EC                      l1054 3EE8                      l1039 2F04  
                    l3000 1EC4                      l3010 1F1E                      l3002 1ED4  
                    l1075 38E4                      l1083 3FC2                      l3100 3156  
                    l3020 1F4E                      l3012 1F28                      l3004 1EFA  
                    l1092 3E3A                      l3110 31B6                      l3102 3164  
                    l1086 41D2                      l3030 1F76                      l3022 1F52  
                    l3014 1F36                      l3006 1F0A                      l3120 3200  
                    l3112 31BA                      l3104 3184                      l3200 2538  
                    l3040 1FD0                      l3032 1F84                      l3024 1F62  
                    l3016 1F38                      l4000 11EA                      l3130 3270  
                    l3122 320E                      l3114 31C6                      l3106 3188  
                    l1098 415A                      l3210 2578                      l3202 2546  
                    l3050 203A                      l3042 1FDE                      l3034 1F9A  
                    l3018 1F46                      l3026 1F64                      l4010 121E  
                    l4002 11F0                      l4100 2FD6                      l3132 3282  
                    l3124 3220                      l3116 31E4                      l3108 3196  
                    l3300 283A                      l3220 25B8                      l3212 257A  
                    l3204 2548                      l3060 2074                      l3052 205A  
                    l3044 2018                      l3028 1F72                      l4004 11F6  
                    l4012 1224                      l4020 12BC                      l4110 3034  
                    l4102 2FDA                      l3126 324E                      l3118 31EC  
                    l3134 3288                      l3150 3310                      l3142 32DA  
                    l3070 3F80                      l3302 283E                      l3230 25E8  
                    l3222 25C0                      l3206 2558                      l3214 2582  
                    l3062 207A                      l3054 205E                      l3038 1FC4  
                    l3046 201A                      l4030 1326                      l4022 12DA  
                    l4014 127C                      l4006 1208                      l4120 3060  
                    l4104 2FDE                      l3136 3298                      l3128 326E  
                    l3160 3378                      l3152 331E                      l3144 32DE  
                    l3072 3F8C                      l3080 4132                      l3304 284C  
                    l3240 2626                      l3232 25E8                      l3224 25C4  
                    l3216 2592                      l3208 2568                      l3400 2346  
                    l3320 20B6                      l3064 2088                      l3056 206C  
                    l3048 202A                      l4040 1364                      l4032 132A  
                    l4024 12F6                      l4016 12B0                      l4008 121A  
                    l4130 3108                      l4122 3094                      l4114 303A  
                    l4106 2FFA                      l3138 32B8                      l3162 3386  
                    l3170 33EC                      l3154 333E                      l3146 32EC  
                    l3074 3F9E                      l3082 4136                      l3306 2852  
                    l3250 2672                      l3242 2636                      l3218 25A8  
                    l3410 2386                      l3402 2354                      l3330 20EE  
                    l3322 20B8                      l3066 208A                      l3058 2072  
                    l4050 1396                      l4042 136C                      l4034 133A  
                    l4026 1308                      l4018 12B8                      l4210 157E  
                    l4202 156C                      l3092 415C                      l4132 311A  
                    l4116 3050                      l4108 3030                      l3172 33FC  
                    l3164 33B4                      l3156 335C                      l3148 330C  
                    l3076 3FA2                      l3084 414E                      l3500 3A82  
                    l3308 2854                      l3260 26BC                      l3252 2680  
                    l3244 2646                      l3236 25FC                      l3228 25D8  
                    l3180 24D2                      l3420 23F8                      l3412 23B4  
                    l3404 2366                      l3340 211A                      l3332 20FE  
                    l3324 20C8                      l3316 209C                      l4052 139C  
                    l4060 13EC                      l4044 137A                      l4036 134C  
                    l4028 1316                      l4140 3746                      l4220 164E  
                    l4212 15D2                      l3094 4178                      l4134 312C  
                    l4126 30CA                      l4118 3058                      l3174 341C  
                    l3166 33D4                      l3158 3364                      l3078 4126  
                    l3510 3AB6                      l3502 3A8A                      l3270 2702  
                    l3262 26CE                      l3254 268C                      l3246 264E  
                    l3238 2616                      l3190 2512                      l3182 24E0  
                    l3430 246E                      l3422 2422                      l3406 2374  
                    l3350 2170                      l3342 212A                      l3334 2104  
                    l3326 20D8                      l3318 20A8                      l4070 143C  
                    l4062 13FE                      l4054 13C2                      l4046 1382  
                    l4038 1354                      l4150 37A2                      l4142 3770  
                    l4302 1B38                      l4222 165C                      l4214 15F2  
                    l4206 1572                      l4160 3E3E                      l4400 3C86  
                    l3168 33E6                      l3520 3AF2                      l3512 3ABE  
                    l3504 3A8E                      l3280 2762                      l3264 26E4  
                    l3272 2714                      l3256 26AA                      l3248 265E  
                    l3192 2514                      l3184 24E2                      l3432 248A  
                    l3440 24B0                      l3416 23DE                      l3424 2426  
                    l3408 2378                      l3360 21AA                      l3352 2180  
                    l3344 213A                      l3336 210A                      l3328 20E8  
                    l3600 34CE                      l3088 4046                      l4072 1444  
                    l4064 1418                      l4056 13DE                      l4048 138A  
                    l4152 37BE                      l4320 1BC8                      l4304 1B5C  
                    l4312 1B8A                      l4240 172C                      l4232 16E0  
                    l4224 166A                      l4216 15F4                      l4170 3E78  
                    l4162 3E4C                      l4410 3CA4                      l4402 3C8C  
                    l3098 3152                      l3522 3AF8                      l3514 3AC6  
                    l3506 3A9C                      l3290 27D0                      l3274 2722  
                    l3266 26EA                      l3258 26AC                      l3186 24F2  
                    l3194 251C                      l3178 24C6                      l3442 24B4  
                    l3434 249A                      l3426 2440                      l3418 23EA  
                    l3370 21FC                      l3362 21C0                      l3346 214A  
                    l3338 2118                      l3610 34F6                      l3602 34D8  
                    l4090 14CA                      l4082 1494                      l4074 1454  
                    l4066 141E                      l4058 13E6                      l4154 37D0  
                    l4146 377C                      l4314 1B98                      l4306 1B6A  
                    l4242 1750                      l4226 168A                      l4234 16F2  
                    l4218 1618                      l4172 3E80                      l4164 3E54  
                    l4340 419E                      l4332 4184                      l4412 3CAA  
                    l4404 3C92                      l4420 3C06                      l3460 39CA  
                    l3452 39AC                      l3516 3AD4                      l3524 3AFE  
                    l3508 3AA4                      l3284 278C                      l3292 27D4  
                    l3276 2726                      l3268 26F4                      l3196 252C  
                    l3188 2502                      l3540 3B9C                      l3532 3B20  
                    l3436 24A8                      l3428 2454                      l3380 2242  
                    l3372 220A                      l3364 21CC                      l3356 2194  
                    l3348 2150                      l2900 1C82                      l3612 3502  
                    l3604 34E2                      l3700 2F28                      l4092 14D0  
                    l4084 14A6                      l4076 145A                      l4068 1430  
                    l4156 37F8                      l4148 378A                      l4308 1B7E  
                    l4260 1876                      l4252 1800                      l4244 178A  
                    l4236 1716                      l4228 1698                      l4180 1524  
                    l4500 2C58                      l4174 3E8E                      l4166 3E62  
                    l4334 4186                      l4414 3CB0                      l4406 3C98  
                    l4350 4108                      l4342 40F0                      l4422 3C0A  
                    l3630 3924                      l3622 38E6                      l3470 39FE  
                    l3462 39D8                      l3454 39B0                      l3526 3B0E  
                    l3518 3AEA                      l3294 27EE                      l3286 2798  
                    l3278 2734                      l3198 2532                      l3542 3BC0  
                    l3534 3B4E                      l3550 3572                      l3438 24AA  
                    l3390 22B0                      l3382 225C                      l3374 2216  
                    l3366 21E4                      l3358 21A0                      l2910 1CBC  
                    l2902 1C92                      l3446 3F3A                      l3614 3512  
                    l3702 2F64                      l4086 14B2                      l4078 1460  
                    l4270 1948                      l4262 1886                      l4246 17AA  
                    l4238 171E                      l4254 1812                      l4190 155A  
                    l4182 1536                      l4318 1BA4                      l4430 3EFA  
                    l4510 2C84                      l4502 2C5A                      l4168 3E6A  
                    l4336 418C                      l4408 3C9E                      l4360 4122  
                    l4352 4110                      l4344 40FC                      l4416 3BCA  
                    l4424 41A2                      l3712 40B6                      l3720 3EB0  
                    l4600 307E                      l3640 3992                      l3632 3938  
                    l3624 38F6                      l3480 3A38                      l3472 3A06  
                    l3464 39E0                      l3456 39BE                      l3528 3B16  
                    l3296 2804                      l3288 27A6                      l3544 3BC6  
                    l3536 3B5E                      l3560 35E0                      l3552 3582  
                    l3392 22DA                      l3384 226C                      l3376 2226  
                    l3368 21F0                      l2920 1CE8                      l2912 1CCE  
                    l2904 1CA2                      l3448 3F4A                      l3616 3522  
                    l3704 2F78                      l4088 14BA                      l3800 08EE  
                    l4280 19B6                      l4264 18B8                      l4256 1834  
                    l4248 17B8                      l4184 153A                      l4176 14F2  
                    l4432 3F02                      l4520 2CC6                      l4512 2C8E  
                    l4504 2C6A                      l4440 2B44                      l4338 418E  
                    l4370 41BE                      l4354 4112                      l4346 40FE  
                    l4418 3BD6                      l4426 41B0                      l3722 3EDE  
                    l4098 2FC2                      l3634 394C                      l3626 390A  
                    l3730 2880                      l3490 3A5E                      l3482 3A40  
                    l3474 3A0E                      l3466 39E4                      l3458 39C6  
                    l3298 281E                      l3538 3B8C                      l3562 35EE  
                    l3554 35B0                      l3394 2310                      l3386 2288  
                    l3378 2232                      l3570 407E                      l2930 1CFC  
                    l2922 1CEC                      l2914 1CDC                      l2906 1CA4  
                    l3618 3532                      l3650 3668                      l3706 2FA0  
                    l3810 0932                      l3802 08F8                      l4282 19E6  
                    l4274 1980                      l4266 18DC                      l4258 1844  
                    l4194 1560                      l4186 1546                      l4178 1516  
                    l4362 3D1E                      l4434 3F0A                      l4530 2D04  
                    l4522 2CCC                      l4514 2C94                      l4506 2C6E  
                    l4450 2B66                      l4442 2B48                      l4380 3CEC  
                    l4372 3CBA                      l4356 4118                      l4348 4106  
                    l3724 3EE2                      l3716 3E98                      l3644 4006  
                    l2860 384A                      l3636 3950                      l3628 3918  
                    l3740 28F4                      l3732 28A8                      l3492 3A66  
                    l3484 3A42                      l3476 3A1C                      l3468 39EC  
                    l3564 363E                      l3556 35C0                      l3548 3544  
                    l3396 231E                      l3388 2294                      l3572 4094  
                    l2940 1D10                      l2932 1D00                      l2924 1CF0  
                    l2916 1CE0                      l2908 1CAC                      l3580 3454  
                    l3652 36A6                      l3660 36E6                      l3708 2FB0  
                    l3900 0D08                      l3812 093E                      l3820 0954  
                    l3804 0900                      l4292 1AAE                      l4276 1992  
                    l4268 1900                      l4188 1548                      l4364 3D26  
                    l4436 3F26                      l4428 3EEA                      l4540 2D5C  
                    l4532 2D1C                      l4524 2CE2                      l4516 2CAA  
                    l4508 2C78                      l4460 2BA0                      l4452 2B70  
                    l4444 2B4C                      l4382 3CFE                      l4374 3CCA  
                    l4390 3C4E                      l4358 411A                      l3718 3E9C  
                    l3646 4020                      l2862 3868                      l2854 381C  
                    l3638 397E                      l3750 293E                      l3742 2910  
                    l3734 28C8                      l3486 3A48                      l3478 3A22  
                    l3566 3644                      l3558 35CE                      l3398 233C  
                    l3574 40A4                      l2950 1D4A                      l2942 1D14  
                    l2934 1D04                      l2926 1CF4                      l2918 1CE4  
                    l2870 1BE8                      l3590 34A4                      l3662 36F8  
                    l3654 36CE                      l3670 3DE0                      l3910 0D40  
                    l3902 0D10                      l3830 09DE                      l3822 097A  
                    l3814 0946                      l3806 0912                      l4294 1AC0  
                    l4278 19A8                      l4286 1A12                      l4198 1566  
                    l4366 3D34                      l4542 2D7A                      l4534 2D20  
                    l4526 2CE8                      l4518 2CB0                      l4470 2BDE  
                    l4462 2BAC                      l4454 2B7C                      l4446 2B50  
                    ?_pad 0011                      l4384 3D10                      l4376 3CDC  
                    l4392 3C5C                      l2864 389E                      l2856 382E  
                    l3760 29DC                      l3752 2948                      l3744 2922  
                    l3736 28D8                      l3728 2860                      l3488 3A4E  
                    l3496 3A70                      l2960 1D9C                      l2952 1D66  
                    l2944 1D18                      l2936 1D08                      l2928 1CF8  
                    l2880 1C28                      l2872 1BF6                      l3592 34A8  
                    l3584 3468                      l3656 36DA                      l3648 3648  
                    l3672 3DF0                      l3680 3DC8                      l3920 0D8A  
                    l3912 0D4E                      l3904 0D14                      l3840 0A4E  
                    l3832 09F6                      l3816 094A                      l3808 0920  
                    l4296 1AF4                      l4288 1A40                      l4368 3D5A  
                    l4544 2D84                      l4536 2D46                      l4528 2CFE  
                    l4472 2BE8                      l4464 2BB6                      l4456 2B92  
                    l4448 2B5A                      l4386 3D16                      l4378 3CE2  
                    l4394 3C62                      l2858 3840                      l3770 2AAC  
                    l3754 294E                      l3762 2A40                      l3746 2930  
                    l3738 28DA                      l3498 3A74                      l2970 1DE8  
                    l2962 1DAA                      l2954 1D76                      l2938 1D0C  
                    l2946 1D1C                      l2890 1C5A                      l2882 1C2A  
                    l2874 1BF8                      l3594 34B6                      l3586 3492  
                    l3578 343E                      l3666 373C                      l3690 2E3A  
                    l3674 3D80                      l3930 0DD0                      l3922 0D9C  
                    l3914 0D52                      l3906 0D1C                      l3834 0A00  
                    l3826 09B0                      l3818 094E                      l4546 2D90  
                    l4538 2D50                      l4490 2C3A                      l4482 2C0E  
                    l4474 2BF4                      l4466 2BC2                      l4458 2B96  
                    l4396 3C70                      l4388 3C48                      l3780 2AF6  
                    l3764 2A5A                      l3772 2ABC                      l3756 29D0  
                    l3748 2936                      l2980 1E28                      l2964 1DAC  
                    l2956 1D8C                      l2948 1D20                      l2892 1C5C  
                    l2876 1C08                      l2884 1C32                      l2868 1BDC  
                    l3588 3494                      l3692 2E48                      l3684 2DB0  
                    l3940 0EE4                      l3932 0E34                      l3916 0D64  
                    l3924 0DA4                      l3908 0D2E                      l3844 0A84  
                    l3828 09C2                      l4484 2C24                      l4476 2BFE  
                    l4468 2BDA                      l4398 3C76                      l3782 2B02  
                    l3774 2ACE                      l3766 2A78                      l3758 29D6  
                    l2990 1E52                      l2982 1E34                      l2974 1DFC  
                    l2966 1DB6                      l2958 1D98                      l2894 1C62  
                    l2886 1C42                      l2878 1C18                      l3686 2DD0  
                    l3678 3DB6                      l3950 0FA2                      l3942 0F18  
                    l3934 0E8C                      l3926 0DAC                      l3918 0D72  
                    l3870 0BE6                      l3862 0B1E                      l3846 0A96  
                    l3838 0A28                      l3790 089A                      l4486 2C28  
                    l3784 2B0A                      l3776 2ADE                      l3768 2A92  
                    l2984 1E38                      l2976 1E0C                      l2968 1DD8  
                    l2992 1E58                      l2896 1C70                      l2888 1C48  
                    l3696 2EB8                      l3688 2E26                      l3960 1076  
                    l3952 0FB2                      l3944 0F4A                      l3936 0EC0  
                    l3928 0DBC                      l3880 0C46                      l3872 0BEE  
                    l3864 0B52                      l3848 0AB2                      l3856 0ACE  
                    l3792 08A4                      l4496 2C3E                      l4488 2C2A  
                    l3778 2AE4                      l3786 2B1A                      l2994 1E7E  
                    l2986 1E46                      l2978 1E1A                      l2898 1C72  
                    l3698 2EF4                      l3970 10BE                      l3962 108A  
                    l3954 0FE6                      l3946 0F60                      l3938 0EC6  
                    l3882 0C58                      l3866 0B58                      l3874 0C20  
                    l3858 0AE8                      l3794 08B4                      l4498 2C54  
                    l2996 1EB2                      l2988 1E48                      l3980 117A  
                    l3972 10E2                      l3956 103C                      l3964 108E  
                    l3948 0F92                      l3884 0C60                      l3876 0C30  
                    l3868 0BB2                      l3796 08C2                      l2998 1EB4  
                    l3990 11C0                      l3982 1188                      l3974 1146  
                    l3966 109E                      l3958 1042                      l3894 0CA4  
                    l3886 0C7A                      l3878 0C34                      l3798 08CA  
                    l4598 15A4                      l3992 11C4                      l3976 1156  
                    l3984 1190                      l3968 10B2                      l3896 0CB6  
                    l3888 0C92                      l3994 11CA                      l3986 11A2  
                    l3978 1168                      l3898 0CD2                      l3996 11D6  
                    l3988 11B0                      l3998 11E6                      STR_1 0844  
                    STR_2 0834                      STR_3 0871                      STR_4 0854  
                    STR_5 0812                      STR_6 0801                      STR_7 0823  
                    STR_8 0863                      STR_9 087E                      u3000 1E28  
                    u3001 1E24                      u3010 1E46                      u3011 1E42  
                    u3100 1F84                      u3020 1E7E                      u3101 1F80  
                    u3021 1E7A                      u3110 1F9A                      u3030 1EC4  
                    u3111 1F96                      u3031 1EC0                      u4000 4094  
                    u3200 2088                      u3120 1FB0                      u3040 1EFA  
                    u4001 4090                      u3201 2084                      u3121 1FAC  
                    u3041 1EF6                      u3210 3FC2                      u3130 1FC4  
                    u3050 1F0A                      u4010 3454                      u3211 3FBE  
                    u3131 1FC0                      u3051 1F06                      u4011 3450  
                    u3300 324E                      u3220 414E                      u4100 396E  
                    u3140 1FDE                      u3060 1F36                      u4020 3488  
                    u3301 324A                      u3221 414A                      u4101 396A  
                    u3141 1FDA                      u3061 1F32                      u3310 3298  
                    u4110 397E                      u3150 2018                      u3070 1F46  
                    u4030 34B6                      u3230 4076                      u3311 3294  
                    u4111 397A                      u3151 2014                      u3071 1F42  
                    u4031 34B2                      u3231 4070                      u3320 32EC  
                    u4120 4020                      u3400 2502                      u3160 202A  
                    u3080 1F62                      u4040 34CA                      u4200 3E28  
                    u3240 4078                      u5000 134C                      u3321 32E8  
                    u4121 401C                      u3401 24FE                      u3161 2026  
                    u3081 1F5E                      u4041 34C6                      u4025 347E  
                    u5001 1348                      u3250 3164                      u3330 331E  
                    u3410 2546                      u3170 203A                      u3090 1F72  
                    u4050 34F2                      u4130 3688                      u4210 3E3A  
                    u5010 137A                      u3251 3160                      u3331 331A  
                    u3411 2542                      u3171 2036                      u3091 1F6E  
                    u4051 34EE                      u4211 3E36                      u5011 1376  
                    u5100 304C                      u3260 3196                      u3340 335C  
                    u3500 26E4                      u3420 2558                      u3180 205A  
                    u4060 3512                      u4140 36A6                      u4300 2ED8  
                    u4220 3DB0                      u5020 13FE                      u5101 3048  
                    u3261 3192                      u3341 3358                      u3501 26E0  
                    u3421 2554                      u3181 2056                      u4061 350E  
                    u4141 36A2                      u4221 3DAA                      u5021 13FA  
                    u5110 3102                      u3350 3386                      u3510 2702  
                    u3430 2568                      u3190 206C                      u4070 3522  
                    u4150 36CE                      u4310 2EF4                      u4230 3DB2  
                    u5030 1418                      u5111 30FC                      u3271 31C0  
                    u3351 3382                      u3511 26FE                      u3431 2564  
                    u3191 2068                      u4071 351E                      u4151 36CA  
                    u4135 367E                      u4311 2EF0                      u4207 3E1E  
                    u5031 1414                      u5200 3E4C                      u5120 3104  
                    u3280 31E4                      u3360 33B4                      u2800 3868  
                    u4080 38F6                      u4400 2892                      u3600 284C  
                    u3520 2722                      u3440 25A8                      u4160 36F8  
                    u4320 2F48                      u4240 3DC8                      u5040 1430  
                    u5201 3E48                      u3281 31E0                      u3361 33B0  
                    u2801 3864                      u4081 38F2                      u3601 2848  
                    u3521 271E                      u3441 25A4                      u4161 36F4  
                    u4305 2ECE                      u4241 3DC4                      u5041 142C  
                    u5210 3E62                      u5130 311A                      u3290 320E  
                    u3370 33FC                      u2810 389E                      u4090 3918  
                    u4410 28A8                      u3530 2734                      u3450 25E8  
                    u3610 20B6                      u4330 2F64                      u4250 2DF8  
                    u5050 148E                      u5211 3E5E                      u5131 3116  
                    u3291 320A                      u3371 33F8                      u2811 389A  
                    u4091 3914                      u4411 28A4                      u3531 2730  
                    u3451 25E4                      u3611 20B2                      u4331 2F60  
                    u5051 1488                      u5220 3E78                      u5140 312C  
                    u4500 2ABC                      u4420 28D8                      u3540 2762  
                    u3460 265E                      u3380 24E0                      u3700 2354  
                    u3620 20C8                      u2900 1CDC                      u2820 1BF6  
                    u4180 3732                      u4340 2FA0                      u4260 2E26  
                    u5060 1490                      u5300 16DA                      u5221 3E74  
                    u5141 3128                      u4501 2AB8                      u4421 28D4  
                    u3541 275E                      u3461 265A                      u3381 24DC  
                    u3701 2350                      u3621 20C4                      u2901 1CD8  
                    u2821 1BF2                      u4181 372C                      u4341 2F9C  
                    u4325 2F3E                      u4261 2E22                      u5230 3E8E  
                    u4350 40E6                      u4510 2ACE                      u4430 28F4  
                    u3550 2778                      u3470 2680                      u3390 24F2  
                    u3710 2374                      u3630 20D8                      u2910 1D4A  
                    u2830 1C08                      u4190 3734                      u4270 2E48  
                    u5070 14A6                      u5150 3770                      u5310 16F2  
                    u5231 3E8A                      u4351 40E0                      u4511 2ACA  
                    u4431 28F0                      u3551 2774                      u3471 267C  
                    u3391 24EE                      u3711 2370                      u3631 20D4  
                    u2911 1D46                      u2831 1C04                      u4175 370A  
                    u4271 2E44                      u4255 2DEE                      u5071 14A2  
                    u5151 376C                      u5311 16EE                      u4360 40E8  
                    u5080 2FFA                      u4520 2ADE                      u4440 2922  
                    u3800 39BE                      u3560 278C                      u3480 26AA  
                    u3720 2386                      u3640 2118                      u2920 1D62  
                    u2840 1C18                      u4600 09AA                      u5160 37A2  
                    u5400 1900                      u5320 1716                      u5240 1516  
                    u5081 2FF6                      u4521 2ADA                      u4441 291E  
                    u3801 39BA                      u3561 2788                      u3481 26A6  
                    u3721 2382                      u3641 2114                      u2921 1D5C  
                    u2841 1C14                      u5161 379E                      u5401 18FC  
                    u5321 1712                      u5241 1512                      u4370 3EB0  
                    u5090 3030                      u4530 2AF6                      u4450 2930  
                    u3810 39D8                      u3570 27A6                      u3490 26CE  
                    u3730 23B4                      u3650 212A                      u2930 1D64  
                    u2850 1C5A                      u4290 2EB4                      u4610 09C2  
                    u5170 37BE                      u5410 1992                      u5330 1750  
                    u5250 15E4                      u4371 3EAC                      u5091 302C  
                    u4531 2AF2                      u4451 292C                      u3811 39D4  
                    u3571 27A2                      u3491 26CA                      u3731 23B0  
                    u3651 2126                      u2851 1C56                      u4291 2EB0  
                    u4611 09BE                      u5171 37BA                      u5411 198E  
                    u5331 174C                      u5251 15E0                      u5500 3C02  
                    u4380 3EDE                      u2780 382E                      u4460 2A5A  
                    u3820 39FE                      u3900 3AEA                      u3580 27EE  
                    u3740 23CA                      u3660 213A                      u2940 1D8C  
                    u2860 1C70                      u4700 0C58                      u4620 0A4E  
                    u4540 08C2                      u5180 37D0                      u5420 1A40  
                    u5340 17F8                      u5260 15F2                      u4381 3EDA  
                    u2781 382A                      u4461 2A56                      u3821 39FA  
                    u3901 3AE6                      u3581 27EA                      u3741 23C6  
                    u3661 2136                      u2941 1D88                      u2861 1C6C  
                    u4285 2E5C                      u4701 0C54                      u4621 0A4A  
                    u4541 08BE                      u5181 37CC                      u5421 1A3C  
                    u5341 17F2                      u5261 15EE                      u5510 3C36  
                    u2790 3840                      u4470 2A78                      u4390 2890  
                    u3830 3A1C                      u3910 3B0E                      u3590 281E  
                    u3750 23DE                      u3670 2170                      u2950 1DAA  
                    u2870 1C82                      u4286 2E66                      u4710 0C7A  
                    u4630 0A7C                      u4550 0912                      u5190 37F8  
                    u5430 1AA6                      u5350 17FA                      u5270 1618  
                    u2791 383C                      u4471 2A74                      u4391 288A  
                    u3831 3A18                      u3911 3B0A                      u3591 281A  
                    u3751 23DA                      u3671 216C                      u2951 1DA6  
                    u2871 1C7E                      u4287 2E76                      u4711 0C76  
                    u4631 0A76                      u4551 090E                      u5191 37F4  
                    u5431 1AA0                      u5271 1614                      u5520 3C46  
                    u4480 2A92                      u3840 3A38                      u3920 3B4E  
                    u3760 23F8                      u3680 2180                      u2960 1DCA  
                    u2880 1C92                      u4800 0D72                      u4720 0CA0  
                    u4640 0A7E                      u4560 0920                      u5440 1AA8  
                    u5360 1812                      u5280 165C                      u5521 3C42  
                    u4481 2A8E                      u3841 3A34                      u3921 3B4A  
                    u3761 23F4                      u3681 217C                      u2961 1DC6  
                    u2881 1C8E                      u4801 0D6E                      u4721 0C9C  
                    u4561 091C                      u5361 180E                      u5281 1658  
                    u4490 2AAC                      u3850 3A5E                      u3930 3B8C  
                    u3770 2440                      u3690 22FA                      u2970 1DD8  
                    u2890 1CCE                      u4810 0D9C                      u4730 0CB6  
                    u4650 0A96                      u4570 0932                      u5450 1AC0  
                    u5370 1844                      u5290 16D8                      u5530 2C3A  
                    u5507 3BF8                      u4491 2AA8                      u3851 3A5A  
                    u3931 3B88                      u3771 243C                      u2971 1DD4  
                    u2891 1CCA                      u4811 0D98                      u4731 0CB2  
                    u4651 0A92                      u4571 092E                      u5451 1ABC  
                    u5371 1840                      u5291 16D2                      u5531 2C36  
                    u3860 3A82                      u3940 3BC0                      u3780 246E  
                    u2980 1DE8                      u4900 1168                      u4820 0EE4  
                    u4740 0CD2                      u4660 0B1A                      u4580 097A  
                    u5460 1B5C                      u5380 1886                      u5540 2C6A  
                    u5517 3C2C                      u3861 3A7E                      u3941 3BBC  
                    u3781 246A                      u2981 1DE4                      u4901 1164  
                    u4821 0EE0                      u4741 0CCE                      u4661 0B16  
                    u4581 0976                      u5461 1B58                      u5381 1882  
                    u5541 2C66                      u3870 3A9C                      u3950 3572  
                    u3790 24A8                      u2990 1E1A                      u4910 117A  
                    u4830 0F4A                      u4750 0D08                      u4670 0BAE  
                    u4590 09A8                      u5390 18DC                      u5470 3D76  
                    u3871 3A98                      u3951 356E                      u3791 24A4  
                    u3695 22F0                      u2991 1E16                      u4911 1176  
                    u4831 0F46                      u4751 0D04                      u4671 0BAA  
                    u4591 09A2                      u5391 18D8                      u5471 3D72  
                    u5607 2CBA                      u5480 3CCA                      u3880 3AB6  
                    u3960 35B0                      u4920 1188                      u4840 0F92  
                    u4760 0D2E                      u4680 0C20                      u5481 3CC6  
                    u3881 3AB2                      u3961 35AC                      u4921 1184  
                    u4841 0F8E                      u4761 0D2A                      u4681 0C1C  
                    u5617 2CD6                      u5490 3CFE                      u3890 3AD4  
                    u3970 35CE                      u4930 11A2                      u4850 0FA2  
                    u4770 0D40                      u4690 0C46                      u5707 4194  
                    u5491 3CFA                      u3891 3AD0                      u3971 35CA  
                    u4931 119E                      u4851 0F9E                      u4771 0D3C  
                    u4691 0C42                      u5627 2CF2                      u3980 35EE  
                    u4940 11B0                      u4860 103C                      u4780 0D4E  
                    u3981 35EA                      u4941 11AC                      u4861 1038  
                    u4781 0D4A                      u5637 2D0E                      u5557 2B86  
                    u3990 363E                      u4950 1208                      u4870 108A  
                    u4790 0D64                      u3991 363A                      u4951 1204  
                    u4871 1086                      u4791 0D60                      u5647 2D9A  
                    u5567 2BCC                      u4960 12DA                      u4880 10B2  
                    u5657 410A                      u4961 12D6                      u4881 10AE  
                    u5577 2C18                      u4970 12F6                      u4890 1156  
                    u5667 411C                      u4971 12F2                      u4891 1152  
                    u5587 2C48                      u4980 1308                      u5677 3C54  
                    u4981 1304                      u5597 2C9E                      u4990 1316  
                    u5687 3C68                      u4991 1312                      u5697 3C7C  
         lcd_write_char@a 0004           lcd_write_char@y 0003    __end_of_lcd_write_char 4126  
                    abs@a 0013                      _dbuf 0100                      _atoi 2FC2  
                    _main 2B44                      _dtoa 2860                      _prec 00C4  
                    _nout 00C0                      pad@i 0018                      pad@p 0015  
                    fsr1h 000FE2                      fsr2h 000FDA                      indf1 000FE7  
                    indf2 000FDF                      fsr1l 000FE1                      pad@w 001A  
                    fsr2l 000FD9             ___fpclassifyf 3648                      prodh 000FF4  
                    prodl 000FF3                      start 0000           ___fldiv@new_exp 0012  
         __end_of_Lcd_Cmd 41A2              ___param_bank 000000          ?_lcd_shift_right 0001  
                   ??_abs 0015                     ??_pad 0017             ___fltol@sign1 0009  
         __end_of___aodiv 32DA                     ?_atoi 0008              main@contador 005E  
         __end_of___fladd 209C                     ?_main 0001                     ?_dtoa 001C  
         __end_of___aomod 343E           __end_of___fldiv 2860           __end_of___awdiv 3A70  
         __end_of___flneg 40B6                     STR_10 0886                     STR_11 088E  
                   STR_20 0896                     STR_14 088A                     STR_15 0892  
                   STR_18 0896           __end_of___awmod 3B20           __end_of___flmul 24C6  
         __end_of___flsub 3F80           __end_of___fltol 3544           ___awdiv@divisor 0003  
         ___awdiv@counter 0005              vfpfcnvrt@fmt 0042                     _TRISC 000F94  
                   _flags 00C6                     _fputc 381C                     _fputs 3F80  
         __end_of_isdigit 40EE                     atoi@n 0015                     pad@fp 0011  
                   atoi@s 0008                     _width 00C2                     _putch 41D2  
                   dtoa@d 001E                     dtoa@i 003E                     dtoa@n 0036  
                   dtoa@p 0030                     dtoa@s 0034                     dtoa@w 0032  
         __end_of_isspace 3EEA           __end_of_isupper 407E                     tablat 000FF5  
         ?_lcd_write_char 0001                     status 000FD8           __end_of_sprintf 3F3A  
          ?___fpclassifyf 0001           __end_of_tolower 3DE0           __end_of_strncmp 381C  
        __end_of_Lcd_Port 3E98           __initialization 3FC4              __end_of_atoi 3152  
            __end_of_main 2DB0              __end_of_dtoa 2B44                    ??_atoi 000A  
                  ??_main 005C                    ??_dtoa 0026             __activetblptr 000002  
                  ?_fputc 0001                    ?_fputs 000A          ___awdiv@dividend 0001  
                  ?_putch 0001                 ??_Lcd_Cmd 0002             vfpfcnvrt@done 00A0  
            vfprintf@cfmt 0050          __end_of_lcd_init 3CB8                    ___flge 3544  
        __end_of_lcd_putc 3C48                    ___fleq 3B20                 ??___aodiv 0011  
               ??___fladd 0009                 ??___aomod 0011                    ___wmul 415C  
               ??___fldiv 0009                 ??___awdiv 0005                 ??___flneg 0005  
               ??___awmod 0005                 ??___flmul 0009                 ??___flsub 0022  
               ??___fltol 0005                    _efgtoa 089A                    _floorf 2DB0  
                  _entero 00E0                    clear_0 3FEA                    clear_1 3FF6  
        ___awdiv@quotient 0007           ___awmod@divisor 0003           ___awmod@counter 0005  
                  pad@buf 0013                    dtoa@fp 001C                    _strcpy 3DE0  
                  _strlen 4126                    fputc@c 0001                    fputs@c 000E  
                  fputs@i 000F                    fputs@s 000A                 ??_isdigit 0003  
         ___fpclassifyf@e 0009           ___fpclassifyf@u 000B           ___fpclassifyf@x 0001  
            __mediumconst 0000                 ??_isspace 0003                    tblptrh 000FF7  
               ??_isupper 0003                    tblptrl 000FF6                    tblptru 000FF8  
                  putch@c 0001          __end_of_vfprintf 3D80                 ??_sprintf 0052  
               ??_tolower 0009                 ??_strncmp 0007                ___flge@ff1 001A  
              ___flge@ff2 001E           ??___fpclassifyf 0005                ___fleq@ff1 0001  
              ___fleq@ff2 0005                __accesstop 0060   __end_of__initialization 3FFC  
              ___flneg@f1 0001             ___rparam_used 000001                ___fltol@f1 0001  
          __pcstackCOMRAM 0001              __pidataBANK0 41CC             __end_of_fputc 38E6  
           __end_of_fputs 3FC4             __end_of_putch 41D4          ??_lcd_shift_left 0004  
          lcd_gotoxy@temp 0008        __size_of_lcd_clear 000E                 ?_Lcd_Port 0001  
                 ??_fputc 0005                   ??_fputs 000E                   ??_putch 0001  
              __pbssBANK0 00B8                __pbssBANK1 0100                _efgtoa$673 0064  
              _efgtoa$668 0060                _efgtoa$677 0066                _efgtoa$669 0062  
              _efgtoa$678 0068                _efgtoa$679 006A                   ?___flge 001A  
                 ?___fleq 0001                   ?___wmul 0001                   ?_efgtoa 002E  
                 ?_floorf 001A                   ?_strcpy 0001                   ?_strlen 0001  
              _buffer_lcd 00C8        __size_of_vfpfcnvrt 06EA                _lcd_gotoxy 3CB8  
        ??_lcd_write_char 0002                ??_Lcd_Port 0001                 ?_lcd_init 0001  
               ?_lcd_putc 0005        lcd_write_char@temp 0002                   _Lcd_Cmd 4182  
                 __Hparam 0000                   __Lparam 0000         __end_of_lcd_clear 41CC  
         __size_of___flge 0104           __size_of___fleq 00AA                   ___aodiv 3152  
                 ___fladd 1BDC                   ___aomod 32DA                   ___fldiv 24C6  
                 ___awdiv 39AC                   ___flneg 407E                   ___awmod 3A70  
                 ___flmul 209C                   ___flsub 3F3A                   ___fltol 343E  
         __size_of___wmul 0026                 ?_vfprintf 004A              __psmallconst 0800  
         __size_of_efgtoa 0C58                   _decimal 00DC           __size_of_floorf 0212  
                 __pcinit 3FC4                   __ramtop 0800                   __ptext0 2B44  
                 __ptext1 3EEA                   __ptext2 3D1E                   __ptext3 14F2  
                 __ptext4 3746                   __ptext5 089A                   __ptext6 3D80  
                 __ptext7 4046                   __ptext8 3DE0                   __ptext9 2DB0  
         __size_of_strcpy 005C           __size_of_strlen 0036              __size_of_abs 0040  
            __size_of_pad 00C6                   _isdigit 40B6  __size_of_lcd_shift_right 000E  
        ___awmod@dividend 0001                   _isspace 3E98                   _isupper 4046  
                 efgtoa@c 0034                   efgtoa@d 0078                   efgtoa@e 0090  
                 efgtoa@f 0030                   efgtoa@g 008C                   efgtoa@h 0082  
                 efgtoa@i 008A                   efgtoa@l 0086                   efgtoa@m 0072  
                 efgtoa@n 0092                   efgtoa@p 007C                   efgtoa@t 006C  
                 efgtoa@u 0094                   efgtoa@w 007E                   atoi@neg 000E  
                 _sprintf 3EEA                   _tolower 3D80                ??_lcd_init 0004  
                 _strncmp 3746                ??_lcd_putc 0007      end_of_initialization 3FFC  
                 floorf@e 0028                   floorf@m 0024                   floorf@u 002A  
                 floorf@x 001A                   fputc@fp 0003             __Lmediumconst 0000  
                 fputs@fp 000C         __end_of_vfpfcnvrt 1BDC                efgtoa@mode 0081  
              efgtoa@sign 007A                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
               Lcd_Port@a 0001                ??_vfprintf 0050                   strcpy@d 0009  
                 strlen@a 0003                   strcpy@s 0007                   strlen@s 0001  
             ___fladd@grs 0010               ?_lcd_gotoxy 0004               ___fldiv@grs 0014  
             ___fldiv@rem 000D               ___flmul@grs 000E            __end_of___flge 3648  
          __end_of___fleq 3BCA               vfpfcnvrt@ap 0044               vfpfcnvrt@ct 00AC  
             vfpfcnvrt@fp 0040               vfpfcnvrt@ll 0098            __end_of___wmul 4182  
          __end_of_efgtoa 14F2            __end_of_floorf 2FC2                floorf@F527 00B8  
          __end_of_strcpy 3E3C            __end_of_strlen 415C       start_initialization 3FC4  
             __end_of_abs 4046               __end_of_pad 39AC         ??_lcd_shift_right 0004  
       __size_of_Lcd_Port 005C     __end_of___fpclassifyf 3746               vfprintf@fmt 004C  
                ??___flge 0022                  ??___fleq 0009       __size_of_lcd_gotoxy 0066  
                ??___wmul 0005                  ??_efgtoa 0035               __pdataBANK0 00DC  
                ??_floorf 001E                  ??_strcpy 0005                  ??_strlen 0003  
               ___fladd@a 0005                 ___fladd@b 0001                 ___fldiv@a 0005  
               ___fldiv@b 0001                 ___flmul@a 0005                 ___flmul@b 0001  
               ___flsub@a 001E                 ___flsub@b 001A             __pcstackBANK0 0060  
        ___aodiv@dividend 0001                  ?_Lcd_Cmd 0001         __size_of_lcd_init 0070  
       __size_of_lcd_putc 007E                  ?___aodiv 0001                  ?___fladd 0001  
                ?___aomod 0001                  ?___fldiv 0001                  ?___awdiv 0001  
        ___aodiv@quotient 0013                  ?___flneg 0001                  ?___awmod 0001  
                ?___flmul 0001                  ?___flsub 001A                  ?___fltol 0001  
               _lcd_clear 41BE         __size_of_vfprintf 0062               __smallconst 0800  
                ?_isdigit 0001                  ?_isspace 0001                  ?_isupper 0001  
                ?_sprintf 00B0                  ?_tolower 0007            __size_of_fputc 00CA  
          __size_of_fputs 0044                  ?_strncmp 0001            __size_of_putch 0002  
 __size_of_lcd_shift_left 000E            ___wmul@product 0005                  Lcd_Cmd@a 0003  
              ?_lcd_clear 0001                 _vfpfcnvrt 14F2         ___wmul@multiplier 0001  
               lcd_putc@a 0005                 lcd_putc@i 0009              ??_lcd_gotoxy 0005  
                _Lcd_Port 3E3C                vfpfcnvrt@c 00AF                vfpfcnvrt@f 00A8  
               copy_data0 3FD8          __size_of_Lcd_Cmd 0020   __size_of_lcd_write_char 0038  
                __Hrparam 0000                vfprintf@ap 004E                  __Lrparam 0000  
              vfprintf@fp 004A        __end_of_lcd_gotoxy 3D1E          __size_of___aodiv 0188  
        __size_of___fladd 04C0          __size_of___aomod 0164          __size_of___fldiv 039A  
        __size_of___awdiv 00C4          __size_of___flneg 0038          __size_of___awmod 00B0  
        __size_of___flmul 042A          __size_of___flsub 0046          __size_of___fltol 0106  
              ?_vfpfcnvrt 0040           ___aodiv@divisor 0009           ___aodiv@counter 0011  
         _lcd_shift_right 41A2        ___fpclassifyf@F465 00BC                sprintf@fmt 00B2  
                _atoi$735 0010                  _atoi$736 0014                  _atoi$737 0012  
        __size_of_isdigit 0038                  _dtoa$644 002E          __size_of_isspace 0052  
                __ptext10 3648                  __ptext11 343E                  __ptext20 39AC  
                __ptext12 3F3A                  __ptext21 2860                  __ptext13 1BDC  
                __ptext30 2FC2                  __ptext22 38E6                  __ptext14 407E  
                __ptext31 3E98                  __ptext23 4126                  __ptext15 209C  
                __ptext40 41BE                  __ptext32 40B6                  __ptext24 3F80  
                __ptext16 3544                  __ptext41 4182                  __ptext33 415C  
                __ptext25 381C                  __ptext17 3B20                  __ptext42 3E3C  
                __ptext34 41A2                  __ptext26 41D2                  __ptext18 24C6  
                __ptext35 41B0                  __ptext27 4006                  __ptext19 3A70  
                __ptext36 3BCA                  __ptext28 32DA                  __ptext37 40EE  
                __ptext29 3152                  __ptext38 3C48                  __ptext39 3CB8  
        __size_of_isupper 0038                  _lcd_init 3C48                  _lcd_putc 3BCA  
        __size_of_sprintf 0050          __size_of_tolower 0060                strcpy@dest 0001  
        __size_of_strncmp 00D6             __size_of_atoi 0190             __size_of_main 026C  
           __size_of_dtoa 02E4                  efgtoa@fp 002E                  efgtoa@ne 0070  
                efgtoa@pp 006E                  efgtoa@ou 0074                  _vfprintf 3D1E  
             ??_lcd_clear 0004               _isspace$766 0007          ___aomod@dividend 0001  
                isdigit@c 0001            _lcd_shift_left 41B0                 sprintf@ap 0054  
                isspace@c 0001                 strcpy@src 0003                  isupper@c 0001  
               strncmp@_l 0001                 strncmp@_r 0003               efgtoa@nmode 0080  
 __end_of_lcd_shift_right 41B0           ___aomod@divisor 0009               ??_vfpfcnvrt 0046  
         ___aomod@counter 0011             _vfpfcnvrt$693 00A2             _vfpfcnvrt$694 00A4  
           _vfpfcnvrt$699 00A6                  sprintf@f 0056                  tolower@c 0007  
                sprintf@s 00B0    __size_of___fpclassifyf 00FE                  strncmp@l 0008  
                strncmp@n 0005                  strncmp@r 000A    __end_of_lcd_shift_left 41BE  
           ___fladd@signs 000D              ___aodiv@sign 0012              ___fladd@aexp 000E  
            ___fladd@bexp 000F            _lcd_write_char 40EE              ___aomod@sign 0012  
